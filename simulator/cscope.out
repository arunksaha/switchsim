cscope 15 /private/arun/code/simulator -q 0000001145 0000142725
	@cli/common/CommonParserNodes.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/comm⁄/MﬁVp.h
>

6 
	~<°rög
>

8 
P¨£Node
 
NoNode
 ( "no", "delete something" );

9 
P¨£Node
 
ExôNode
 ( "exit", "exitÅhe current configuration mode" );

10 
P¨£Node
 
EndNode
 ( "end", "exitÅhe configuration mode completely" );

11 
P¨£Node
 
Rëu∫Node
 ( "RETURN", "press <return>" );

12 
P¨£Node
 
I≈utNumbîNode
 ( "integer", "enterán integer" );

13 
P¨£Node
 
ShutdownNode
 ( "shutdown",

15 
P¨£Node
 
Simuœti⁄Node
 ( "simulation",

17 
P¨£Node
 
Ho°«meNode
 ( "hostname", "specify hostname ofÅhis device" );

18 
P¨£Node
 
Cou¡îsNode
 ( "counters", "display various counter values" );

19 
P¨£Node
 
MacTabÀNode
 ( "mac-table",

22 
P¨£Node
 
P‹tNode
 ( "port", "port/interface" );

23 
P¨£Node
 
VbNode
 ( "domain",

25 
P¨£Node
 
EpuNode
 ( "epu", "EVCÖer UNI" );

27 
P¨£Node
 
DŸ1adNode
 ( "dot1ad", "match frames with TPID=0x88a8" );

28 
P¨£Node
 
DŸ1qNode
 ( "dot1q", "match frames with TPID=0x8100" );

29 
P¨£Node
 
CosNode
 ( "cos", "specify cos value(s)" );

30 
P¨£Node
 
VœnIdNode
 ( "vlanid", "specify vlan id(s)" );

31 
P¨£Node
 
O≥nBø˚Node
 ( "(",

33 
P¨£Node
 
Clo£Bø˚Node
 ( ")",

36 
	$¥ötP‹tIdHñp
()

38 c⁄° 
°d
::
°rög
 
p‹t
 = 
P‹tNode
.
	`tokíSåög
();

39 c⁄° 
n
 = 
	`p‹tMgr
()->
	`numP‹ts
();

40 
cout
 << "\t" << 
p‹t
 << "-id\t\t" <<

41 "choo£á " << 
p‹t
 << "ám⁄g 0Åÿ" << 
n
 - 1 << 
ídl
;

42 
	}
}

44 
	$¥ötEpuIdHñp
()

46 
°d
::
°rög
 
ïu
 = 
EpuNode
.
	`tokíSåög
();

47 
cout
 << "\t" << 
ïu
 << "-id\t\t" << "specifyá " <<Épu <<

48 " idÅÿ¸óã/c⁄figuª/dñëe" << 
ídl
;

49 
	}
}

51 
	$¥ötVbIdHñp
()

53 
°d
::
°rög
 
vb
 = 
VbNode
.
	`tokíSåög
();

54 
cout
 << "\t" << 
vb
 << "-id\t\t" << "specifyá " << vb <<

55 " id f‹ f‹w¨dög behavi‹ássocüti⁄" << 
ídl
;

56 
	}
}

	@cli/common/CommonParserNodes.h

4 #i‚de‡
CLI_COMMON_COMMONPARSERNODES_H


5 
	#CLI_COMMON_COMMONPARSERNODES_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

9 
P¨£Node
 
NoNode
;

10 
P¨£Node
 
ExôNode
;

11 
P¨£Node
 
EndNode
;

12 
P¨£Node
 
Rëu∫Node
;

13 
P¨£Node
 
I≈utNumbîNode
;

14 
P¨£Node
 
ShutdownNode
;

15 
P¨£Node
 
Simuœti⁄Node
;

16 
P¨£Node
 
Ho°«meNode
;

17 
P¨£Node
 
Cou¡îsNode
;

18 
P¨£Node
 
MacTabÀNode
;

20 
P¨£Node
 
P‹tNode
;

21 
P¨£Node
 
VbNode
;

22 
P¨£Node
 
EpuNode
;

24 
P¨£Node
 
DŸ1adNode
;

25 
P¨£Node
 
DŸ1qNode
;

26 
P¨£Node
 
CosNode
;

27 
P¨£Node
 
VœnIdNode
;

28 
P¨£Node
 
O≥nBø˚Node
;

29 
P¨£Node
 
Clo£Bø˚Node
;

31 
¥ötP‹tIdHñp
();

32 
¥ötEpuIdHñp
();

33 
¥ötVbIdHñp
();

	@cli/common/Frame.cpp

4 
	~<˛i/comm⁄/Ty≥s.h
>

5 
	~<˛i/comm⁄/Føme.h
>

7 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
MacAddr
 c⁄° & 
	gx
 )

9 
	gx
.
dump
–
o
 );

10  
	go
;

13 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
VœnTag
 c⁄° & 
	gx
 )

15 
	gx
.
dump
–
o
 );

16  
	go
;

19 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
VœnHódî
 c⁄° & 
	gx
 )

21 
	gx
.
dump
–
o
 );

22  
	go
;

25 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
Føme
 c⁄° & 
	gx
 )

27 
	gx
.
dump
–
o
 );

28  
	go
;

31 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
Paylﬂd
 c⁄° & 
	gx
 )

33 
	gx
.
dump
–
o
 );

34  
	go
;

37 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam & 
o
, 
Fcs
 c⁄° & 
	gx
 )

39 
	gx
.
dump
–
o
 );

40  
	go
;

45 
	g°d
::
°rög


46 
	$VœnTy≥ToSåög
–
VœnTy≥
 
vt
 )

48 
°d
::
°rög
 
vœnTy≥Så
 = "ERROR";

50  
vt
 )

52 
VœnTy≥NuŒ
:

53 
vœnTy≥Så
 = "unassigned";

56 
VœnTy≥DŸ1q
:

57 
vœnTy≥Så
 = "dot1q";

60 
VœnTy≥DŸ1ad
:

61 
vœnTy≥Så
 = "dot1ad";

65  
vœnTy≥Så
;

66 
	}
}

70 
	gMacAddr
::
	$MacAddr
()

71 : 
	$addr_
( 0 )

73 
	}
}

75 
MacAddr
::
	$MacAddr
–
x
 )

76 : 
	$addr_
–
x
 )

78 
	}
}

80 
MacAddr
::~
	$MacAddr
()

82 
	`˛ór
();

83 
	}
}

86 
	gMacAddr
::
	$˛ór
()

88 
addr_
 = 0;

89 
	}
}

91 
	g°d
::
o°ªam
 &

92 
MacAddr
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

94 
o
 << 
addr_
;

95  
	go
;

98 
boﬁ


99 
	gMacAddr
::
›î©‹
==–
MacAddr
 c⁄° & 
rhs
 ) const

101 –
addr_
 =
rhs
.addr_ );

104 
boﬁ


105 
	gMacAddr
::
›î©‹
!=–
MacAddr
 c⁄° & 
rhs
 ) const

107 –!–*
this
 =
rhs
 ) );

110 
boﬁ


111 
	gMacAddr
::
›î©‹
<–
MacAddr
 c⁄° & 
rhs
 ) const

113 –
addr_
 < 
rhs
.addr_ );

118 
	gVœnTag
::
	$VœnTag
()

119 : 
	`vœnTy≥_
–
VœnTy≥NuŒ
 ),

120 
	`cosVÆue_
–
DeÁu…CosVÆue
 ),

121 
	$vœnidVÆue_
–
DeÁu…VœnIdVÆue
 )

123 
	}
}

126 
	gVœnTag
::
	$˛ór
()

128 
vœnTy≥_
 = 
VœnTy≥NuŒ
;

129 
cosVÆue_
 = 
DeÁu…CosVÆue
;

130 
vœnidVÆue_
 = 
DeÁu…VœnIdVÆue
;

131 
	}
}

133 
	g°d
::
o°ªam
 &

134 
VœnTag
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

136 if–
vœnTy≥_
 =
VœnTy≥NuŒ
 )

138  
o
;

141 
	g°d
::
°rög
 
vœnTy≥Så
 = 
VœnTy≥ToSåög
–
vœnTy≥_
 );

143 
	go
 << 
	gvœnTy≥Så
;

144 if–
	gcosVÆue_
 !
DeÁu…CosVÆue
 )

146 
o
 << " co†" << 
cosVÆue_
 << " ";

148 
	go
 << " (vœnid " << 
	gvœnidVÆue_
 << ")";

150  
	go
;

155 
	gVœnHódî
::
	$VœnHódî
()

157 
	`˛ór
();

158 
	}
}

161 
	gVœnHódî
::
	$˛ór
()

163  
ui
 = 0; uò< 
MaxVœnTags
; ++ui )

165 
èg_
[ 
ui
 ].
	`˛ór
();

167 
	}
}

169 
	g°d
::
o°ªam
 &

170 
VœnHódî
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

172  
ui
 = 0; 
	gui
 < 
	gMaxVœnTags
; ++ui )

174 
	go
 << 
	gèg_
[ 
ui
 ];

175 
	go
 << " ";

178  
	go
;

182 
	gVœnHódî
::
	$numVœnTags
() const

184 
x
 = 0;

186 if–
èg_
[ 0 ].
vœnTy≥_
 !
VœnTy≥NuŒ
 )

188 
x
 += 1;

190 if–
èg_
[ 1 ].
vœnTy≥_
 !
VœnTy≥NuŒ
 )

192 
x
 += 1;

196  
x
;

197 
	}
}

201 
	gFøme
::
	$Føme
()

202 : 
	`da_
( 0 ),

203 
	`ß_
( 0 ),

204 
	`vœnHódî_
(),

205 
	`‰ameEthîTy≥_
–
EthîTy≥Ipv4
 ),

206 
	`∑ylﬂd_
(),

207 
	$fcs_
()

209 
	}
}

211 
	gFøme
::~
	$Føme
()

213 
	`˛ór
();

214 
	}
}

217 
	gFøme
::
	$˛ór
()

219 
da_
 = 0;

220 
ß_
 = 0;

221 
vœnHódî_
.
	`˛ór
();

222 
‰ameEthîTy≥_
 = 
EthîTy≥Ipv4
;

225 
	}
}

227 
	g°d
::
o°ªam
 &

228 
Føme
::
dump
–
°d
::
o°ªam
 & 
os
 ) const

230 
os
 << "DA = " << 
da_
;

231 
	gos
 << ", SA = " << 
	gß_
;

232 if–
	gvœnHódî_
.
numVœnTags
() != 0 )

234 
os
 << ", VœnHódî = " << 
vœnHódî_
;

236 
	gos
 << " [ ... ]";

241  
	gos
;

244 
FømeTy≥


245 
	gFøme
::
	$‰ameTy≥
() const

247 
FømeTy≥
 
·
 = 
FømeTy≥Unknown
;

249 
x
 = 
	`vœnHódî
().
	`numVœnTags
();

251 if–
x
 == 0 )

253 
·
 = 
U¡agged
;

255 if–
x
 == 1 )

257 
·
 = 
SögÀTagged
;

259 if–
x
 == 2 )

261 
·
 = 
DoubÀTagged
;

265 
	`as£π
( 0 );

268  
·
;

269 
	}
}

271 
MacAddr


272 
	gFøme
::
	$d°Addr
() const

274  
da_
;

275 
	}
}

278 
	gFøme
::
	$d°Addr
–
MacAddr
 c⁄° & 
x
 )

280 
	`as£π
–
x
 != 0 );

281 
da_
 = 
x
;

282 
	}
}

284 
MacAddr


285 
	gFøme
::
	$§cAddr
() const

287  
ß_
;

288 
	}
}

291 
	gFøme
::
	$§cAddr
–
MacAddr
 c⁄° & 
x
 )

293 
	`as£π
–
x
 != 0 );

294 
ß_
 = 
x
;

295 
	}
}

298 
	gFøme
::
	$numVœnTags
() const

300 –
	`vœnHódî
().
	`numVœnTags
() );

301 
	}
}

303 
	gVœnHódî
 &

304 
	gFøme
::
	$vœnHódî
()

306  
vœnHódî_
;

307 
	}
}

309 
VœnHódî
 const &

310 
	gFøme
::
	$vœnHódî
() const

312  
vœnHódî_
;

313 
	}
}

316 
	gFøme
::
	$vœnHódî
–
VœnHódî
 c⁄° & 
x
 )

318 
vœnHódî_
 = 
x
;

319 
	}
}

321 
Paylﬂd


322 
	gFøme
::
	$∑ylﬂd
() const

324  
∑ylﬂd_
;

325 
	}
}

328 
	gFøme
::
	$∑ylﬂd
–
Paylﬂd
 c⁄° & 
x
 )

330 
∑ylﬂd_
 = 
x
;

331 
	}
}

333 
Fcs


334 
	gFøme
::
	$fcs
() const

336  
fcs_
;

337 
	}
}

340 
	gFøme
::
	$fcs
–
Fcs
 c⁄° & 
x
 )

342 
fcs_
 = 
x
;

343 
	}
}

	@cli/common/Frame.h

4 #i‚de‡
FRAME_H


5 
	#FRAME_H


	)

7 
˛ass
 
	gMacAddr
;

8 
˛ass
 
	gVœnTag
;

9 
˛ass
 
	gVœnHódî
;

10 
˛ass
 
	gFøme
;

11 
˛ass
 
	gPaylﬂd
;

12 
˛ass
 
	gFcs
;

16 
	eVœnTy≥
 {

17 
	mVœnTy≥NuŒ
 = 0,

18 
	mVœnTy≥DŸ1q
,

19 
	mVœnTy≥DŸ1ad


22 
	g°d
::
°rög
 
VœnTy≥ToSåög
–
VœnTy≥
 );

24 
	eEthîTy≥
 {

25 
	mEthîTy≥Ipv4
 = 0x0800,

26 
	mEthîTy≥DŸ1q
 = 0x8100,

27 
	mEthîTy≥DŸ1ad
 = 0x88A8

30 
	eFømeTy≥
 {

31 
	mU¡agged
 = 0,

32 
	mSögÀTagged
,

33 
	mDoubÀTagged
,

34 
	mFømeTy≥Unknown


38 ˛as†
	cMacAddr
 {

40 
	mpublic
:

42 
MacAddr
();

43 ~
MacAddr
();

44 
MacAddr
( );

46 
boﬁ
 
	m›î©‹
==–
MacAddr
 const & ) const;

47 
boﬁ
 
	m›î©‹
!=–
MacAddr
 const & ) const;

48 
boﬁ
 
	m›î©‹
< ( 
MacAddr
 const & ) const;

50 
boﬁ
 
	$uniˇ°Addr
() const;

51 
boﬁ
 
	$mu…iˇ°Addr
() const;

53 
	`˛ór
();

54 
°d
::
o°ªam
 & 
	`dump
( std::ostream & ) const;

56 
¥iv©e
:

58 
addr_
;

61 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
MacAddr
 const & );

64 ˛as†
	cVœnTag
 {

66 
public
:

68 
	`VœnTag
();

70 
	`˛ór
();

71 
°d
::
o°ªam
 & 
	`dump
( std::ostream & ) const;

73 
°d
::
°rög
 
	$toSåög
() const;

77 íum { 
DeÁu…CosVÆue
 = 0xFFFF, 
DeÁu…VœnIdVÆue
 = 0xFFFF };

79 
VœnTy≥
 
vœnTy≥_
;

80 
cosVÆue_
;

81 
vœnidVÆue_
;

82 
	}
};

84 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
VœnTag
 const & );

87 ˛as†
	cVœnHódî
 {

89 
	mpublic
:

91 
VœnHódî
();

93 
˛ór
();

94 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

96 
	$numVœnTags
() const;

98 
boﬁ
 
	`c⁄èös
–
VœnHódî
 const &, signed & );

102 íum { 
MaxVœnTags
 = 2 };

104 
VœnTag
 
èg_
[ 2 ];

105 
	}
};

107 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
VœnHódî
 const & );

110 ˛as†
	cPaylﬂd
 {

112 
	mpublic
:

114 
	$Paylﬂd
()

115 : 
	`c⁄ã¡s_
 ( "DummyPayload" )

119 
°d
::
o°ªam
 & 
	`dump
–°d::o°ªam & 
o
 ) const {

120 
o
 << 
c⁄ã¡s_
;

121  
o
;

122 
	}
}

124 
	g¥iv©e
:

125 
°d
::
°rög
 
c⁄ã¡s_
;

128 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
Paylﬂd
 const & );

131 ˛as†
	cFcs
 {

133 
	mpublic
:

135 
	$Fcs
()

136 : 
	`c⁄ã¡s_
( "DummyFcs" )

140 
°d
::
o°ªam
 & 
	`dump
–°d::o°ªam & 
o
 ) const {

141 
o
 << 
c⁄ã¡s_
;

142  
o
;

143 
	}
}

145 
	g¥iv©e
:

146 
°d
::
°rög
 
c⁄ã¡s_
;

149 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
Fcs
 const & );

152 ˛as†
	cFøme
 {

154 
	mpublic
:

156 
Føme
();

157 ~
Føme
();

159 
˛ór
();

160 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

162 
FømeTy≥
 
	$‰ameTy≥
() const;

164 
MacAddr
 
	$d°Addr
() const;

165 
	`d°Addr
–
MacAddr
 const & );

167 
MacAddr
 
	$§cAddr
() const;

168 
	`§cAddr
–
MacAddr
 const & );

170 
	$numVœnTags
() const;

171 
VœnHódî
 & 
	`vœnHódî
();

172 
VœnHódî
 c⁄° & 
	$vœnHódî
() const;

173 
	`vœnHódî
–
VœnHódî
 const & );

175 
Paylﬂd
 
	$∑ylﬂd
() const;

176 
	`∑ylﬂd
–
Paylﬂd
 const & );

178 
Fcs
 
	$fcs
() const;

179 
	`fcs
–
Fcs
 const & );

181 
¥iv©e
:

183 
MacAddr
 
da_
;

184 
MacAddr
 
ß_
;

185 
VœnHódî
 
vœnHódî_
;

186 
EthîTy≥
 
‰ameEthîTy≥_
;

187 
Paylﬂd
 
∑ylﬂd_
;

188 
Fcs
 
fcs_
;

191 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
Føme
 const & );

	@cli/common/Types.cpp

4 
	~<˛i/comm⁄/Ty≥s.h
>

6 
	g°d
::
o°ªam
&

7 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
NumbîTu∂e
 c⁄° & 
	gx
 )

9 
	gx
.
dump
–
o
 );

10  (
	go
);

13 
	g°d
::
o°ªam
 &

14 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
NumbîLi°
 c⁄° & 
	gx
 )

16 
	gx
.
dump
–
o
 );

17  (
	go
);

22 
	gNumbîTu∂e
::
	$NumbîTu∂e
()

23 : 
	`lowî_
( 0xFFFF ),

24 
	$uµî_
( 0xFFFF )

26 
	}
}

28 
	g°d
::
o°ªam
 &

29 
NumbîTu∂e
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

31 if–
lowî_
 =
uµî_
 )

33 
o
 << 
lowî_
;

37 
	go
 << 
	glowî_
 << "-" << 
	guµî_
;

39  
	go
;

44 
	gNumbîLi°
::
	$NumbîLi°
()

45 : 
	$numbîTu∂eVe˘‹_
()

47 
	}
}

49 
NumbîLi°
 &

50 
NumbîLi°
::
›î©‹
=–NumbîLi° c⁄° & 
rhs
 )

52 
numbîTu∂eVe˘‹_
 = 
rhs
.numberTupleVector_;

53  *
	gthis
;

57 
	gNumbîLi°
::
	$ö£πE¡ry
–
NumbîTu∂e
 c⁄° & 
e
 )

59 
numbîTu∂eVe˘‹_
.
	`push_back
–
e
 );

60 
	}
}

63 
	gNumbîLi°
::
	$˛ór
()

65 
numbîTu∂eVe˘‹_
.
	`˛ór
();

66 
	}
}

68 
	g°d
::
o°ªam
 &

69 
NumbîLi°
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

71 
NumbîTu∂eVe˘‹C⁄°Iå
 
ô
 = 
numbîTu∂eVe˘‹_
.
begö
();

73 
size_t
 
	gvsize
 = 
numbîTu∂eVe˘‹_
.
size
();

74 
size_t
 
	gvcou¡
 = 0;

76  
	gô
 !
numbîTu∂eVe˘‹_
.
íd
() )

78 
o
 << (*
ô
);

80 ++
	gô
;

81 ++
	gvcou¡
;

83 if–
	gvcou¡
 !
vsize
 )

85 
o
 << ",";

89  
	go
;

92 
boﬁ


93 
	gNumbîLi°
::
	$em±y
() const

95 –
numbîTu∂eVe˘‹_
.
	`em±y
() );

96 
	}
}

98 
boﬁ


99 
	gNumbîLi°
::
	$c⁄èös
–c⁄° 
x
 ) const

101 
NumbîTu∂e
 
numbîTu∂e
;

102 
NumbîTu∂eVe˘‹C⁄°Iå
 
ô
 = 
numbîTu∂eVe˘‹_
.
	`begö
();

104  
ô
 !
numbîTu∂eVe˘‹_
.
	`íd
() )

106 
numbîTu∂e
 = (*
ô
);

108 if–(
numbîTu∂e
.
lowî_
 <
x
Ë&& (x <numbîTu∂e.
uµî_
) )

110  
åue
;

113 if–
numbîTu∂e
.
lowî_
 > 
x
 )

118 ++
ô
;

121  
Ál£
;

122 
	}
}

	@cli/common/Types.h

4 #i‚de‡
CLI_COMMON_TYPES_H


5 
	#CLI_COMMON_TYPES_H


	)

7 
	~<as£π.h
>

8 
	~<io°ªam
>

9 
	~<o°ªam
>

10 
	~<f°ªam
>

11 
	~<ve˘‹
>

12 
	~<°rög
>

15 
	tCou¡î
;

18 ˛as†
	cNumbîTu∂e
 {

20 
	mpublic
:

22 
NumbîTu∂e
();

23 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

27 
	mlowî_
;

28 
	muµî_
;

31 
	g°d
::
	tve˘‹
< 
	tNumbîTu∂e
 > 
	tNumbîTu∂eVe˘‹
;

32 
	g°d
::
	tve˘‹
< 
	tNumbîTu∂e
 >::
	tc⁄°_ôî©‹


33 
	tNumbîTu∂eVe˘‹C⁄°Iå
;

35 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
NumbîTu∂e
 const & );

38 ˛as†
	cNumbîLi°
 {

40 
	mpublic
:

42 
NumbîLi°
();

43 
	mNumbîLi°
 & 
	m›î©‹
=–
NumbîLi°
 const & );

45 
˛ór
();

46 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

48 
ö£πE¡ry
–
NumbîTu∂e
 const & );

49 
boﬁ
 
	$em±y
() const;

50 
boﬁ
 
	$c⁄èös
( const ) const;

54 
NumbîTu∂eVe˘‹
 
numbîTu∂eVe˘‹_
;

57 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
NumbîLi°
 const & );

	@cli/config/ConfigParser.cpp

4 
	~<˛i/c⁄fig/C⁄figP¨£r.h
>

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<•úô/•úôö˛ude.h
>

8 
usög
 
«me•a˚
 
	gboo°
::
•úô
;

9 
usög
 
«me•a˚
 
	gboo°
::
•úô
::
˛assic
;

11 
C⁄figP¨£rH™dÀr
 * 
	g˝h_C›y_
;

13 
P¨£rMaö
 * 
MyP¨£rMaö_
;

15 
	gC⁄figP¨£r
::
	$C⁄figP¨£r
()

17 
˝h_
 = 
√w
 
C⁄figP¨£rH™dÀr
;

18 
	`as£π
–
˝h_
 );

20 
˝h_C›y_
 = 
˝h_
;

21 
	}
}

23 
	gC⁄figP¨£r
::~
	$C⁄figP¨£r
()

25 if–
˝h_
 )

27 
dñëe
 
˝h_
;

28 
˝h_
 = 0;

30 
˝h_C›y_
 = 0;

32 
	}
}

36 
	gP¨£rModeCh™ge
;

37 
boﬁ
 
	gHñpFœg
;

38 
	gC⁄figP¨am1
;

41 
	$ac˚±C⁄figHñpEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

43 
HñpFœg
 = 
åue
;

44 
	}
}

46 
	$doC⁄figHñp
–c⁄° * 
a
, c⁄° * 
b
 )

48 
	`¥ötHñp
–
ExôNode
 );

49 
	`¥ötHñp
–
EndNode
 );

50 
	`¥ötHñp
–
P‹tNode
 );

51 
	}
}

53 
	$doC⁄figP‹tHñp
–c⁄° * 
a
, c⁄° * 
b
 )

55 
	`¥ötP‹tIdHñp
();

56 
	}
}

58 
	$gëC⁄figP‹tId
–c⁄° 
x
 )

60 
C⁄figP¨am1
 = 
x
;

61 
	}
}

63 
	$doC⁄figP‹tIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

65 
	`¥ötHñp
–
Rëu∫Node
 );

66 
	}
}

68 
	$ac˚±C⁄figP‹tIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

70 c⁄° 
boﬁ
 
ac˚±abÀP‹tId
 = 
˝h_C›y_
->
	`vÆidP‹tId
–
C⁄figP¨am1
 );

71 if–!
ac˚±abÀP‹tId
 )

73 
cout
 << "ERROR: InvÆidÖ‹ànumbî" << 
ídl
;

77 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 = 
C⁄figP¨am1
;

78 
˝h_C›y_
->
	`modifyP‹tN
–
C⁄figP¨am1
 );

79 
C⁄figP¨am1
 = 0;

81 
P¨£rModeCh™ge
 = +1;

82 
	}
}

84 
	$doC⁄figExôHñp
–c⁄° * 
a
, c⁄° * 
b
 )

86 
	`¥ötHñp
–
Rëu∫Node
 );

87 
	}
}

89 
	$doC⁄figExôEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

91 
P¨£rModeCh™ge
 = -1;

92 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << 
ídl
;

93 
	}
}

95 
	$doC⁄figEndHñp
–c⁄° * 
a
, c⁄° * 
b
 )

97 
	`¥ötHñp
–
Rëu∫Node
 );

98 
	}
}

100 
	$doC⁄figEndEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

102 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 = 0;

103 
P¨£rModeCh™ge
 = -2;

104 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << 
ídl
;

105 
	}
}

109 
	gC⁄figGømm¨
 : 
public
 
gømm¨
< 
C⁄figGømm¨
 >

111 
ãm∂©e
 <
ty≥«me
 
Sˇ¬îT
>

112 
	sdeföôi⁄


114 
deföôi⁄
–
C⁄figGømm¨
 const& )

117 
HñpTok
 = 
ch_p
('?'Ë>> *
¥öt_p
 >> 
íd_p
[ &
ac˚±C⁄figHñpEﬁ
 ];

118 
	gP‹tTok
 = 
°r_p
–
P‹tNode
.
tokí
() );

119 
	gExôTok
 = 
°r_p
–
ExôNode
.
tokí
() );

120 
	gEndTok
 = 
°r_p
–
EndNode
.
tokí
() );

123 
	gex¥essi⁄
 = 
C⁄figHñp
 | 
P‹tRuÀNode
 | 
ExôRuÀNode
 | 
EndRuÀNode
;

124 
	gC⁄figHñp
 = 
HñpTok
[ &
doC⁄figHñp
 ];

126 
	gP‹tRuÀNode
 = 
P‹tTok
 >> (
P‹tHñp
 | 
P‹tIdRuÀNode
);

127 
	gP‹tHñp
 = 
HñpTok
[ &
doC⁄figP‹tHñp
 ];

128 
	gP‹tIdRuÀNode
 = 
uöt_p
[ &
gëC⁄figP‹tId
 ] >> (
P‹tIdHñp
 | 
P‹tIdEﬁ
);

129 
	gP‹tIdHñp
 = 
HñpTok
[ &
doC⁄figP‹tIdHñp
 ];

130 
	gP‹tIdEﬁ
 = 
íd_p
[ &
ac˚±C⁄figP‹tIdEﬁ
 ];

132 
	gExôRuÀNode
 = 
ExôTok
 >> (
ExôHñp
 | 
ExôEﬁ
);

133 
	gExôHñp
 = (
HñpTok
)[ &
doC⁄figExôHñp
 ];

134 
	gExôEﬁ
 = 
íd_p
[ &
doC⁄figExôEﬁ
 ];

136 
	gEndRuÀNode
 = 
EndTok
 >> (
EndHñp
 | 
EndEﬁ
);

137 
	gEndHñp
 = (
HñpTok
)[ &
doC⁄figEndHñp
 ];

138 
	gEndEﬁ
 = 
íd_p
[ &
doC⁄figEndEﬁ
 ];

141 
	gruÀ
< 
	gSˇ¬îT
 > 
	gHñpTok
, 
	gP‹tTok
, 
	gExôTok
, 
	gex¥essi⁄
,

142 
	gC⁄figHñp
, 
	gP‹tRuÀNode
, 
	gP‹tHñp
,

143 
	gP‹tIdRuÀNode
, 
	gP‹tIdHñp
, 
	gP‹tIdEﬁ
,

144 
	gExôRuÀNode
, 
	gExôHñp
, 
	gExôEﬁ
,

145 
	gEndTok
, 
	gEndRuÀNode
, 
	gEndHñp
, 
	gEndEﬁ


148 
	gruÀ
< 
	gSˇ¬îT
 > c⁄°& 
°¨t
() const

150  
	gex¥essi⁄
;

156 
	gC⁄figP¨£r
::
	$c⁄figP¨£r
(

157 
°rög
 c⁄° & 
öputSåög
,

158 
boﬁ
 & 
hñpReque°ed
,

159 
C⁄figSèã
 * 
c
 )

161 
C⁄figP¨am1
 = 0;

162 
P¨£rModeCh™ge
 = 0;

163 
HñpFœg
 = 
Ál£
;

165 
	`as£π
–
c
 );

166 
c
->
cuºP¨£rMode_
 = 
P¨£rModeC⁄fig
;

168 
C⁄figGømm¨
 
g
;

169 
∑r£_öfo
<> 
∑r£Info
 =

170 
	`∑r£
(
öputSåög
.
	`c_°r
(), 
g
, 
•a˚_p
);

174 if–
∑r£Info
.
fuŒ
 )

178 if–
P¨£rModeCh™ge
 != 0 )

180 
	`as£π
–
HñpFœg
 =
Ál£
 );

182 if–
P¨£rModeCh™ge
 == +1 )

183 
c
->
cuºP¨£rMode_
 = 
P¨£rModeP‹t
;

184 if–
P¨£rModeCh™ge
 == -1 )

185 
c
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

186 if–
P¨£rModeCh™ge
 == -2 )

187 
c
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

189 
	`as£π
( 0 );

192 if–
HñpFœg
 )

194 
	`as£π
–
P¨£rModeCh™ge
 == 0 );

195 
hñpReque°ed
 = 
åue
;

200 if–
c
->
∑r£rVîbosôy_
 )

202 
cout
 << "Sy¡ax ERROR: I≈uàuƒecognized." << 
ídl
;

207 
	}
}

	@cli/config/ConfigParser.h

4 #i‚de‡
CLI_CONFIGPARSER_H


5 
	#CLI_CONFIGPARSER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/c⁄fig/C⁄figP¨£rH™dÀr.h
>

10 ˛as†
	cC⁄figP¨£r
 {

12 
	mpublic
:

13 
C⁄figP¨£r
();

14 ~
C⁄figP¨£r
();

16 
c⁄figP¨£r
–
°rög
 c⁄° &, 
boﬁ
 &, 
C⁄figSèã
 * );

18 
	m¥iv©e
:

20 
C⁄figP¨£r
( ConfigParser const & );

21 
	mC⁄figP¨£r
 & 
	m›î©‹
=–
C⁄figP¨£r
 const & );

23 
C⁄figP¨£rH™dÀr
 * 
	m˝h_
;

	@cli/config/ConfigParserHandler.cpp

4 
	~<˛i/c⁄fig/C⁄figP¨£rH™dÀr.h
>

5 
	~<mﬁ/comm⁄/MﬁVp.h
>

7 
P¨£rMaö
 * 
MyP¨£rMaö_
;

9 
	gC⁄figP¨£rH™dÀr
::
	$C⁄figP¨£rH™dÀr
()

11 
	}
}

13 
C⁄figP¨£rH™dÀr
::~
	$C⁄figP¨£rH™dÀr
()

15 
	}
}

18 
C⁄figP¨£rH™dÀr
::
	$modifyP‹tN
–
P‹tId
 
pId
 ) const

20 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << ",árg = " << 
pId
 << 
ídl
;

21 
	}
}

23 
boﬁ


24 
	gC⁄figP¨£rH™dÀr
::
	$vÆidP‹tId
–
P‹tId
 
pId
 ) const

26 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << ",árg = " << 
pId
 << 
ídl
;

28 c⁄° 
n
 = 
	`p‹tMgr
()->
	`numP‹ts
();

29 if–
pId
 < 
n
 )

31  
åue
;

33  
Ál£
;

34 
	}
}

36 
P¨£rMaö
 *

37 
	gC⁄figP¨£rH™dÀr
::
	$∑r£rMaö
() const

39 
	`as£π
–
MyP¨£rMaö_
 );

40 –
MyP¨£rMaö_
 );

42 
	}
}

	@cli/config/ConfigParserHandler.h

4 #i‚de‡
CLI_CONFIGPARSERHANDLER_H


5 
	#CLI_CONFIGPARSERHANDLER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<mﬁ/comm⁄/Ty≥s.h
>

9 
	~<mﬁ/comm⁄/MﬁVp.h
>

11 ˛as†
	cC⁄figP¨£rH™dÀr
 {

13 
	mpublic
:

15 
C⁄figP¨£rH™dÀr
();

16 ~
C⁄figP¨£rH™dÀr
();

18 
	$modifyP‹tN
–
P‹tId
 ) const;

20 
boﬁ
 
	$vÆidP‹tId
–
P‹tId
 ) const;

22 
¥iv©e
:

24 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

	@cli/epu/EpuParser.cpp

5 
	~<˛i/ïu/EpuP¨£r.h
>

6 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<˛i/ïu/EpuP¨£rH™dÀr.h
>

9 
	~<mﬁ/ïu/Epu.h
>

11 
	~<•úô/•úôö˛ude.h
>

12 
usög
 
«me•a˚
 
	gboo°
::
•úô
;

13 
usög
 
«me•a˚
 
	gboo°
::
•úô
::
˛assic
;

15 
EpuP¨£rH™dÀr
 * 
	gïh_C›y_
;

17 
P¨£rMaö
 * 
MyP¨£rMaö_
;

19 
	gEpuP¨£r
::
	$EpuP¨£r
()

21 
ïh_
 = 
√w
 
EpuP¨£rH™dÀr
;

22 
	`as£π
–
ïh_
 );

24 
ïh_C›y_
 = 
ïh_
;

25 
	}
}

27 
	gEpuP¨£r
::~
	$EpuP¨£r
()

29 if–
ïh_
 )

31 
dñëe
 
ïh_
;

32 
ïh_
 = 0;

34 
ïh_C›y_
 = 0;

36 
	}
}

40 
«me•a˚
 
	gEpuP¨£rNameS∑˚


42 
	eLi°Ty≥
 {

43 
	gOuãrCos
 = 0,

44 
	gOuãrVœnId
,

45 
	gI¬îCos
,

46 
	gI¬îVœnId
,

47 
	gLi°Ty≥NuŒ


50 
	eDúe˘i⁄
 {

51 
	gDúIngªss
 = 0,

52 
	gDúEgªss
,

53 
	gDúUnknown


56 
	gP¨£rModeCh™ge
;

57 
boﬁ
 
	gHñpFœg
;

58 
	gvbId
, 
	g±Id
;

59 
boﬁ
 
	gu¡agFœg
;

60 
NumbîLi°
 
	gnLi°
;

61 
Li°Ty≥
 
	gnLi°De°
;

62 
	glowî
;

63 
	g¡hTag
;

64 
EpuM©chCrôîü
 
	gïuM©chC⁄fig
;

66 sig√d 
	gwhichTag
;

67 
Dúe˘i⁄
 
	gdú
;

68 
VœnTag
 
	gvœnTag
;

69 
VœnHódî
 
	gvœnHódî
;

70 
EpuRewrôeOp
 
	gïuRewrôeOp
;

75 
P¨£Node
 
IngªssNode
 ( "ingress", "specifyáction for incoming frames" );

76 
P¨£Node
 
EgªssNode
 ( "egress", "specifyáction for outgoing frames" );

77 
P¨£Node
 
M©chNode
 ( "match", "specify match criteria: which ingress framesátÅhe containerÖortáre mappedÅoÅhis?" );

78 
P¨£Node
 
RewrôeNode
 ( "rewrite", "specify VLANÅagÅranslationÑules" );

80 
P¨£Node
 
U¡agNode
 ( "untagged", "match untagged frames" );

81 
P¨£Node
 
PègNode
 ( "ptagged", "matchÖriority-tagged frames" );

83 
P¨£Node
 
P›Node
 ( "pop", "specifyÇumber of VLANÅagsÅo beÖopped fromÅheÅop ofÅhe frame" );

84 
P¨£Node
 
PushNode
 ( "push", "specify VLANÅagsÅo beÖushedátÅheÅop ofÅhe frame" );

85 
P¨£Node
 
Sw≠Node
 ( "swap", "specify VLANÅagsÅo be swapped in " );

86 
P¨£Node
 
AnyNode
 ( "any", "matchány" );

87 
P¨£Node
 
U¡agCommaNode
 ( ",", "specifyÅag matching criteria followed by comma" );

88 
P¨£Node
 
PègCommaNode
 ( ",", "specify VLAN ID(s) followed by comma" );

89 
P¨£Node
 
NumbîLi°Node
 ( "number-list", "singleÇumber, or comma separatedÜist ofÇumber(s) orÑanges(s),É.g. 10,20-30,40" );

93 
doEpuHñp
–c⁄° * 
a
, c⁄° * 
b
 )

95 
¥ötHñp
–
ExôNode
 );

96 
¥ötHñp
–
EndNode
 );

97 
¥ötHñp
–
ShutdownNode
 );

98 
¥ötHñp
–
IngªssNode
 );

99 
¥ötHñp
–
EgªssNode
 );

100 
¥ötHñp
–
VbNode
 );

105 
doEpuExôHñp
–c⁄° * 
a
, c⁄° * 
b
 )

107 
¥ötHñp
–
Rëu∫Node
 );

110 
doEpuExôEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

112 
	gMyP¨£rMaö_
->
c⁄figSèã
()->
	gcuºEpuId_
 = 0;

113 
	gP¨£rModeCh™ge
 = -1;

118 
doEpuShutdownHñp
–c⁄° * 
a
, c⁄° * 
b
 )

120 
¥ötHñp
–
ShutdownNode
 );

123 
doEpuShutdownEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

126 
	gïh_C›y_
->
ïuAdmöSèãCfg
–
åue
 );

129 
doEpuEndHñp
–c⁄° * 
a
, c⁄° * 
b
 )

131 
¥ötHñp
–
Rëu∫Node
 );

134 
doEpuEndEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

136 
	gMyP¨£rMaö_
->
c⁄figSèã
()->
	gcuºEpuId_
 = 0;

137 
	gP¨£rModeCh™ge
 = -2;

143 
gëEpuVbId
–c⁄° 
x
 )

145 
	gvbId
 = 
x
;

148 
doEpuVbHñp
–c⁄° * 
a
, c⁄° * 
b
 )

150 
¥ötVbIdHñp
();

153 
doEpuVbIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

155 
¥ötHñp
–
Rëu∫Node
 );

158 
ac˚±EpuVbIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

161 if–
	gvbId
 != 0 )

164 
ïh_C›y_
->
ïuFdIdCfg
–
vbId
 );

171 
gëEpuPtId
–c⁄° 
x
 )

173 
	gvbId
 = 
x
;

176 
doEpuPtHñp
–c⁄° * 
a
, c⁄° * 
b
 )

178 
¥ötf
( " %12s %s\n",

182 
doEpuPtIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

184 
¥ötHñp
–
Rëu∫Node
 );

187 
ac˚±EpuPtIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

190 if–
	gvbId
 != 0 )

197 
putNli°
()

199  
	gnLi°De°
 )

201 
	gOuãrCos
:

202 
ïuM©chC⁄fig
.
èg_
[ 0 ].
cosLi°_
 = 
nLi°
;

205 
	gOuãrVœnId
:

206 
ïuM©chC⁄fig
.
èg_
[ 0 ].
vœnidLi°_
 = 
nLi°
;

209 
	gI¬îCos
:

210 
ïuM©chC⁄fig
.
èg_
[ 1 ].
cosLi°_
 = 
nLi°
;

213 
	gI¬îVœnId
:

214 
ïuM©chC⁄fig
.
èg_
[ 1 ].
vœnidLi°_
 = 
nLi°
;

217 
	gLi°Ty≥NuŒ
:

223 
doEpuIngªssHñp
–c⁄° * 
a
, c⁄° * 
b
 )

225 
¥ötHñp
–
M©chNode
 );

226 
¥ötHñp
–
RewrôeNode
 );

229 
ac˚±IngªssDúe˘i⁄
–c⁄° * 
a
, c⁄° * 
b
 )

231 
	gdú
 = 
DúIngªss
;

234 
doEpuIngM©chHñp
–c⁄° * 
a
, c⁄° * 
b
 )

236 
¥ötHñp
–
U¡agNode
 );

237 
¥ötHñp
–
DŸ1adNode
 );

238 
¥ötHñp
–
DŸ1qNode
 );

241 
doEpuU¡agHñp
–c⁄° * 
a
, c⁄° * 
b
 )

243 
¥ötHñp
–
Rëu∫Node
 );

244 
¥ötHñp
–
U¡agCommaNode
 );

247 
doEpuDŸ1adHñp
–c⁄° * 
a
, c⁄° * 
b
 )

249 
¥ötHñp
–
CosNode
 );

250 
¥ötHñp
–
O≥nBø˚Node
 );

253 
doEpuDŸ1qHñp
–c⁄° * 
a
, c⁄° * 
b
 )

255 
¥ötHñp
–
CosNode
 );

256 
¥ötHñp
–
O≥nBø˚Node
 );

259 
doEpuU¡agCommaHñp
–c⁄° * 
a
, c⁄° * 
b
 )

261 
¥ötHñp
–
DŸ1adNode
 );

262 
¥ötHñp
–
DŸ1qNode
 );

265 
doLi°CosHñp
–c⁄° * 
a
, c⁄° * 
b
 )

267 
¥ötHñp
–
NumbîLi°Node
 );

270 
doEpuCosLi°Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

272 
¥ötHñp
–
O≥nBø˚Node
 );

275 
doO≥nBø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

277 
¥ötHñp
–
VœnIdNode
 );

278 
¥ötHñp
–
PègNode
 );

281 
doVœnIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

283 
¥ötHñp
–
NumbîLi°Node
 );

286 
doVœnLi°Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

288 
¥ötHñp
–
Clo£Bø˚Node
 );

291 
doClo£Bø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

293 
¥ötHñp
–
Rëu∫Node
 );

294 
¥ötHñp
–
DŸ1adNode
 );

295 
¥ötHñp
–
DŸ1qNode
 );

298 
doEpuPègHñp
–c⁄° * 
a
, c⁄° * 
b
 )

300 
¥ötHñp
–
Clo£Bø˚Node
 );

301 
¥ötHñp
–
PègCommaNode
 );

304 
doEpuPègCommaHñp
–c⁄° * 
a
, c⁄° * 
b
 )

306 
¥ötHñp
–
VœnIdNode
 );

309 
ac˚±EpuU¡ag
–c⁄° * 
a
, c⁄° * 
b
 )

311 
	gïuM©chC⁄fig
.
	gisU¡agged_
 = 
åue
;

314 
ac˚±EpuU¡agEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

316 
	gïuM©chC⁄fig
.
	gisVÆid_
 = 
åue
;

319 
	gïh_C›y_
->
ïuM©chCfg
–
ïuM©chC⁄fig
 );

322 
ac˚±Clo£Bø˚TokEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

324 
	gïuM©chC⁄fig
.
	gisVÆid_
 = 
åue
;

327 
	gïh_C›y_
->
ïuM©chCfg
–
ïuM©chC⁄fig
 );

331 
doEpuIngRwHñp
 ( c⁄° * 
a
, c⁄° * 
b
 )

333 
¥ötHñp
–
P›Node
 );

336 
doEpuIngRwP›Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

338 
¥ötf
( " %12s %s\n", "1|2", "specifyÇumber ofÅagsÅoÖop" );

341 
doEpuIngRwP›NumHñp
–c⁄° * 
a
, c⁄° * 
b
 )

343 
¥ötHñp
–
Rëu∫Node
 );

346 
gëEpuNumP›Tags
–c⁄° 
x
 )

348 
	gïuRewrôeOp
.
	gnumP›Tags_
 = 
x
;

351 
ac˚±EpuIngRwP›NumEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

353 
as£π
–
dú
 =
DúIngªss
 );

355 if–
	gïuRewrôeOp
.
	gnumP›Tags_
 != 0 )

357 
ïh_C›y_
->
ïuIngªssRewrôeCfg
–
ïuRewrôeOp
 );

361 
doEpuEgªssHñp
–c⁄° * 
a
, c⁄° * 
b
 )

363 
¥ötHñp
–
RewrôeNode
 );

366 
ac˚±EgªssDúe˘i⁄
–c⁄° * 
a
, c⁄° * 
b
 )

368 
	gdú
 = 
DúEgªss
;

371 
doEpuEgªssRwHñp
–c⁄° * 
a
, c⁄° * 
b
 )

373 
¥ötHñp
–
PushNode
 );

374 
¥ötHñp
–
Sw≠Node
 );

377 
ac˚±EpuHñpEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

379 
	gHñpFœg
 = 
åue
;

382 
ac˚±DŸ1adTok
–c⁄° * 
a
, c⁄° * 
b
 )

384 if–(
	g¡hTag
 =-1Ë|| (
¡hTag
 == 0) )

386 
¡hTag
++;

387 
	gïuM©chC⁄fig
.
	gèg_
[ 
¡hTag
 ].
	gvœnTy≥_
 = 
VœnTy≥DŸ1ad
;

391 
ac˚±DŸ1qTok
–c⁄° * 
a
, c⁄° * 
b
 )

393 if–(
	g¡hTag
 =-1Ë|| (
¡hTag
 == 0) )

395 
¡hTag
++;

396 
	gïuM©chC⁄fig
.
	gèg_
[ 
¡hTag
 ].
	gvœnTy≥_
 = 
VœnTy≥DŸ1q
;

400 
ac˚±CosTok
–c⁄° * 
a
, c⁄° * 
b
 )

402 
	gnLi°De°
 = (
¡hTag
 =0Ë? 
OuãrCos
 : 
I¬îCos
;

405 
ac˚±O≥nBø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

407 
putNli°
();

409 
	gnLi°De°
 = 
Li°Ty≥NuŒ
;

410 
	gnLi°
.
˛ór
();

413 
ac˚±EpuPèg
–c⁄° * 
a
, c⁄° * 
b
 )

415 
	gïuM©chC⁄fig
.
	gèg_
[ 
¡hTag
 ].
	gisPègged_
 = 
åue
;

418 
ac˚±VœnIdTok
–c⁄° * 
a
, c⁄° * 
b
 )

420 
	gnLi°De°
 = (
¡hTag
 =0Ë? 
OuãrVœnId
 : 
I¬îVœnId
;

423 
ac˚±Clo£Bø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

425 
putNli°
();

427 
	gnLi°De°
 = 
Li°Ty≥NuŒ
;

428 
	gnLi°
.
˛ór
();

431 
gëLowîNumbî
–c⁄° 
x
 )

433 
	glowî
 = 
x
;

436 
gëHighîNumbî
–c⁄° 
x
 )

438 
NumbîTu∂e
 
	ge
;

440 
	ge
.
	glowî_
 = 
lowî
;

441 
	ge
.
	guµî_
 = 
x
;

443 
	gnLi°
.
ö£πE¡ry
–
e
 );

446 
gëSögÀR™geNumbî
–c⁄° 
x
 )

448 
NumbîTu∂e
 
	ge
;

450 
	ge
.
	glowî_
 = 
x
;

451 
	ge
.
	guµî_
 = 
x
;

453 
	gnLi°
.
ö£πE¡ry
–
e
 );

458 
ac˚±P›Tok
–c⁄° * 
a
, c⁄° * 
b
 )

460 
	gïuRewrôeOp
.
	gªwrôeTy≥_
 = 
RewrôeTy≥P›
;

463 
ac˚±PushTok
–c⁄° * 
a
, c⁄° * 
b
 )

465 
	gïuRewrôeOp
.
	gªwrôeTy≥_
 = 
RewrôeTy≥Push
;

468 
ac˚±Sw≠Tok
–c⁄° * 
a
, c⁄° * 
b
 )

470 
	gïuRewrôeOp
.
	gªwrôeTy≥_
 = 
RewrôeTy≥Sw≠
;

474 
doVœnHódîHñp
–c⁄° * 
a
, c⁄° * 
b
 )

476 
¥ötHñp
–
DŸ1adNode
 );

477 
¥ötHñp
–
DŸ1qNode
 );

480 
ac˚±VhDŸ1adTok
–c⁄° * 
a
, c⁄° * 
b
 )

482 if–
	gwhichTag
 =-1 || 
whichTag
 == 0 )

483 ++
whichTag
;

485 
	gvœnTag
.
	gvœnTy≥_
 = 
VœnTy≥DŸ1ad
;

488 
ac˚±VhDŸ1qTok
–c⁄° * 
a
, c⁄° * 
b
 )

490 if–
	gwhichTag
 =-1 || 
whichTag
 == 0 )

491 ++
whichTag
;

493 
	gvœnTag
.
	gvœnTy≥_
 = 
VœnTy≥DŸ1q
;

496 
doVh1Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

498 
¥ötHñp
–
CosNode
 );

499 
¥ötHñp
–
O≥nBø˚Node
 );

502 
ac˚±VhCosTok
–c⁄° * 
a
, c⁄° * 
b
 )

506 
doVhCosHñp
–c⁄° * 
a
, c⁄° * 
b
 )

508 
¥ötHñp
–
I≈utNumbîNode
 );

511 
gëCosVÆ
–c⁄° 
x
 )

513 
	gvœnTag
.
	gcosVÆue_
 = 
x
;

516 
doVhCosVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

518 
¥ötHñp
–
O≥nBø˚Node
 );

521 
ac˚±VhO≥nBø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

525 
doVhO≥nBø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

527 
¥ötHñp
–
VœnIdNode
 );

530 
ac˚±VhVœnIdTok
–c⁄° * 
a
, c⁄° * 
b
 )

534 
gëVœnIdVÆ
–c⁄° 
x
 )

536 
	gvœnTag
.
	gvœnidVÆue_
 = 
x
;

539 
doVhVœnIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

541 
¥ötHñp
–
I≈utNumbîNode
 );

544 
doVhVœnIdVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

546 
¥ötHñp
–
Clo£Bø˚Node
 );

549 
ac˚±VhClo£Bø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

551 
	gvœnHódî
.
	gèg_
[ 
whichTag
 ] = 
vœnTag
;

552 
	gvœnTag
.
˛ór
();

555 
doVhClo£Bø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

557 
¥ötHñp
–
Rëu∫Node
 );

558 
¥ötHñp
–
DŸ1adNode
 );

559 
¥ötHñp
–
DŸ1qNode
 );

563 
ac˚±VhClo£Bø˚TokEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

565 
	gïuRewrôeOp
.
	gvœnHódî_
 = 
vœnHódî
;

568 
as£π
–
dú
 =
DúEgªss
 );

569 
	gïh_C›y_
->
ïuEgªssRewrôeCfg
–
ïuRewrôeOp
 );

577 
	gEpuGømm¨
 : 
public
 
gømm¨
< 
EpuGømm¨
 >

579 
ãm∂©e
 <
ty≥«me
 
Sˇ¬îT
>

580 
	sdeföôi⁄


582 
deföôi⁄
–
EpuGømm¨
 const& )

584 
usög
 
«me•a˚
 
EpuP¨£rNameS∑˚
;

587 
	gHñpTok
 = 
ch_p
('?'Ë>> *
¥öt_p
 >> 
íd_p
[ &
ac˚±EpuHñpEﬁ
 ];

588 
	gExôTok
 = 
°r_p
–
ExôNode
.
tokí
() );

589 
	gEndTok
 = 
°r_p
–
EndNode
.
tokí
() );

590 
	gShutdownTok
 = 
°r_p
–
ShutdownNode
.
tokí
() );

591 
	gIngªssTok
 = 
°r_p
–
IngªssNode
.
tokí
() );

592 
	gEgªssTok
 = 
°r_p
–
EgªssNode
.
tokí
() );

593 
	gVbTok
 = 
°r_p
–
VbNode
.
tokí
() );

595 
	gM©chTok
 = 
°r_p
–
M©chNode
.
tokí
() );

596 
	gRewrôeTok
 = 
°r_p
–
RewrôeNode
.
tokí
() );

597 
	gU¡agTok
 = 
°r_p
–
U¡agNode
.
tokí
() );

598 
	gPègTok
 = 
°r_p
–
PègNode
.
tokí
() );

599 
	gP›Tok
 = 
°r_p
–
P›Node
.
tokí
() );

600 
	gPushTok
 = 
°r_p
–
PushNode
.
tokí
() );

601 
	gSw≠Tok
 = 
°r_p
–
Sw≠Node
.
tokí
() );

602 
	gDŸ1adTok
 = 
°r_p
–
DŸ1adNode
.
tokí
() );

603 
	gDŸ1qTok
 = 
°r_p
–
DŸ1qNode
.
tokí
() );

604 
	gCosTok
 = 
°r_p
–
CosNode
.
tokí
() );

605 
	gVœnIdTok
 = 
°r_p
–
VœnIdNode
.
tokí
() );

606 
	gAnyTok
 = 
°r_p
–
AnyNode
.
tokí
() );

607 
	gCommaTok
 = 
ch_p
(',');

608 
	gO≥nBø˚Tok
 = 
ch_p
('(');

609 
	gClo£Bø˚Tok
 = 
ch_p
(')');

613 
	gex¥essi⁄
 = 
EpuHñp
 | 
ExôRuÀNode
 | 
EndRuÀNode
 | 
ShutdownRuÀNode
 | 
VbRuÀNode
 |

614  
IngªssRuÀNode
 | 
EgªssRuÀNode
;

615 
	gEpuHñp
 = (
HñpTok
)[ &
doEpuHñp
 ];

617 
	gExôRuÀNode
 = 
ExôTok
 >> (
ExôHñp
 | 
ExôEﬁ
);

618 
	gExôHñp
 = (
HñpTok
)[ &
doEpuExôHñp
 ];

619 
	gExôEﬁ
 = 
íd_p
[ &
doEpuExôEﬁ
 ];

621 
	gEndRuÀNode
 = 
EndTok
 >> (
EndHñp
 | 
EndEﬁ
);

622 
	gEndHñp
 = (
HñpTok
)[ &
doEpuEndHñp
 ];

623 
	gEndEﬁ
 = 
íd_p
[ &
doEpuEndEﬁ
 ];

625 
	gShutdownRuÀNode

ShutdownTok
 >> (
ShutdownHñp
 | 
ShutdownEﬁ
);

626 
	gShutdownHñp
 = (
HñpTok
)[ &
doEpuShutdownHñp
 ];

627 
	gShutdownEﬁ
 = 
íd_p
[ &
doEpuShutdownEﬁ
 ];

629 
	gVbRuÀNode
 = 
VbTok
 >> (
VbHñp
 | 
VbIdNode
);

630 
	gVbHñp
 = (
HñpTok
)[ &
doEpuVbHñp
 ];

631 
	gVbIdNode
 = 
uöt_p
[ &
gëEpuVbId
 ] >> (
VbIdHñp
 | 
VbIdEﬁ
);

632 
	gVbIdHñp
 = (
HñpTok
)[ &
doEpuVbIdHñp
 ];

633 
	gVbIdEﬁ
 = 
íd_p
[ &
ac˚±EpuVbIdEﬁ
 ];

645 
	gIngªssRuÀNode
 = 
IngªssTok
[ &
ac˚±IngªssDúe˘i⁄
 ] >>

646 (
IngªssHñp
 | 
IngªssRewrôeRuÀNode
 | 
IngªssM©chRuÀNode
);

647 
	gIngªssHñp
 = (
HñpTok
)[ &
doEpuIngªssHñp
 ];

649 
	gIngªssRewrôeRuÀNode


650 
RewrôeTok
 >> (
IngRwHñp
 | 
IngRwP›Node
);

651 
	gIngRwHñp
 = (
HñpTok
)[ &
doEpuIngRwHñp
 ];

653 
	gIngRwP›Node
 = 
P›Tok
[ &
ac˚±P›Tok
 ] >> (
IngRwP›Hñp
 | 
IngRwP›NumNode
);

654 
	gIngRwP›Hñp
 = (
HñpTok
)[ &
doEpuIngRwP›Hñp
 ];

656 
	gIngRwP›NumNode
 = 
uöt_p
[ &
gëEpuNumP›Tags
 ] >> (
IngRwP›NumHñp
 | 
IngRwP›NumEﬁ
);

657 
	gIngRwP›NumHñp
 = (
HñpTok
)[ &
doEpuIngRwP›NumHñp
 ];

658 
	gIngRwP›NumEﬁ
 = 
íd_p
[ &
ac˚±EpuIngRwP›NumEﬁ
 ];

660 
	gIngªssM©chRuÀNode


661 
M©chTok
 >>

662 (
IngM©chHñp
 | 
U¡agRuÀNode
 | 
DŸ1adRuÀNode
 | 
DŸ1qRuÀNode
);

663 
	gIngM©chHñp
 = (
HñpTok
)[ &
doEpuIngM©chHñp
 ];

665 
	gU¡agRuÀNode
 = 
U¡agTok
[ &
ac˚±EpuU¡ag
 ] >>

666 (
U¡agHñp
 | 
U¡agEﬁ
 | 
U¡agCommaRuÀNode
);

667 
	gU¡agHñp
 = (
HñpTok
)[ &
doEpuU¡agHñp
 ];

668 
	gU¡agEﬁ
 = 
íd_p
[ &
ac˚±EpuU¡agEﬁ
 ];

670 
	gDŸ1adRuÀNode
 = 
DŸ1adTok
[ &
ac˚±DŸ1adTok
 ] >>

671 (
DŸ1adHñp
 | 
CosRuÀNode
 | 
O≥nBø˚Node
);

672 
	gDŸ1adHñp
 = (
HñpTok
)[ &
doEpuDŸ1adHñp
 ];

674 
	gDŸ1qRuÀNode
 = 
DŸ1qTok
[ &
ac˚±DŸ1qTok
 ] >>

675 (
DŸ1qHñp
 | 
CosRuÀNode
 | 
O≥nBø˚Node
);

676 
	gDŸ1qHñp
 = (
HñpTok
)[ &
doEpuDŸ1qHñp
 ];

678 
	gU¡agCommaRuÀNode


679 
CommaTok
 >> (
U¡agCommaHñp
 | 
DŸ1adRuÀNode
 | 
DŸ1qRuÀNode
);

680 
	gU¡agCommaHñp
 = (
HñpTok
)[ &
doEpuU¡agCommaHñp
 ];

682 
	gCosRuÀNode
 = 
CosTok
[ &
ac˚±CosTok
 ] >> (
CosHñp
 | 
CosLi°Node
);

683 
	gCosHñp
 = (
HñpTok
)[ &
doLi°CosHñp
 ];

685 
	gCosLi°Node
 = 
NumbîLi°
 >> (
CosLi°Hñp
 | 
O≥nBø˚Node
);

686 
	gCosLi°Hñp
 = (
HñpTok
)[ &
doEpuCosLi°Hñp
 ];

688 
	gO≥nBø˚Node
 = 
O≥nBø˚Tok
[ &
ac˚±O≥nBø˚Tok
 ] >> (
O≥nBø˚Hñp
 | 
VœnIdRuÀNode
 | 
PègRuÀNode
);

689 
	gO≥nBø˚Hñp
 = (
HñpTok
)[ &
doO≥nBø˚Hñp
 ];

691 
	gVœnIdRuÀNode
 = 
VœnIdTok
[ &
ac˚±VœnIdTok
 ] >> (
VœnIdHñp
 | 
VœnIdLi°Node
);

692 
	gVœnIdHñp
 = (
HñpTok
)[ &
doVœnIdHñp
 ];

694 
	gVœnIdLi°Node
 = 
NumbîLi°
 >> (
VœnLi°Hñp
 | 
Clo£Bø˚Node
);

695 
	gVœnLi°Hñp
 = (
HñpTok
)[ &
doVœnLi°Hñp
 ];

697 
	gClo£Bø˚Node
 = 
Clo£Bø˚Tok
[ &
ac˚±Clo£Bø˚Tok
 ] >>

698 (
Clo£Bø˚Hñp
 | 
Clo£Bø˚Eﬁ
 | 
DŸ1adRuÀNode
 | 
DŸ1qRuÀNode
);

699 
	gClo£Bø˚Hñp
 = (
HñpTok
)[ &
doClo£Bø˚Hñp
 ];

700 
	gClo£Bø˚Eﬁ
 = 
íd_p
[ &
ac˚±Clo£Bø˚TokEﬁ
 ];

702 
	gPègRuÀNode
 = 
PègTok
 >> (
PègHñp
 | 
Clo£Bø˚Node
 | 
PègCommaRuÀNode
);

703 
	gPègHñp
 = (
HñpTok
)[ &
doEpuPègHñp
 ];

705 
	gPègCommaRuÀNode


706 
CommaTok
[ &
ac˚±EpuPèg
 ] >> (
PègCommaHñp
 | 
VœnIdRuÀNode
);

707 
	gPègCommaHñp
 = (
HñpTok
)[ &
doEpuPègCommaHñp
 ];

712 
	gEgªssRuÀNode
 = 
EgªssTok
[ &
ac˚±EgªssDúe˘i⁄
 ] >> (
EgªssHñp
 | 
EgªssRwRuÀNode
);

713 
	gEgªssHñp
 = (
HñpTok
)[ &
doEpuEgªssHñp
 ];

714 
	gEgªssRwRuÀNode
 = 
RewrôeTok
 >> (
EgRwHñp
 | 
EgRwPushRuÀNode
 | 
EgRwSw≠RuÀNode
);

715 
	gEgRwHñp
 = (
HñpTok
)[ &
doEpuEgªssRwHñp
 ];

716 
	gEgRwPushRuÀNode
 = 
PushTok
[ &
ac˚±PushTok
 ] >> (
VœnHódîHñp
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
);

717 
	gEgRwSw≠RuÀNode
 = 
Sw≠Tok
[ &
ac˚±Sw≠Tok
 ] >> (
VœnHódîHñp
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
);

718 
	gVœnHódîHñp
 = (
HñpTok
)[ &
doVœnHódîHñp
 ];

722 
	gVhDŸ1adRuÀNode
 = 
DŸ1adTok
[ &
ac˚±VhDŸ1adTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

723 
	gVhDŸ1qRuÀNode
 = 
DŸ1qTok
[ &
ac˚±VhDŸ1qTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

724 
	gVh1Hñp
 = 
HñpTok
[ &
doVh1Hñp
 ];

726 
	gVhCosRuÀNode
 = 
CosTok
[ &
ac˚±VhCosTok
 ] >> (
VhCosHñp
 | 
VhCosVÆueNode
);

727 
	gVhCosHñp
 = (
HñpTok
)[ &
doVhCosHñp
 ];

728 
	gVhCosVÆueNode
 = 
uöt_p
[ &
gëCosVÆ
 ] >> (
VhCosVÆueHñp
 | 
VhO≥nBø˚RuÀNode
);

729 
	gVhCosVÆueHñp
 = (
HñpTok
)[ &
doVhCosVÆueHñp
 ];

731 
	gVhO≥nBø˚RuÀNode
 = 
O≥nBø˚Tok
[ &
ac˚±VhO≥nBø˚Tok
 ] >> (
VhO≥nBø˚Hñp
 | 
VhVœnIdRuÀNode
 );

732 
	gVhO≥nBø˚Hñp
 = (
HñpTok
)[ &
doVhO≥nBø˚Hñp
 ];

734 
	gVhVœnIdRuÀNode
 = 
VœnIdTok
[ &
ac˚±VhVœnIdTok
 ] >> (
VhVœnIdHñp
 | 
VhVœnIdVÆueRuÀNode
);

735 
	gVhVœnIdHñp
 = (
HñpTok
)[ &
doVhVœnIdHñp
 ];

736 
	gVhVœnIdVÆueRuÀNode
 = 
uöt_p
[ &
gëVœnIdVÆ
 ] >> (
VhVœnIdVÆueHñp
 | 
VhClo£Bø˚RuÀNode
);

737 
	gVhVœnIdVÆueHñp
 = (
HñpTok
)[ &
doVhVœnIdVÆueHñp
 ];

739 
	gVhClo£Bø˚RuÀNode
 = 
Clo£Bø˚Tok
[ &
ac˚±VhClo£Bø˚Tok
 ] >> (
VhClo£Bø˚Hñp
 | 
VhClo£Bø˚Eﬁ
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
);

740 
	gVhClo£Bø˚Hñp
 = (
HñpTok
)[ &
doVhClo£Bø˚Hñp
 ];

741 
	gVhClo£Bø˚Eﬁ
 = 
íd_p
[ &
ac˚±VhClo£Bø˚TokEﬁ
 ];

748 
	gNumbîLi°E¡ry
 = ( 
uöt_p
[ &
gëLowîNumbî
 ] >> 
ch_p
('-'Ë>> uöt_p[ &
gëHighîNumbî
 ] )

749 | 
uöt_p
[ &
gëSögÀR™geNumbî
 ];

750 
	gNumbîLi°
 = 
NumbîLi°E¡ry
 >> *–
ch_p
(',') >> NumberListEntry );

754 
	gruÀ
< 
	gSˇ¬îT
 > 
	gHñpTok
, 
	gExôTok
, 
	gIngªssTok
, 
	gEgªssTok
, 
	gVbTok
, 
	gPtTok
,

755 
	gM©chTok
, 
	gU¡agTok
, 
	gPègTok
, 
	gP›Tok
, 
	gDŸ1adTok
, 
	gDŸ1qTok
,

756 
	gCosTok
, 
	gVœnIdTok
, 
	gAnyTok
, 
	gCommaTok
, 
	gRewrôeTok
,

757 
	gex¥essi⁄
,

758 
	gIngªssRuÀNode
, 
	gIngªssRewrôeRuÀNode
, 
	gIngªssM©chRuÀNode
,

759 
	gM©chHñp
, 
	gU¡agHñp
, 
	gU¡agEﬁ
, 
	gU¡agCommaNode
,

760 
	gDŸ1adHñp
, 
	gO≥nBø˚Node
, 
	gO≥nBø˚Exp
, 
	gDŸ1qHñp
, 
	gU¡agCommaHñp
,

761 
	gCosHñp
, 
	gCosLi°Node
, 
	gNumbîLI°
, 
	gCosLi°Hñp
, 
	gO≥nBø˚Tok
,

762 
	gO≥nBø˚Hñp
, 
	gVœnIdHñp
, 
	gVœnIdLi°Node
, 
	gVœnLi°Hñp
,

763 
	gClo£Bø˚Exp
, 
	gClo£Bø˚Node
, 
	gClo£Bø˚Tok
, 
	gClo£Bø˚Hñp
,

764 
	gClo£Bø˚Eﬁ
, 
	gPègRuÀNode
, 
	gPègHñp
, 
	gPègCommaRuÀNode
,

765 
	gPègCommaHñp
,

766 
	gEgSuffixTªe
, 
	gNumbîLi°
, 
	gNumbîLi°E¡ry
, 
	gIngM©chHñp
,

767 
	gU¡agRuÀNode
,

768 
	gDŸ1adRuÀNode
, 
	gDŸ1qRuÀNode
, 
	gCosRuÀNode
, 
	gVœnIdRuÀNode
,

769 
	gU¡agCommaRuÀNode
, 
	gIngRwHñp
, 
	gIngRwP›Node
, 
	gIngRwP›Hñp
,

770 
	gIngRwP›NumNode
, 
	gIngRwP›NumHñp
, 
	gIngRwP›NumEﬁ
,

771 
	gEpuHñp
, 
	gExôRuÀNode
, 
	gShutdownRuÀNode
, 
	gVbRuÀNode
, 
	gPtRuÀNode
,

772 
	gEgªssRuÀNode
, 
	gExôHñp
, 
	gExôEﬁ
, 
	gShutdownTok
, 
	gShutdownHñp
,

773 
	gShutdownEﬁ
, 
	gVbHñp
, 
	gVbIdNode
, 
	gVbIdHñp
, 
	gVbIdEﬁ
, 
	gPtHñp
,

774 
	gPtIdNode
, 
	gPtIdEﬁ
, 
	gPtIdHñp
, 
	gIngªssHñp
, 
	gEgªssHñp
,

775 
	gEndTok
, 
	gEndRuÀNode
, 
	gEndHñp
, 
	gEndEﬁ
,

776 
	gVhDŸ1adRuÀNode
, 
	gVhDŸ1qRuÀNode
, 
	gVh1Hñp
, 
	gVhCosRuÀNode
, 
	gVhCosHñp
,

777 
	gVhCosVÆueNode
, 
	gVhCosVÆueHñp
, 
	gVhO≥nBø˚RuÀNode
, 
	gVhO≥nBø˚Hñp
,

778 
	gVhVœnIdRuÀNode
, 
	gVhVœnIdHñp
, 
	gVhVœnIdVÆueRuÀNode
, 
	gVhVœnIdVÆueHñp
,

779 
	gVhClo£Bø˚RuÀNode
, 
	gVhClo£Bø˚Hñp
, 
	gVhClo£Bø˚Eﬁ
,

780 
	gEgªssRwRuÀNode
, 
	gEgRwHñp
, 
	gEgRwPushRuÀNode
, 
	gEgRwSw≠RuÀNode
, 
	gVœnHódîHñp
,

781 
	gPushTok
, 
	gSw≠Tok


785 
	gruÀ
< 
	gSˇ¬îT
 > c⁄°& 
°¨t
() const

787  
	gex¥essi⁄
;

792 
boﬁ


793 
	gEpuP¨£r
::
	$ïuP¨£r
(

794 
°rög
 c⁄° & 
öputSåög
,

795 
boﬁ
 & 
hñpReque°ed
,

796 
C⁄figSèã
 * 
c
 )

798 
usög
 
«me•a˚
 
EpuP¨£rNameS∑˚
;

800 
vbId
 = 0;

801 
±Id
 = 0;

802 
P¨£rModeCh™ge
 = 0;

803 
u¡agFœg
 = 
Ál£
;

804 
HñpFœg
 = 
Ál£
;

805 
nLi°
.
	`˛ór
();

806 
nLi°De°
 = 
Li°Ty≥NuŒ
;

807 
¡hTag
 = -1;

808 
ïuM©chC⁄fig
.
	`˛ór
();

810 
whichTag
 = -1;

811 
dú
 = 
DúUnknown
;

812 
vœnTag
.
	`˛ór
();

813 
vœnHódî
.
	`˛ór
();

814 
ïuRewrôeOp
.
	`˛ór
();

816 
	`as£π
–
c
 );

817 
c
->
cuºP¨£rMode_
 = 
P¨£rModeEpu
;

819 
EpuGømm¨
 
g
;

820 
∑r£_öfo
<> 
∑r£Info
 =

821 
	`∑r£
(
öputSåög
.
	`c_°r
(), 
g
, 
•a˚_p
);

825 if–
∑r£Info
.
fuŒ
 )

829 if–
P¨£rModeCh™ge
 != 0 )

831 
	`as£π
–
HñpFœg
 =
Ál£
 );

833 if–
P¨£rModeCh™ge
 == -1 )

834 
c
->
cuºP¨£rMode_
 = 
P¨£rModeP‹t
;

835 if–
P¨£rModeCh™ge
 == -2 )

836 
c
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

838 
	`as£π
( 0 );

841 if–
HñpFœg
 )

843 
	`as£π
–
P¨£rModeCh™ge
 == 0 );

844 
hñpReque°ed
 = 
åue
;

847  
åue
;

851 if–
c
->
∑r£rVîbosôy_
 )

853 
cout
 << "PossibÀ Sy¡ax ERROR: I≈uàuƒecognized by EpuP¨£r." << 
ídl
;

856  
Ál£
;

858 
	}
}

	@cli/epu/EpuParser.h

4 #i‚de‡
CLI_EPUPARSER_H


5 
	#CLI_EPUPARSER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/ïu/EpuP¨£rH™dÀr.h
>

10 ˛as†
	cEpuP¨£r
 {

12 
	mpublic
:

13 
EpuP¨£r
();

14 ~
EpuP¨£r
();

15 
mﬁVp
–
MﬁVp
 * );

17 
boﬁ
 
ïuP¨£r
–
°rög
 c⁄° &, boﬁ &, 
C⁄figSèã
 * );

21 
EpuP¨£r
( EpuParser const & );

22 
	mEpuP¨£r
 & 
	m›î©‹
=–
EpuP¨£r
 const & );

24 
EpuP¨£rH™dÀr
 * 
	mïh_
;

	@cli/epu/EpuParserHandler.cpp

4 
	~<˛i/ïu/EpuP¨£rH™dÀr.h
>

6 
	~<mﬁ/ïu/Epu.h
>

8 
P¨£rMaö
 * 
MyP¨£rMaö_
;

10 
	gEpuP¨£rH™dÀr
::
	$EpuP¨£rH™dÀr
()

12 
	}
}

14 
EpuP¨£rH™dÀr
::~
	$EpuP¨£rH™dÀr
()

16 
	}
}

18 
P¨£rMaö
 *

19 
EpuP¨£rH™dÀr
::
	$∑r£rMaö
() const

21 
	`as£π
–
MyP¨£rMaö_
 );

22 –
MyP¨£rMaö_
 );

24 
	}
}

27 
	gEpuP¨£rH™dÀr
::
	$ïuAdmöSèãCfg
–
boﬁ
 
x
 ) const

29 
EpuId
 
eid
 = 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
;

32 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
eid
 );

33 
	`as£π
–
e
 );

35 
e
->
	`admöSèã
–
x
 );

36 
	}
}

39 
	gEpuP¨£rH™dÀr
::
	$ïuFdIdCfg
–
FwdDomaöId
 c⁄° & 
x
 ) const

41 
EpuId
 
eid
 = 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
;

44 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
eid
 );

45 
	`as£π
–
e
 );

47 
e
->
	`fdId
–
x
 );

48 
	}
}

51 
	gEpuP¨£rH™dÀr
::
	$ïuM©chCfg
–
EpuM©chCrôîü
 c⁄° & 
x
 ) const

53 
EpuId
 
eid
 = 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
;

56 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
eid
 );

57 
	`as£π
–
e
 );

59 
e
->
	`ögªssM©ch
–
x
 );

60 
	}
}

63 
	gEpuP¨£rH™dÀr
::
	$ïuIngªssRewrôeCfg
–
EpuRewrôeOp
 c⁄° & 
x
 ) const

65 
EpuId
 
eid
 = 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
;

68 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
eid
 );

69 
	`as£π
–
e
 );

71 
e
->
	`ögªssRewrôe
–
x
 );

72 
	}
}

75 
	gEpuP¨£rH™dÀr
::
	$ïuEgªssRewrôeCfg
–
EpuRewrôeOp
 c⁄° & 
x
 ) const

77 
EpuId
 
eid
 = 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
;

80 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
eid
 );

81 
	`as£π
–
e
 );

83 
e
->
	`egªssRewrôe
–
x
 );

84 
	}
}

	@cli/epu/EpuParserHandler.h

4 #i‚de‡
CLI_EPUPARSERHANDLER_H


5 
	#CLI_EPUPARSERHANDLER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

9 
	~<mﬁ/comm⁄/MﬁVp.h
>

10 
	~<mﬁ/ïu/EpuMgr.h
>

12 ˛as†
	cEpuP¨£rH™dÀr
 {

14 
	mpublic
:

16 
EpuP¨£rH™dÀr
();

17 ~
EpuP¨£rH™dÀr
();

19 
	$ïuAdmöSèãCfg
–
boﬁ
 ) const;

20 
	$ïuFdIdCfg
–
FwdDomaöId
 const & ) const;

21 
	$ïuM©chCfg
–
EpuM©chCrôîü
 const & ) const;

22 
	$ïuIngªssRewrôeCfg
–
EpuRewrôeOp
 const & ) const;

23 
	$ïuEgªssRewrôeCfg
–
EpuRewrôeOp
 const & ) const;

25 
	`ïuP¨£r
–
°rög
 c⁄° &, 
boﬁ
 &, 
C⁄figSèã
 & );

27 
¥iv©e
:

29 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

	@cli/global/GlobalParser.cpp

4 
	~<˛i/globÆ/GlobÆP¨£r.h
>

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<•úô/•úôö˛ude.h
>

8 
usög
 
«me•a˚
 
	gboo°
::
•úô
;

9 
usög
 
«me•a˚
 
	gboo°
::
•úô
::
˛assic
;

11 
GlobÆP¨£rH™dÀr
 * 
	ggph_C›y_
;

13 
P¨£rMaö
 * 
MyP¨£rMaö_
;

15 
	gGlobÆP¨£r
::
	$GlobÆP¨£r
()

16 : 
	$gph_
( 0 )

18 
gph_
 = 
√w
 
GlobÆP¨£rH™dÀr
;

19 
	`as£π
–
gph_
 );

21 
gph_C›y_
 = 
gph_
;

22 
	}
}

24 
	gGlobÆP¨£r
::~
	$GlobÆP¨£r
()

26 if–
gph_
 )

28 
dñëe
 
gph_
;

29 
gph_
 = 0;

31 
gph_C›y_
 = 0;

33 
	}
}

37 
«me•a˚
 
	gGlobÆP¨£rNameS∑˚


39 
boﬁ
 
	gP¨£rModeCh™ged
;

40 
P¨£rMode
 
	gNewP¨£rMode
;

41 
boﬁ
 
	gHñpFœg
;

42 
boﬁ
 
	gCou¡îsFœg
;

44 
	gGlobÆP¨am1
;

45 
°rög
 
	gHo°«me
;

47 
P¨£Node
 
ShowNode
 ( "show", "show something" );

48 
P¨£Node
 
C⁄figNode
 ( "config", "configure something" );

49 
P¨£Node
 
RunNode
 ( "run", "running configuration" );

50 
P¨£Node
 
SaveNode
 ( "save", "save current configuration" );

52 
doGlobÆHñp
–c⁄° * 
a
, c⁄° * 
b
 )

54 
¥ötHñp
–
ShowNode
 );

55 
¥ötHñp
–
C⁄figNode
 );

56 
¥ötHñp
–
SaveNode
 );

57 
¥ötHñp
–
Ho°«meNode
 );

58 
¥ötHñp
–
Simuœti⁄Node
 );

61 
doGlobÆShowHñp
–c⁄° * 
a
, c⁄° * 
b
 )

63 
¥ötHñp
–
RunNode
 );

64 
¥ötHñp
–
P‹tNode
 );

65 
¥ötHñp
–
VbNode
 );

66 
¥ötHñp
–
EpuNode
 );

67 
¥ötHñp
–
MacTabÀNode
 );

70 
doGlobÆShowRunHñp
–c⁄° * 
a
, c⁄° * 
b
 )

72 
¥ötHñp
–
Rëu∫Node
 );

75 
doSaveHñp
–c⁄° * 
a
, c⁄° * 
b
 )

77 
¥ötHñp
–
Rëu∫Node
 );

80 
doGlobÆShowP‹tHñp
–c⁄° * 
a
, c⁄° * 
b
 )

82 
¥ötHñp
–
I≈utNumbîNode
 );

83 
¥ötHñp
–
Cou¡îsNode
 );

84 
¥ötHñp
–
Rëu∫Node
 );

87 
doGlobÆP‹tIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

89 
¥ötHñp
–
Cou¡îsNode
 );

90 
¥ötHñp
–
Rëu∫Node
 );

93 
doGlobÆShowVbHñp
–c⁄° * 
a
, c⁄° * 
b
 )

95 
¥ötHñp
–
I≈utNumbîNode
 );

96 
¥ötHñp
–
Cou¡îsNode
 );

97 
¥ötHñp
–
Rëu∫Node
 );

100 
doMacTabÀVbHñp
–c⁄° * 
a
, c⁄° * 
b
 )

102 
¥ötHñp
–
I≈utNumbîNode
 );

103 
¥ötHñp
–
Rëu∫Node
 );

106 
doGlobÆVbIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

108 
¥ötHñp
–
Cou¡îsNode
 );

109 
¥ötHñp
–
Rëu∫Node
 );

112 
doMacTabÀVbIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

114 
¥ötHñp
–
Rëu∫Node
 );

117 
doGlobÆShowEpuHñp
–c⁄° * 
a
, c⁄° * 
b
 )

119 
¥ötHñp
–
I≈utNumbîNode
 );

120 
¥ötHñp
–
Cou¡îsNode
 );

121 
¥ötHñp
–
Rëu∫Node
 );

124 
doGlobÆEpuIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

126 
¥ötHñp
–
Cou¡îsNode
 );

127 
¥ötHñp
–
Rëu∫Node
);

130 
doGlobÆP‹tIdCou¡îsHñp
–c⁄° * 
a
, c⁄° * 
b
 )

132 
¥ötHñp
–
Rëu∫Node
);

135 
doGlobÆVbIdCou¡îsHñp
–c⁄° * 
a
, c⁄° * 
b
 )

137 
¥ötHñp
–
Rëu∫Node
);

140 
doGlobÆEpuIdCou¡îsHñp
–c⁄° * 
a
, c⁄° * 
b
 )

142 
¥ötHñp
–
Rëu∫Node
);

145 
doGlobÆC⁄figHñp
–c⁄° * 
a
, c⁄° * 
b
 )

147 
¥ötHñp
–
Rëu∫Node
);

150 
doGlobÆShowMacTabÀHñp
–c⁄° * 
a
, c⁄° * 
b
 )

152 
¥ötHñp
–
VbNode
 );

153 
¥ötHñp
–
Rëu∫Node
 );

156 
doGlobÆShowMacTabÀVbHñp
–c⁄° * 
a
, c⁄° * 
b
 )

158 
¥ötHñp
–
I≈utNumbîNode
 );

161 
ac˚±GlobÆHñpEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

163 
	gHñpFœg
 = 
åue
;

166 
ac˚±GlobÆRunEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

168 
	ggph_C›y_
->
showRun
();

171 
ac˚±SaveEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

173 
	ggph_C›y_
->
ßveC⁄fig
();

176 
doHo°«meHñp
–c⁄° * 
a
, c⁄° * 
b
 )

178 
¥ötf
( " %12s %s\n",

182 
doHo°«meSåögHñp
–c⁄° * 
a
, c⁄° * 
b
 )

184 
¥ötHñp
–
Rëu∫Node
 );

187 
ac˚±Ho°«meEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

189 if–! 
	gHo°«me
.
em±y
() )

191 
	ggph_C›y_
->
c⁄figHo°«me
–
Ho°«me
 );

195 
gëGlobÆP‹tId
–c⁄° 
x
 )

197 
	gGlobÆP¨am1
 = 
x
;

200 
gëGlobÆVbId
–c⁄° 
x
 )

202 
	gGlobÆP¨am1
 = 
x
;

205 
gëGlobÆEpuId
–c⁄° 
x
 )

207 
	gGlobÆP¨am1
 = 
x
;

210 
ac˚±Cou¡îsFœg
–c⁄° * 
a
, c⁄° * 
b
 )

212 
	gCou¡îsFœg
 = 
åue
;

215 
ac˚±GlobÆP‹tIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

217 
	ggph_C›y_
->
showP‹ts
–
GlobÆP¨am1
, 
Cou¡îsFœg
 );

218 
	gGlobÆP¨am1
 = 0;

219 
	gCou¡îsFœg
 = 
Ál£
;

222 
ac˚±GlobÆVbIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

224 
	ggph_C›y_
->
showFds
–
GlobÆP¨am1
, 
Cou¡îsFœg
 );

225 
	gGlobÆP¨am1
 = 0;

226 
	gCou¡îsFœg
 = 
Ál£
;

229 
ac˚±GlobÆEpuIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

231 
	ggph_C›y_
->
showEpus
–
GlobÆP¨am1
, 
Cou¡îsFœg
 );

232 
	gGlobÆP¨am1
 = 0;

233 
	gCou¡îsFœg
 = 
Ál£
;

236 
ac˚±GlobÆMacTabÀEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

238 
	ggph_C›y_
->
showMacTabÀ
();

241 
ac˚±GlobÆC⁄figEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

243 
	ggph_C›y_
->
∑r£rInC⁄figMode
();

244 
	gP¨£rModeCh™ged
 = 
åue
;

245 
	gNewP¨£rMode
 = 
P¨£rModeC⁄fig
;

248 
doSimulHñp
–c⁄° * 
a
, c⁄° * 
b
 )

250 
¥ötHñp
–
Rëu∫Node
 );

253 
ac˚±SimulEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

255 
	ggph_C›y_
->
∑r£rInSimulMode
();

256 
	gP¨£rModeCh™ged
 = 
åue
;

257 
	gNewP¨£rMode
 = 
P¨£rModeSimul
;

262 
	gGlobÆGømm¨
 : 
public
 
gømm¨
< 
GlobÆGømm¨
 >

265 
ãm∂©e
 <
ty≥«me
 
Sˇ¬îT
>

266 
	sdeföôi⁄


268 
deföôi⁄
–
GlobÆGømm¨
 const& )

270 
usög
 
«me•a˚
 
GlobÆP¨£rNameS∑˚
;

273 
	gHñpTok
 = 
ch_p
('?'Ë>> *
¥öt_p
 >> 
íd_p
[ &
ac˚±GlobÆHñpEﬁ
 ];

274 
	gShowTok
 = 
°r_p
–
ShowNode
.
tokí
() );

275 
	gC⁄figTok
 = 
°r_p
–
C⁄figNode
.
tokí
() );

276 
	gRunTok
 = 
°r_p
–
RunNode
.
tokí
() );

277 
	gP‹tTok
 = 
°r_p
–
P‹tNode
.
tokí
() );

278 
	gVbTok
 = 
°r_p
–
VbNode
.
tokí
() );

279 
	gEpuTok
 = 
°r_p
–
EpuNode
.
tokí
() );

280 
	gSaveTok
 = 
°r_p
–
SaveNode
.
tokí
() );

281 
	gHo°«meTok
 = 
°r_p
–
Ho°«meNode
.
tokí
() );

282 
	gSimulTok
 = 
°r_p
–
Simuœti⁄Node
.
tokí
() );

283 
	gCou¡îsTok
 = 
°r_p
–
Cou¡îsNode
.
tokí
() );

284 
	gMacTabÀTok
 = 
°r_p
–
MacTabÀNode
.
tokí
() );

287 
	gex¥essi⁄
 = 
GlobÆHñp
 | 
ShowRuÀNode
 | 
C⁄figRuÀNode
 | 
SaveRuÀNode


288 | 
Ho°«meRuÀNode
 | 
SimulRuÀNode
;

289 
	gGlobÆHñp
 = 
HñpTok
[ &
doGlobÆHñp
 ];

291 
	gShowRuÀNode
 = 
ShowTok
 >> (
ShowHñp
 | 
ShowRunRuÀNode
 | 
ShowP‹tRuÀNode
 |

292 
ShowVbRuÀNode
 | 
ShowEpuRuÀNode
 | 
ShowMacRuÀNode
 );

293 
	gShowHñp
 = 
HñpTok
[ &
doGlobÆShowHñp
 ];

295 
	gShowRunRuÀNode
 = 
RunTok
 >> (
RunHñp
 | 
RunEﬁ
);

296 
	gRunHñp
 = 
HñpTok
[ &
doGlobÆShowRunHñp
 ];

297 
	gRunEﬁ
 = 
íd_p
[ &
ac˚±GlobÆRunEﬁ
 ];

299 
	gShowP‹tRuÀNode


300 
P‹tTok
 >> (
P‹tHñp
 | 
P‹tIdRuÀNode
 | 
P‹tIdCou¡îsNode
 | 
P‹tIdEﬁ
);

301 
	gP‹tHñp
 = 
HñpTok
[ &
doGlobÆShowP‹tHñp
 ];

302 
	gP‹tIdRuÀNode
 = 
uöt_p
[ &
gëGlobÆP‹tId
 ] >> (
P‹tIdHñp
 | 
P‹tIdCou¡îsNode
 | 
P‹tIdEﬁ
);

303 
	gP‹tIdHñp
 = 
HñpTok
[ &
doGlobÆP‹tIdHñp
 ];

304 
	gP‹tIdCou¡îsNode
 = 
Cou¡îsTok
[ &
ac˚±Cou¡îsFœg
 ] >> (
P‹tIdCou¡îsHñp
 | 
P‹tIdEﬁ
);

305 
	gP‹tIdCou¡îsHñp
 = 
HñpTok
[ &
doGlobÆP‹tIdCou¡îsHñp
 ];

306 
	gP‹tIdEﬁ
 = 
íd_p
[ &
ac˚±GlobÆP‹tIdEﬁ
 ];

308 
	gShowVbRuÀNode
 = 
VbTok
 >> (
VbHñp
 | 
VbIdRuÀNode
 | 
VbIdCou¡îsNode
 | 
VbIdEﬁ
);

309 
	gVbHñp
 = 
HñpTok
[ &
doGlobÆShowVbHñp
 ];

310 
	gVbIdRuÀNode
 = 
uöt_p
[ &
gëGlobÆVbId
 ] >> (
VbIdHñp
 | 
VbIdCou¡îsNode
 | 
VbIdEﬁ
);

311 
	gVbIdHñp
 = 
HñpTok
[ &
doGlobÆVbIdHñp
 ];

312 
	gVbIdCou¡îsNode
 = 
Cou¡îsTok
[ &
ac˚±Cou¡îsFœg
 ] >> (
VbIdCou¡îsHñp
 | 
VbIdEﬁ
);

313 
	gVbIdCou¡îsHñp
 = 
HñpTok
[ &
doGlobÆVbIdCou¡îsHñp
 ];

314 
	gVbIdEﬁ
 = 
íd_p
[ &
ac˚±GlobÆVbIdEﬁ
 ];

316 
	gShowEpuRuÀNode
 = 
EpuTok
 >> (
EpuHñp
 | 
EpuIdRuÀNode
 | 
EpuIdCou¡îsNode
 | 
EpuIdEﬁ
);

317 
	gEpuHñp
 = 
HñpTok
[ &
doGlobÆShowEpuHñp
 ];

318 
	gEpuIdRuÀNode
 = 
uöt_p
[ &
gëGlobÆEpuId
 ] >> (
EpuIdHñp
 | 
EpuIdCou¡îsNode
 | 
EpuIdEﬁ
);

319 
	gEpuIdHñp
 = 
HñpTok
[ &
doGlobÆEpuIdHñp
 ];

320 
	gEpuIdCou¡îsNode
 = 
Cou¡îsTok
[ &
ac˚±Cou¡îsFœg
 ] >> (
EpuIdCou¡îsHñp
 | 
EpuIdEﬁ
);

321 
	gEpuIdCou¡îsHñp
 = 
HñpTok
[ &
doGlobÆEpuIdCou¡îsHñp
 ];

322 
	gEpuIdEﬁ
 = 
íd_p
[ &
ac˚±GlobÆEpuIdEﬁ
 ];

324 
	gShowMacRuÀNode
 = 
MacTabÀTok
 >> (
MacTabÀHñp
 | 
MacTabÀVbRuÀNode
 | 
MacTabÀEﬁ
);

325 
	gMacTabÀHñp
 = 
HñpTok
[ &
doGlobÆShowMacTabÀHñp
 ];

326 
	gMacTabÀEﬁ
 = 
íd_p
[ &
ac˚±GlobÆMacTabÀEﬁ
 ];

327 
	gMacTabÀVbRuÀNode
 = 
VbTok
 >> (
MacTabÀVbHñp
 | 
MacTabÀVbIdRuÀNode
);

328 
	gMacTabÀVbHñp
 = 
HñpTok
[ &
doGlobÆShowMacTabÀVbHñp
 ];

329 
	gMacTabÀVbIdRuÀNode
 = 
uöt_p
[ &
gëGlobÆVbId
 ] >> (
MacTabÀVbIdHñp
 | 
MacTabÀEﬁ
);

330 
	gMacTabÀVbIdHñp
 = 
HñpTok
[ &
doMacTabÀVbIdHñp
 ];

333 
	gC⁄figRuÀNode
 = 
C⁄figTok
 >> (
C⁄figHñp
 | 
C⁄figEﬁ
);

334 
	gC⁄figHñp
 = 
HñpTok
[ &
doGlobÆC⁄figHñp
 ];

335 
	gC⁄figEﬁ
 = 
íd_p
[ &
ac˚±GlobÆC⁄figEﬁ
 ];

338 
	gSaveRuÀNode
 = 
SaveTok
 >> (
SaveHñp
 | 
SaveEﬁ
);

339 
	gSaveHñp
 = 
HñpTok
[ &
doSaveHñp
 ];

340 
	gSaveEﬁ
 = 
íd_p
[ &
ac˚±SaveEﬁ
 ];

343 
	gHo°«meRuÀNode
 = 
Ho°«meTok
 >> (
Ho°«meHñp
 | 
Ho°«meSåögRuÀNode
);

344 
	gHo°«meHñp
 = (
HñpTok
)[ &
doHo°«meHñp
 ];

345 
	gHo°«meSåögRuÀNode


346 (+
Ænum_p
)[ 
assign_a
–
Ho°«me
 ) ] >> (
Ho°«meSåögHñp
 | 
Ho°«meEﬁ
);

347 
	gHo°«meSåögHñp


348 (
HñpTok
)[ &
doHo°«meSåögHñp
 ];

349 
	gHo°«meEﬁ
 = 
íd_p
[ &
ac˚±Ho°«meEﬁ
 ];

352 
	gSimulRuÀNode
 = 
SimulTok
 >> (
SimulHñp
 | 
SimulEﬁ
);

353 
	gSimulHñp
 = (
HñpTok
)[ &
doSimulHñp
 ];

354 
	gSimulEﬁ
 = 
íd_p
[ &
ac˚±SimulEﬁ
 ];

358 
	gruÀ
< 
	gSˇ¬îT
 > 
	gex¥essi⁄
, 
	gGlobÆHñp
, 
	gShowRuÀNode
, 
	gC⁄figRuÀNode
,

359 
	gHñpTok
, 
	gShowTok
, 
	gC⁄figTok
, 
	gP‹tTok
, 
	gVbTok
, 
	gEpuTok
,

360 
	gCou¡îsTok
, 
	gMacTabÀTok
,

361 
	gShowHñp
, 
	gShowP‹tRuÀNode
, 
	gShowVbRuÀNode
, 
	gShowEpuRuÀNode
,

362 
	gP‹tHñp
, 
	gP‹tIdRuÀNode
, 
	gVbHñp
, 
	gVbIdRuÀNode
, 
	gEpuHñp
,

363 
	gEpuIdRuÀNode
, 
	gRunTok
, 
	gShowRunRuÀNode
, 
	gRunHñp
, 
	gRunEﬁ
,

364 
	gP‹tIdCou¡îsNode
, 
	gP‹tIdCou¡îsHñp
,

365 
	gVbIdCou¡îsNode
, 
	gVbIdCou¡îsHñp
,

366 
	gEpuIdCou¡îsNode
, 
	gEpuIdCou¡îsHñp
,

367 
	gP‹tIdHñp
, 
	gP‹tIdEﬁ
, 
	gVbIdHñp
, 
	gVbIdEﬁ
, 
	gEpuIdHñp
, 
	gEpuIdEﬁ
,

368 
	gShowMacRuÀNode
, 
	gMacTabÀHñp
, 
	gMacTabÀEﬁ
,

369 
	gMacTabÀVbRuÀNode
, 
	gMacTabÀVbHñp
, 
	gMacTabÀVbIdRuÀNode
, 
	gMacTabÀVbIdHñp
,

370 
	gC⁄figHñp
, 
	gC⁄figEﬁ
,

371 
	gSaveRuÀNode
, 
	gSaveTok
, 
	gSaveHñp
, 
	gSaveEﬁ
,

372 
	gHo°«meRuÀNode
, 
	gHo°«meHñp
, 
	gHo°«meSåögRuÀNode
,

373 
	gHo°«meSåögHñp
, 
	gHo°«meEﬁ
,

374 
	gSimulRuÀNode
, 
	gSimulHñp
, 
	gSimulEﬁ
, 
	gHo°«meTok
, 
	gSimulTok


377 
	gruÀ
< 
	gSˇ¬îT
 > c⁄°& 
°¨t
() const

379  
	gex¥essi⁄
;

385 
	gGlobÆP¨£r
::
	$globÆP¨£r
(

386 
°rög
 c⁄° & 
öputSåög
,

387 
boﬁ
 & 
hñpReque°ed
,

388 
C⁄figSèã
 * 
c
 )

390 
usög
 
«me•a˚
 
GlobÆP¨£rNameS∑˚
;

392 
P¨£rModeCh™ged
 = 
Ál£
;

393 
NewP¨£rMode
 = 
P¨£rModeGlobÆ
;

394 
	`as£π
–
c
 );

395 
c
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

396 
HñpFœg
 = 
Ál£
;

397 
Cou¡îsFœg
 = 
Ál£
;

399 
GlobÆP¨am1
 = 0;

400 
Ho°«me
.
	`˛ór
();

403 
GlobÆGømm¨
 
g
;

404 
∑r£_öfo
<> 
∑r£Info
 =

405 
	`∑r£
(
öputSåög
.
	`c_°r
(), 
g
, 
•a˚_p
);

409 if–
∑r£Info
.
fuŒ
 )

413 if–
P¨£rModeCh™ged
 )

415 
	`as£π
–! 
HñpFœg
 );

417 
c
->
cuºP¨£rMode_
 = 
NewP¨£rMode
;

420 if–
HñpFœg
 )

422 
	`as£π
–! 
P¨£rModeCh™ged
 );

423 
hñpReque°ed
 = 
åue
;

428 if–
c
->
∑r£rVîbosôy_
 )

430 
cout
 << "Sy¡ax ERROR: I≈uàuƒecognized." << 
ídl
;

435 
	}
}

	@cli/global/GlobalParser.h

4 #i‚de‡
CLI_GLOBALPARSER_H


5 
	#CLI_GLOBALPARSER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/globÆ/GlobÆP¨£rH™dÀr.h
>

10 ˛as†
	cGlobÆP¨£r
 {

12 
	mpublic
:

13 
GlobÆP¨£r
();

14 ~
GlobÆP¨£r
();

16 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

18 
	`globÆP¨£r
–
°rög
 c⁄° &, 
boﬁ
 &, 
C⁄figSèã
 * );

22 
	`GlobÆP¨£r
–
GlobÆP¨£r
 const & );

23 
GlobÆP¨£r
 & 
›î©‹
=( GlobalParser const & );

25 
GlobÆP¨£rH™dÀr
 * 
gph_
;

	@cli/global/GlobalParserHandler.cpp

4 
	~<˛i/globÆ/GlobÆP¨£rH™dÀr.h
>

6 
	~<mﬁ/comm⁄/MﬁVp.h
>

7 
	~<mﬁ/p‹t/P‹tMgr.h
>

8 
	~<mﬁ/ïu/FwdDomaöMgr.h
>

10 
P¨£rMaö
 * 
MyP¨£rMaö_
;

12 
	gGlobÆP¨£rH™dÀr
::
	$GlobÆP¨£rH™dÀr
()

14 
	}
}

16 
GlobÆP¨£rH™dÀr
::~
	$GlobÆP¨£rH™dÀr
()

18 
	}
}

21 
GlobÆP¨£rH™dÀr
::
	$showRun
()

24 
	`mﬁVp
()->
	`showRun
–
°d
::
cout
 );

25 
	}
}

28 
	gGlobÆP¨£rH™dÀr
::
	$showP‹ts
–c⁄° 
x
, c⁄° 
boﬁ
 
b
 )

30 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << ",árg = " << 
x
 << ", " << 
b
 << 
ídl
;

31 
	`p‹tMgr
()->
	`showP‹ts
–
x
, 
b
 );

32 
	}
}

35 
	gGlobÆP¨£rH™dÀr
::
	$showFds
–c⁄° 
x
, c⁄° 
boﬁ
 
b
)

38 
	`fdMgr
()->
	`showFds
–
x
, 
b
 );

39 
	}
}

42 
	gGlobÆP¨£rH™dÀr
::
	$showEpus
–c⁄° 
x
, c⁄° 
boﬁ
 
b
 )

45 
	`ïuMgr
()->
	`showEpus
–
x
, 
b
 );

46 
	}
}

49 
	gGlobÆP¨£rH™dÀr
::
	$showMacTabÀ
()

51 
	`fdMgr
()->
	`showMacTabÀ
();

52 
	}
}

55 
	gGlobÆP¨£rH™dÀr
::
	$ßveC⁄fig
() const

57 
of°ªam
 
èrgëFûe
;

59 
èrgëFûe
.
	`›í
–
	`∑r£rMaö
()->
SavedC⁄figFûeName_
, 
ios
::
out
 );

61 if–
èrgëFûe
.
	`is_›í
() )

63 
	`mﬁVp
()->
	`showRun
–
èrgëFûe
 );

65 
èrgëFûe
.
	`˛o£
();

67 
	}
}

70 
	gGlobÆP¨£rH™dÀr
::
	$debugP‹ts
–c⁄° 
x
 )

73 
	}
}

76 
GlobÆP¨£rH™dÀr
::
	$∑r£rInC⁄figMode
()

79 
	}
}

82 
GlobÆP¨£rH™dÀr
::
	$∑r£rInSimulMode
()

85 
	}
}

88 
GlobÆP¨£rH™dÀr
::
	$c⁄figHo°«me
–
°rög
 c⁄° & 
s
 )

90 if–
s
.
	`Àngth
() > 16 )

95 
	`∑r£rMaö
()->
	`c⁄figSèã
()->
	`ho°«me
–
s
 );

96 
	`mﬁVp
()->
	`ho°«me
–
s
 );

97 
	}
}

99 
P¨£rMaö
 *

100 
	gGlobÆP¨£rH™dÀr
::
	$∑r£rMaö
() const

102 
	`as£π
–
MyP¨£rMaö_
 );

103 –
MyP¨£rMaö_
 );

104 
	}
}

	@cli/global/GlobalParserHandler.h

4 #i‚de‡
CLI_GLOBALPARSERHANDLER_H


5 
	#CLI_GLOBALPARSERHANDLER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<mﬁ/comm⁄/Ty≥s.h
>

10 ˛as†
	cGlobÆP¨£rH™dÀr
 {

12 
	mpublic
:

14 
GlobÆP¨£rH™dÀr
();

15 ~
GlobÆP¨£rH™dÀr
();

17 
showRun
();

18 
showP‹ts
–c⁄° , c⁄° 
boﬁ
 );

19 
showFds
–c⁄° , c⁄° 
boﬁ
 );

20 
showEpus
–c⁄° , c⁄° 
boﬁ
 );

21 
showMacTabÀ
();

23 
	$ßveC⁄fig
() const;

25 
	`debugP‹ts
( const );

27 
	`∑r£rInC⁄figMode
();

28 
	`∑r£rInSimulMode
();

30 
	`c⁄figHo°«me
–
°rög
 const & );

32 
¥iv©e
:

34 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

	@cli/main/ParserMain.cpp

5 
	~<˛i/maö/P¨£rMaö.h
>

7 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

8 
	~<˛i/globÆ/GlobÆP¨£r.h
>

9 
	~<˛i/c⁄fig/C⁄figP¨£r.h
>

10 
	~<˛i/p‹t/P‹tP¨£r.h
>

11 
	~<˛i/ïu/EpuP¨£r.h
>

12 
	~<˛i/simul/SimulP¨£r.h
>

14 
	~<mﬁ/comm⁄/MﬁVp.h
>

18 
P¨£rMaö
 * 
	gMyP¨£rMaö_
;

22 
	gP¨£rMaö
::
	$P¨£rMaö
()

23 : 
	`mﬁVp_
( 0 ),

24 
	`cfgSèã_
( 0 ),

25 
	`gp_
( 0 ),

26 
	`˝_
( 0 ),

27 
	`µ_
( 0 ),

28 
	`ï_
( 0 ),

29 
	`•_
( 0 ),

30 
	`SavedC⁄figFûeName_
( "" ),

31 
	`globÆProm±Suffix_
( "" ),

32 
	`c⁄figProm±Suffix_
( "" ),

33 
	`p‹tProm±Suffix_
( "" ),

34 
	`ïuProm±Suffix_
( "" ),

35 
	`vbProm±Suffix_
( "" ),

36 
	`simulProm±Suffix_
( "" )

38 
mﬁVp_
 = 0;

40 
cfgSèã_
 = 
√w
 
C⁄figSèã
;

41 
	`as£π
–
cfgSèã_
 );

43 
gp_
 = 
√w
 
GlobÆP¨£r
;

44 
	`as£π
–
gp_
 );

46 
˝_
 = 
√w
 
C⁄figP¨£r
;

47 
	`as£π
–
˝_
 );

49 
µ_
 = 
√w
 
P‹tP¨£r
;

50 
	`as£π
–
µ_
 );

52 
ï_
 = 
√w
 
EpuP¨£r
;

53 
	`as£π
–
ï_
 );

55 
•_
 = 
√w
 
SimulP¨£r
;

56 
	`as£π
–
•_
 );

58 
SavedC⁄figFûeName_
 = "saved_config.txt";

60 
globÆProm±Suffix_
 = "#";

61 
c⁄figProm±Suffix_
 = "(config)#";

62 
p‹tProm±Suffix_
 = "(c⁄fig-" + 
P‹tNode
.
	`tokíSåög
() + ")#";

63 
ïuProm±Suffix_
 = "(c⁄fig-" + 
P‹tNode
.
	`tokíSåög
() + "-"

64 + 
EpuNode
.
	`tokíSåög
() + ")#";

65 
vbProm±Suffix_
 = "(c⁄fig-" + 
VbNode
.
	`tokíSåög
() + ")#";

66 
simulProm±Suffix_
 = "(" + 
Simuœti⁄Node
.
	`tokíSåög
() + ")#";

68 
MyP¨£rMaö_
 = 
this
;

69 
	}
}

71 
	gP¨£rMaö
::~
	$P¨£rMaö
()

73 
	`as£π
–
cfgSèã_
 );

74 
dñëe
 
cfgSèã_
;

75 
cfgSèã_
 = 0;

77 
	`as£π
–
gp_
 );

78 
dñëe
 
gp_
;

79 
gp_
 = 0;

81 
	`as£π
–
˝_
 );

82 
dñëe
 
˝_
;

83 
˝_
 = 0;

85 
	`as£π
–
µ_
 );

86 
dñëe
 
µ_
;

87 
µ_
 = 0;

89 
	`as£π
–
ï_
 );

90 
dñëe
 
ï_
;

91 
ï_
 = 0;

93 
	`as£π
–
•_
 );

94 
dñëe
 
•_
;

95 
•_
 = 0;

97 
	`as£π
–
mﬁVp_
 );

98 
dñëe
 
mﬁVp_
;

99 
mﬁVp_
 = 0;

100 
	}
}

102 
MﬁVp
 *

103 
	gP¨£rMaö
::
	$mﬁVp
() const

105 –
mﬁVp_
 );

106 
	}
}

109 
	gP¨£rMaö
::
	$mﬁVp
–
MﬁVp
 * 
m
 )

111 
	`as£π
–!
mﬁVp_
 && 
m
 );

112 
mﬁVp_
 = 
m
;

113 
	}
}

115 
C⁄figSèã
 *

116 
	gP¨£rMaö
::
	$c⁄figSèã
() const

118 
	`as£π
–
MyP¨£rMaö_
 );

119 –
MyP¨£rMaö_
->
cfgSèã_
 );

120 
	}
}

122 
°rög


123 
	gP¨£rMaö
::
	$globÆProm±
() const

125 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
globÆProm±Suffix_
 );

126 
	}
}

128 
°rög


129 
	gP¨£rMaö
::
	$c⁄figProm±
() const

131 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
c⁄figProm±Suffix_
 );

132 
	}
}

134 
°rög


135 
	gP¨£rMaö
::
	$p‹tProm±
() const

137 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
p‹tProm±Suffix_
 );

138 
	}
}

140 
°rög


141 
	gP¨£rMaö
::
	$ïuProm±
() const

143 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
ïuProm±Suffix_
 );

144 
	}
}

146 
°rög


147 
	gP¨£rMaö
::
	$vbProm±
() const

149 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
vbProm±Suffix_
 );

150 
	}
}

152 
°rög


153 
	gP¨£rMaö
::
	$simulProm±
() const

155 –
	`c⁄figSèã
()->
	`ho°«me
(Ë+ 
simulProm±Suffix_
 );

156 
	}
}

160 
	gP¨£rMaö
::
	$¥ötProm±
–
P¨£rMode
 
m
 ) const

162 
cout
 << 
ídl
;

164  
m
 )

166 
P¨£rModeGlobÆ
:

167 
cout
 << 
	`globÆProm±
();

170 
P¨£rModeC⁄fig
:

171 
cout
 << 
	`c⁄figProm±
();

174 
P¨£rModeP‹t
:

175 
cout
 << 
	`p‹tProm±
();

178 
P¨£rModeEpu
:

179 
cout
 << 
	`ïuProm±
();

182 
P¨£rModeVb
:

183 
cout
 << 
	`vbProm±
();

186 
P¨£rModeSimul
:

187 
cout
 << 
	`simulProm±
();

190 
	}
}

194 
	gP¨£rMaö
::
	$maö
()

196 
°rög
 
øwI≈utSåög
, 
°‹edSåög
, 
modifõdI≈utSåög
;

197 
boﬁ
 
hñpReq
;

199 
øwI≈utSåög
.
	`˛ór
();

200 
°‹edSåög
.
	`˛ór
();

201 
modifõdI≈utSåög
.
	`˛ór
();

203 
	`ªadSavedC⁄fig
();

205 
	`¥ötProm±
–
cfgSèã_
->
cuºP¨£rMode_
 );

207  
åue
 )

209 
	`gëlöe
–
cö
, 
øwI≈utSåög
 );

211 if–
øwI≈utSåög
.
	`com∑ª
( "quit" ) == 0 )

213 
cout
 << "Quôög.." << 
ídl
;

217 if–
øwI≈utSåög
.
	`em±y
(Ë&& 
°‹edSåög
.empty() )

219 
	`¥ötProm±
–
cfgSèã_
->
cuºP¨£rMode_
 );

223 
modifõdI≈utSåög
 = 
°‹edSåög
 + 
øwI≈utSåög
;

225 
cfgSèã_
->
	`comm™dLöes
().
	`push_back
–
modifõdI≈utSåög
 );

227 
hñpReq
 = 
Ál£
;

229  
cfgSèã_
->
cuºP¨£rMode_
 )

231 
P¨£rModeGlobÆ
:

232 
gp_
->
	`globÆP¨£r
–
modifõdI≈utSåög
, 
hñpReq
, 
cfgSèã_
 );

235 
P¨£rModeC⁄fig
:

236 
˝_
->
	`c⁄figP¨£r
–
modifõdI≈utSåög
, 
hñpReq
, 
cfgSèã_
 );

239 
P¨£rModeP‹t
:

240 
µ_
->
	`p‹tP¨£r
–
modifõdI≈utSåög
, 
hñpReq
, 
cfgSèã_
 );

243 
P¨£rModeEpu
:

244 
ï_
->
	`ïuP¨£r
–
modifõdI≈utSåög
, 
hñpReq
, 
cfgSèã_
 );

247 
P¨£rModeVb
:

250 
P¨£rModeSimul
:

251 
•_
->
	`simulP¨£r
–
modifõdI≈utSåög
, 
hñpReq
, 
cfgSèã_
 );

255 if–
hñpReq
 )

257 
size_t
 
posQM¨k
 = 
modifõdI≈utSåög
.
	`föd
( '?' );

258 if–
posQM¨k
 == 0 )

260 
modifõdI≈utSåög
.
	`˛ór
();

261 
°‹edSåög
.
	`˛ór
();

265 
°‹edSåög
 = 
modifõdI≈utSåög
.
	`sub°r
–0, 
posQM¨k
 );

270 
°‹edSåög
.
	`˛ór
();

273 
	`¥ötProm±
–
cfgSèã_
->
cuºP¨£rMode_
 );

274 
cout
 << 
°‹edSåög
;

278 
	}
}

281 
	gP¨£rMaö
::
	$ªadSavedC⁄fig
() const

283 
°rög
 
löe
;

284 
if°ªam
 
ßvedFûe
;

286 
cfgSèã_
->
∑r£rVîbosôy_
 = 
Ál£
;

288 
ßvedFûe
.
	`›í
–
SavedC⁄figFûeName_
, 
ios
::
ö
 );

290 if–
ßvedFûe
.
	`is_›í
() )

292  ! 
ßvedFûe
.
	`eof
() )

294 
	`gëlöe
–
ßvedFûe
, 
löe
 );

296 
cout
 << 
löe
 << 
ídl
;

298 if–
löe
.
	`em±y
() )

303 if–
löe
.
	`com∑ª
( "!" ) == 0 )

305 
cfgSèã_
->
cuºP¨£rMode_
 = 
P¨£rModeC⁄fig
;

309 
	`∑r£SavedLöe
–
löe
 );

311 
löe
.
	`˛ór
();

314 
ßvedFûe
.
	`˛o£
();

316 
cfgSèã_
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

319 
cfgSèã_
->
∑r£rVîbosôy_
 = 
åue
;

320 
	}
}

323 
	gP¨£rMaö
::
	$∑r£SavedLöe
–
°rög
 c⁄° & 
öputSåög
 ) const

325 
boﬁ
 
hñpReq
 = 
Ál£
;

327  
cfgSèã_
->
cuºP¨£rMode_
 )

329 
P¨£rModeGlobÆ
:

330 
gp_
->
	`globÆP¨£r
–
öputSåög
, 
hñpReq
, 
cfgSèã_
 );

333 
P¨£rModeC⁄fig
:

334 
˝_
->
	`c⁄figP¨£r
–
öputSåög
, 
hñpReq
, 
cfgSèã_
 );

337 
P¨£rModeP‹t
:

338 
TryP¨£rModeP‹t
:

339 
µ_
->
	`p‹tP¨£r
–
öputSåög
, 
hñpReq
, 
cfgSèã_
 );

342 
P¨£rModeEpu
:

343 if–! 
ï_
->
	`ïuP¨£r
–
öputSåög
, 
hñpReq
, 
cfgSèã_
 ) )

345 
TryP¨£rModeP‹t
;

349 
P¨£rModeVb
:

352 
P¨£rModeSimul
:

355 
	}
}

359 
	gC⁄figSèã
::
	$C⁄figSèã
()

360 : 
	`ho°«me_
( "SoftSwitch" ),

361 
	`comm™dLöes_
(),

362 
	`cuºP¨£rMode_
–
P¨£rModeGlobÆ
 ),

363 
	`cuºP‹tId_
( 0 ),

364 
	`cuºEpuId_
( 0 ),

365 
	$∑r£rVîbosôy_
–
åue
 )

367 
	}
}

369 
	gC⁄figSèã
::~
	$C⁄figSèã
()

371 
	`˛ór
();

372 
	}
}

375 
	gC⁄figSèã
::
	$˛ór
()

377 
ho°«me_
 = 
	`°rög
( "SoftSwitch" );

378 
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

379 
cuºP‹tId_
 = 0;

380 
cuºEpuId_
 = 0;

381 
∑r£rVîbosôy_
 = 
åue
;

382 
comm™dLöes_
.
	`˛ór
();

383 
	}
}

385 
°rög


386 
	gC⁄figSèã
::
	$ho°«me
() const

388  
ho°«me_
;

389 
	}
}

392 
	gC⁄figSèã
::
	$ho°«me
–
°rög
 c⁄° & 
s
 )

394 
ho°«me_
 = 
s
;

395 
	}
}

397 
	gve˘‹
< 
	g°rög
 > &

398 
	gC⁄figSèã
::
	$comm™dLöes
()

400  
comm™dLöes_
;

401 
	}
}

407 
	$¥ötHñp
–
P¨£Node
 c⁄° & 
p
 )

409 
	`¥ötf
–" %12† %s\n", 
p
.
	`tokí
(),Ö.
	`hñpSåög
().
	`c_°r
() );

410 
	}
}

	@cli/main/ParserMain.h

4 #i‚de‡
CLI_MAIN_PARSERMAIN_H


5 
	#CLI_MAIN_PARSERMAIN_H


	)

7 
	~<˛i/comm⁄/Ty≥s.h
>

9 
usög
 
«me•a˚
 
	g°d
;

11 
	eP¨£rMode
 {

12 
	mP¨£rModeGlobÆ
 = 0,

13 
	mP¨£rModeC⁄fig
,

14 
	mP¨£rModeP‹t
,

15 
	mP¨£rModeEpu
,

16 
	mP¨£rModeVb
,

17 
	mP¨£rModeSimul


21 ˛as†
	cP¨£Node


23 
	mpublic
:

25 
	$P¨£Node
–
°rög
 c⁄° & 
t
, såög c⁄° & 
h
 )

26 : 
	`tokí_
–
t
 ), 
	$hñpSåög_
–
h
 )

30 
	$P¨£Node
()

31 : 
	`tokí_
–"ERROR" ), 
	`hñpSåög_
( "ERROR" )

33 
	}
}

35 ~
	$P¨£Node
()

37 
tokí_
 = "ERROR";

38 
hñpSåög_
 = "ERROR";

39 
	}
}

41 
	gP¨£Node
 & 
	g›î©‹
=–
P¨£Node
 c⁄° & 
rhs
 )

46 
tokí_
 = 
rhs
.token_;

47 
	ghñpSåög_
 = 
rhs
.
hñpSåög_
;

50  (*
	gthis
);

53 c⁄° * 
	$tokí
() const

55  
tokí_
.
	`c_°r
();

56 
	}
}

58 
°rög
 
	$tokíSåög
() const

60  
tokí_
;

61 
	}
}

63 
°rög
 
	$hñpSåög
() const

65  
hñpSåög_
;

66 
	}
}

68 
	g¥iv©e
:

70 
°rög
 
tokí_
;

71 
°rög
 
	ghñpSåög_
;

74 
¥ötHñp
–
P¨£Node
 const & );

77 ˛as†
	cC⁄figSèã
 {

79 
	mpublic
:

81 
C⁄figSèã
();

82 ~
C⁄figSèã
();

83 
˛ór
();

85 
°rög
 
	$ho°«me
() const;

86 
	`ho°«me
–
°rög
 const & );

88 
ve˘‹
< 
°rög
 > & 
	`comm™dLöes
();

92 
°rög
 
ho°«me_
;

93 
ve˘‹
< 
°rög
 > 
comm™dLöes_
;

94 
P¨£rMode
 
cuºP¨£rMode_
;

95 
cuºP‹tId_
;

96 
cuºEpuId_
;

97 
boﬁ
 
∑r£rVîbosôy_
;

101 
˛ass
 
GlobÆP¨£r
;

102 
˛ass
 
C⁄figP¨£r
;

103 
˛ass
 
P‹tP¨£r
;

104 
˛ass
 
EpuP¨£r
;

105 
˛ass
 
SimulP¨£r
;

107 
˛ass
 
MﬁVp
;

109 ˛as†
	cP¨£rMaö
 {

111 
public
:

113 
	`P¨£rMaö
();

114 ~
	`P¨£rMaö
();

116 
	`maö
();

117 
	$¥ötProm±
–
P¨£rMode
 
m
 ) const;

118 
	$ªadSavedC⁄fig
() const;

119 
	$∑r£SavedLöe
–
°rög
 const & ) const;

121 
MﬁVp
 * 
	$mﬁVp
() const;

122 
	`mﬁVp
–
MﬁVp
 * );

124 
C⁄figSèã
 * 
	$c⁄figSèã
() const;

126 
°rög
 
	$globÆProm±
() const;

127 
°rög
 
	$c⁄figProm±
() const;

128 
°rög
 
	$p‹tProm±
() const;

129 
°rög
 
	$ïuProm±
() const;

130 
°rög
 
	$vbProm±
() const;

131 
°rög
 
	$simulProm±
() const;

135 
	`P¨£rMaö
–
P¨£rMaö
 const & );

136 
P¨£rMaö
 & 
›î©‹
=( ParserMain const & );

138 
MﬁVp
 * 
mﬁVp_
;

140 
C⁄figSèã
 * 
cfgSèã_
;

142 
GlobÆP¨£r
 * 
gp_
;

143 
C⁄figP¨£r
 * 
˝_
;

144 
P‹tP¨£r
 * 
µ_
;

145 
EpuP¨£r
 * 
ï_
;

146 
SimulP¨£r
 * 
•_
;

148 c⁄° * 
SavedC⁄figFûeName_
;

150 
°rög
 
globÆProm±Suffix_
;

151 
°rög
 
c⁄figProm±Suffix_
;

152 
°rög
 
p‹tProm±Suffix_
;

153 
°rög
 
ïuProm±Suffix_
;

154 
°rög
 
vbProm±Suffix_
;

155 
°rög
 
simulProm±Suffix_
;

	@cli/port/PortParser.cpp

4 
	~<˛i/p‹t/P‹tP¨£r.h
>

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<•úô/•úôö˛ude.h
>

8 
usög
 
«me•a˚
 
	gboo°
::
•úô
;

9 
usög
 
«me•a˚
 
	gboo°
::
•úô
::
˛assic
;

11 
P‹tP¨£rH™dÀr
 * 
	gµh_C›y_
;

13 
P¨£rMaö
 * 
MyP¨£rMaö_
;

15 
	gP‹tP¨£r
::
	$P‹tP¨£r
()

17 
µh_
 = 
√w
 
P‹tP¨£rH™dÀr
;

18 
	`as£π
–
µh_
 );

20 
µh_C›y_
 = 
µh_
;

21 
	}
}

23 
	gP‹tP¨£r
::~
	$P‹tP¨£r
()

25 if–
µh_
 )

27 
dñëe
 
µh_
;

28 
µh_
 = 0;

30 
µh_C›y_
 = 0;

32 
	}
}

36 
	gP¨£rModeCh™ge
;

37 
boﬁ
 
	gHñpFœg
;

38 
	gP‹tP¨am1
;

39 
boﬁ
 
	gnoFœg
;

42 
	$ac˚±P‹tHñpEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

44 
HñpFœg
 = 
åue
;

45 
	}
}

47 
	$doP‹tHñp
–c⁄° * 
a
, c⁄° * 
b
 )

49 
	`¥ötHñp
–
ExôNode
 );

50 
	`¥ötHñp
–
EndNode
 );

51 
	`¥ötHñp
–
NoNode
 );

52 
	`¥ötHñp
–
EpuNode
 );

53 
	}
}

55 
	$doP‹tNoHñp
–c⁄° * 
a
, c⁄° * 
b
 )

57 
	`¥ötHñp
–
EpuNode
 );

58 
	}
}

60 
	$ªmembîNo
–c⁄° * 
a
, c⁄° * 
b
 )

62 
noFœg
 = 
åue
;

63 
	}
}

65 
	$doP‹tEpuHñp
–c⁄° * 
a
, c⁄° * 
b
 )

67 
	`¥ötEpuIdHñp
();

68 
	}
}

70 
	$gëP‹tEpuId
–c⁄° 
x
 )

72 
P‹tP¨am1
 = 
x
;

73 
	}
}

75 
	$doP‹tEpuIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

77 
	`¥ötHñp
–
Rëu∫Node
 );

78 
	}
}

80 
	$ac˚±P‹tEpuIdEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

83 if–
noFœg
 )

85 
µh_C›y_
->
	`dñëeEpuN
–
P‹tP¨am1
 );

89 
boﬁ
 
suc˚ss
 = 
µh_C›y_
->
	`modifyEpuN
–
P‹tP¨am1
 );

91 if–
suc˚ss
 )

93 
P¨£rModeCh™ge
 = +1;

97 
cout
 << "Comm™d REJECTED: ProbablyÅhi†EPUÉxi°†ö somêŸhî P‹t." << 
ídl
;

101 
P‹tP¨am1
 = 0;

103 
	}
}

105 
	$doP‹tExôHñp
–c⁄° * 
a
, c⁄° * 
b
 )

107 
	`¥ötHñp
–
Rëu∫Node
 );

108 
	}
}

110 
	$doP‹tExôEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

112 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 = 0;

113 
P¨£rModeCh™ge
 = -1;

114 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << 
ídl
;

115 
	}
}

117 
	$doP‹tEndHñp
–c⁄° * 
a
, c⁄° * 
b
 )

119 
	`¥ötHñp
–
Rëu∫Node
 );

120 
	}
}

122 
	$doP‹tEndEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

124 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 = 0;

125 
P¨£rModeCh™ge
 = -2;

126 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << 
ídl
;

127 
	}
}

130 
	gP‹tGømm¨
 : 
public
 
gømm¨
< 
P‹tGømm¨
 >

132 
ãm∂©e
 <
ty≥«me
 
Sˇ¬îT
>

133 
	sdeföôi⁄


135 
deföôi⁄
–
P‹tGømm¨
 const& )

138 
HñpTok
 = 
ch_p
('?'Ë>> *
¥öt_p
 >> 
íd_p
[ &
ac˚±P‹tHñpEﬁ
 ];

139 
	gNoTok
 = 
°r_p
–
NoNode
.
tokí
() );

140 
	gEpuTok
 = 
°r_p
–
EpuNode
.
tokí
() );

141 
	gExôTok
 = 
°r_p
–
ExôNode
.
tokí
() );

142 
	gEndTok
 = 
°r_p
–
EndNode
.
tokí
() );

145 
	gex¥essi⁄
 = 
P‹tHñp
 | 
NoRuÀNode
 | 
EpuRuÀNode


146 | 
ExôRuÀNode
 | 
EndRuÀNode
;

147 
	gP‹tHñp
 = 
HñpTok
[ &
doP‹tHñp
 ];

149 
	gNoRuÀNode
 = 
NoTok
[ &
ªmembîNo
 ] >> (
NoHñp
 | 
EpuRuÀNode
);

150 
	gNoHñp
 = 
HñpTok
[ &
doP‹tNoHñp
 ];

152 
	gEpuRuÀNode
 = 
EpuTok
 >> (
EpuHñp
 | 
EpuIdRuÀNode
);

153 
	gEpuHñp
 = 
HñpTok
[ &
doP‹tEpuHñp
 ];

154 
	gEpuIdRuÀNode
 = 
uöt_p
[ &
gëP‹tEpuId
 ] >> (
EpuIdHñp
 | 
EpuIdEﬁ
);

155 
	gEpuIdHñp
 = 
HñpTok
[ &
doP‹tEpuIdHñp
 ];

156 
	gEpuIdEﬁ
 = 
íd_p
[ &
ac˚±P‹tEpuIdEﬁ
 ];

158 
	gExôRuÀNode
 = 
ExôTok
 >> (
ExôHñp
 | 
ExôEﬁ
);

159 
	gExôHñp
 = (
HñpTok
)[ &
doP‹tExôHñp
 ];

160 
	gExôEﬁ
 = 
íd_p
[ &
doP‹tExôEﬁ
 ];

162 
	gEndRuÀNode
 = 
EndTok
 >> (
EndHñp
 | 
EndEﬁ
);

163 
	gEndHñp
 = (
HñpTok
)[ &
doP‹tEndHñp
 ];

164 
	gEndEﬁ
 = 
íd_p
[ &
doP‹tEndEﬁ
 ];

168 
	gruÀ
< 
	gSˇ¬îT
 > 
	gHñpTok
, 
	gEpuTok
, 
	gex¥essi⁄
,

169 
	gP‹tHñp
, 
	gEpuRuÀNode
, 
	gEpuHñp
,

170 
	gNoTok
, 
	gNoRuÀNode
, 
	gNoHñp
,

171 
	gEpuIdRuÀNode
, 
	gEpuIdHñp
, 
	gEpuIdEﬁ
,

172 
	gExôTok
, 
	gExôRuÀNode
, 
	gExôHñp
, 
	gExôEﬁ
,

173 
	gEndTok
, 
	gEndRuÀNode
, 
	gEndHñp
, 
	gEndEﬁ


176 
	gruÀ
< 
	gSˇ¬îT
 > c⁄°& 
°¨t
() const

178  
	gex¥essi⁄
;

184 
	gP‹tP¨£r
::
	$p‹tP¨£r
(

185 
°rög
 c⁄° & 
öputSåög
,

186 
boﬁ
 & 
hñpReque°ed
,

187 
C⁄figSèã
 * 
c
 )

189 
P‹tP¨am1
 = 0;

190 
P¨£rModeCh™ge
 = 0;

191 
HñpFœg
 = 
Ál£
;

192 
noFœg
 = 
Ál£
;

194 
	`as£π
–
c
 );

195 
c
->
cuºP¨£rMode_
 = 
P¨£rModeP‹t
;

197 
P‹tGømm¨
 
g
;

198 
∑r£_öfo
<> 
∑r£Info
 =

199 
	`∑r£
(
öputSåög
.
	`c_°r
(), 
g
, 
•a˚_p
);

203 if–
∑r£Info
.
fuŒ
 )

207 if–
P¨£rModeCh™ge
 != 0 )

209 
	`as£π
–
HñpFœg
 =
Ál£
 );

211 if–
P¨£rModeCh™ge
 == +1 )

212 
c
->
cuºP¨£rMode_
 = 
P¨£rModeEpu
;

213 if–
P¨£rModeCh™ge
 == -1 )

214 
c
->
cuºP¨£rMode_
 = 
P¨£rModeC⁄fig
;

215 if–
P¨£rModeCh™ge
 == -2 )

216 
c
->
cuºP¨£rMode_
 = 
P¨£rModeGlobÆ
;

218 
	`as£π
( 0 );

221 if–
HñpFœg
 )

223 
	`as£π
–
P¨£rModeCh™ge
 == 0 );

224 
hñpReque°ed
 = 
åue
;

229 if–
c
->
∑r£rVîbosôy_
 )

231 
cout
 << "Sy¡ax ERROR: I≈uàuƒecognized. (P‹tP¨£r)" << 
ídl
;

236 
	}
}

	@cli/port/PortParser.h

4 #i‚de‡
CLI_PORTPARSER_H


5 
	#CLI_PORTPARSER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/p‹t/P‹tP¨£rH™dÀr.h
>

10 ˛as†
	cP‹tP¨£r
 {

12 
	mpublic
:

14 
P‹tP¨£r
();

15 ~
P‹tP¨£r
();

16 
mﬁVp
–
MﬁVp
 * );

20 
p‹tP¨£r
–
°rög
 c⁄° &, 
boﬁ
 &, 
C⁄figSèã
 * );

24 
P‹tP¨£r
( PortParser const & );

25 
	mP‹tP¨£r
 & 
	m›î©‹
=–
P‹tP¨£r
 const & );

27 
P‹tP¨£rH™dÀr
 * 
	mµh_
;

	@cli/port/PortParserHandler.cpp

4 
	~<˛i/p‹t/P‹tP¨£rH™dÀr.h
>

5 
	~<mﬁ/comm⁄/MﬁVp.h
>

6 
	~<mﬁ/ïu/Epu.h
>

8 
P¨£rMaö
 * 
MyP¨£rMaö_
;

10 
	gP‹tP¨£rH™dÀr
::
	$P‹tP¨£rH™dÀr
()

12 
	}
}

14 
P‹tP¨£rH™dÀr
::~
	$P‹tP¨£rH™dÀr
()

16 
	}
}

18 
P¨£rMaö
 *

19 
P‹tP¨£rH™dÀr
::
	$∑r£rMaö
() const

21 
	`as£π
–
MyP¨£rMaö_
 );

22 –
MyP¨£rMaö_
 );

24 
	}
}

26 
boﬁ


27 
	gP‹tP¨£rH™dÀr
::
	$modifyEpuN
 ( 
ïuNumbî
 )

29 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << ",árg = " << 
ïuNumbî
 << 
ídl
;

31 
boﬁ
 
ac˚±ed
 = 
Ál£
;

33 
Epu
 * 
eFöd
 = 
	`ïuMgr
()->
	`födEpu
–
ïuNumbî
 );

34 if–
eFöd
 )

36 if–
eFöd
->
	`p‹tId
(Ë=
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 )

38 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
 = 
eFöd
->
	`ïuId
();

39 
ac˚±ed
 = 
åue
;

43 
ac˚±ed
 = 
Ál£
;

48 
Epu
 * 
eNew
 = 
	`ïuMgr
()->
	`¸óãEpu
–
ïuNumbî
 );

49 
	`as£π
–
eNew
 );

51 
eNew
->
	`ïuId
–
ïuNumbî
 );

52 
eNew
->
	`p‹tId
–
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºP‹tId_
 );

54 
MyP¨£rMaö_
->
	`c⁄figSèã
()->
cuºEpuId_
 = 
eNew
->
	`ïuId
();

55 
ac˚±ed
 = 
åue
;

58  
ac˚±ed
;

59 
	}
}

62 
	gP‹tP¨£rH™dÀr
::
	$dñëeEpuN
 ( 
ïuNumbî
 )

64 
cout
 << " -> " << 
__PRETTY_FUNCTION__
 << ",árg = " << 
ïuNumbî
 << 
ídl
;

66 
Epu
 * 
e
 = 
	`ïuMgr
()->
	`födEpu
–
ïuNumbî
 );

68 if–
e
 )

70 
e
->
	`p‹tId
–
InvÆidP‹tId
 );

71 
e
->
	`fdId
–
InvÆidFwdDomaöId
 );

72 
	`ïuMgr
()->
	`dñëeEpu
–
e
->
	`ïuId
() );

74 
	}
}

	@cli/port/PortParserHandler.h

4 #i‚de‡
CLI_PORTPARSERHANDLER_H


5 
	#CLI_PORTPARSERHANDLER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

9 
	~<mﬁ/comm⁄/MﬁVp.h
>

10 
	~<mﬁ/ïu/EpuMgr.h
>

11 
	~<mﬁ/ïu/Epu.h
>

13 ˛as†
	cP‹tP¨£rH™dÀr
 {

15 
	mpublic
:

16 
P‹tP¨£rH™dÀr
();

17 ~
P‹tP¨£rH™dÀr
();

19 
boﬁ
 
modifyEpuN
( );

21 
dñëeEpuN
( );

23 
	m¥iv©e
:

25 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

	@cli/simul/SimulParser.cpp

4 
	~<˛i/simul/SimulP¨£r.h
>

5 
	~<˛i/comm⁄/Føme.h
>

6 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<˛i/simul/SimulP¨£rH™dÀr.h
>

9 
	~<•úô/•úôö˛ude.h
>

10 
usög
 
«me•a˚
 
	gboo°
::
•úô
;

11 
usög
 
«me•a˚
 
	gboo°
::
•úô
::
˛assic
;

13 
SimulP¨£rH™dÀr
 * 
	g•h_C›y_
;

15 
P¨£rMaö
 * 
MyP¨£rMaö_
;

17 
	gSimulP¨£r
::
	$SimulP¨£r
()

19 
•h_
 = 
√w
 
SimulP¨£rH™dÀr
;

20 
	`as£π
–
•h_
 );

22 
•h_C›y_
 = 
•h_
;

23 
	}
}

25 
	gSimulP¨£r
::~
	$SimulP¨£r
()

27 if–
•h_
 )

29 
dñëe
 
•h_
;

30 
•h_
 = 0;

32 
•h_C›y_
 = 0;

34 
	}
}

38 
«me•a˚
 
	gSimulP¨£rNameS∑˚


40 
boﬁ
 
	gP¨£rModeCh™ged
;

41 
P¨£rMode
 
	gNewP¨£rMode
;

42 
boﬁ
 
	gHñpFœg
;

44 
	g¡hTag
;

46 
	gda
, 
	gß
;

47 
P‹tId
 
	gp‹tNumbî
;

49 sig√d 
	gwhichTag
;

50 
VœnTag
 
	gvœnTag
;

51 
VœnHódî
 
	gvœnHódî
;

55 
P¨£Node
 
DaNode
 ( "da=", "destimation MACáddress" );

56 
P¨£Node
 
SaNode
 ( "sa=", "source MACáddress" );

60 
ac˚±SimulHñpEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

62 
	gHñpFœg
 = 
åue
;

65 
doSimulHñp
–c⁄° * 
a
, c⁄° * 
b
 )

67 
¥ötHñp
–
ExôNode
 );

68 
¥ötHñp
–
EndNode
 );

69 
¥ötHñp
–
P‹tNode
 );

72 
doSimulExôHñp
–c⁄° * 
a
, c⁄° * 
b
 )

74 
¥ötHñp
–
Rëu∫Node
 );

77 
doSimulExôEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

79 
	gP¨£rModeCh™ged
 = 
åue
;

80 
	gNewP¨£rMode
 = 
P¨£rModeGlobÆ
;

83 
doSimulEndHñp
–c⁄° * 
a
, c⁄° * 
b
 )

85 
¥ötHñp
–
Rëu∫Node
 );

88 
doSimulEndEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

90 
	gP¨£rModeCh™ged
 = 
åue
;

91 
	gNewP¨£rMode
 = 
P¨£rModeGlobÆ
;

94 
doP‹tHñp
–c⁄° * 
a
, c⁄° * 
b
 )

96 
¥ötHñp
–
I≈utNumbîNode
 );

99 
gëP‹tId
–
x
 )

101 
	gp‹tNumbî
 = 
x
;

104 
doP‹tIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

106 
¥ötHñp
–
DaNode
 );

109 
doDaHñp
–c⁄° * 
a
, c⁄° * 
b
 )

111 
¥ötHñp
–
I≈utNumbîNode
 );

114 
gëDaVÆue
–
x
 )

116 
	gda
 = 
x
;

119 
doDaVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

121 
¥ötHñp
–
SaNode
 );

124 
doSaHñp
–c⁄° * 
a
, c⁄° * 
b
 )

126 
¥ötHñp
–
I≈utNumbîNode
 );

129 
gëSaVÆue
–
x
 )

131 
	gß
 = 
x
;

134 
doSaVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

136 
¥ötHñp
–
Rëu∫Node
 );

137 
¥ötHñp
–
DŸ1adNode
 );

138 
¥ötHñp
–
DŸ1qNode
 );

142 
doVœnHódîHñp
–c⁄° * 
a
, c⁄° * 
b
 )

144 
¥ötHñp
–
DŸ1adNode
 );

145 
¥ötHñp
–
DŸ1qNode
 );

148 
ac˚±VhDŸ1adTok
–c⁄° * 
a
, c⁄° * 
b
 )

150 if–
	gwhichTag
 =-1 || 
whichTag
 == 0 )

151 ++
whichTag
;

153 
	gvœnTag
.
	gvœnTy≥_
 = 
VœnTy≥DŸ1ad
;

156 
ac˚±VhDŸ1qTok
–c⁄° * 
a
, c⁄° * 
b
 )

158 if–
	gwhichTag
 =-1 || 
whichTag
 == 0 )

159 ++
whichTag
;

161 
	gvœnTag
.
	gvœnTy≥_
 = 
VœnTy≥DŸ1q
;

164 
doVh1Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

166 
¥ötHñp
–
CosNode
 );

167 
¥ötHñp
–
O≥nBø˚Node
 );

170 
ac˚±VhCosTok
–c⁄° * 
a
, c⁄° * 
b
 )

174 
doVhCosHñp
–c⁄° * 
a
, c⁄° * 
b
 )

176 
¥ötHñp
–
I≈utNumbîNode
 );

179 
gëCosVÆ
–c⁄° 
x
 )

181 
	gvœnTag
.
	gcosVÆue_
 = 
x
;

184 
doVhCosVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

186 
¥ötHñp
–
O≥nBø˚Node
 );

189 
ac˚±VhO≥nBø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

193 
doVhO≥nBø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

195 
¥ötHñp
–
VœnIdNode
 );

198 
ac˚±VhVœnIdTok
–c⁄° * 
a
, c⁄° * 
b
 )

202 
gëVœnIdVÆ
–c⁄° 
x
 )

204 
	gvœnTag
.
	gvœnidVÆue_
 = 
x
;

207 
doVhVœnIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

209 
¥ötHñp
–
I≈utNumbîNode
 );

212 
doVhVœnIdVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

214 
¥ötHñp
–
Clo£Bø˚Node
 );

217 
ac˚±VhClo£Bø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

219 
	gvœnHódî
.
	gèg_
[ 
whichTag
 ] = 
vœnTag
;

220 
	gvœnTag
.
˛ór
();

223 
doVhClo£Bø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

225 
¥ötHñp
–
Rëu∫Node
 );

226 
¥ötHñp
–
DŸ1adNode
 );

227 
¥ötHñp
–
DŸ1qNode
 );

231 
ac˚±SimulEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

233 
Føme
 
	gf
;

234 
	gf
.
d°Addr
–
da
 );

235 
	gf
.
§cAddr
–
ß
 );

236 
	gf
.
vœnHódî
( vlanHeader );

238 
	g•h_C›y_
->
rxFøme
–
p‹tNumbî
, 
f
 );

245 
	gSimulGømm¨
 : 
public
 
gømm¨
< 
SimulGømm¨
 >

247 
ãm∂©e
 <
ty≥«me
 
Sˇ¬îT
>

248 
	sdeföôi⁄


250 
deföôi⁄
–
SimulGømm¨
 const& )

252 
usög
 
«me•a˚
 
SimulP¨£rNameS∑˚
;

255 
	gHñpTok
 = 
ch_p
('?'Ë>> *
¥öt_p
 >> 
íd_p
[ &
ac˚±SimulHñpEﬁ
 ];

256 
	gExôTok
 = 
°r_p
–
ExôNode
.
tokí
() );

257 
	gEndTok
 = 
°r_p
–
EndNode
.
tokí
() );

258 
	gP‹tTok
 = 
°r_p
–
P‹tNode
.
tokí
() );

259 
	gDaTok
 = 
°r_p
–
DaNode
.
tokí
() );

260 
	gSaTok
 = 
°r_p
–
SaNode
.
tokí
() );

261 
	gDŸ1adTok
 = 
°r_p
–
DŸ1adNode
.
tokí
() );

262 
	gDŸ1qTok
 = 
°r_p
–
DŸ1qNode
.
tokí
() );

263 
	gCosTok
 = 
°r_p
–
CosNode
.
tokí
() );

264 
	gVœnIdTok
 = 
°r_p
–
VœnIdNode
.
tokí
() );

265 
	gO≥nBø˚Tok
 = 
ch_p
('(');

266 
	gClo£Bø˚Tok
 = 
ch_p
(')');

269 
	gex¥essi⁄
 = 
SimulHñp
 | 
ExôRuÀNode
 | 
EndRuÀNode
 | 
P‹tRuÀNode
;

270 
	gSimulHñp
 = (
HñpTok
)[ &
doSimulHñp
 ];

272 
	gExôRuÀNode
 = 
ExôTok
 >> (
ExôHñp
 | 
ExôEﬁ
);

273 
	gExôHñp
 = (
HñpTok
)[ &
doSimulExôHñp
 ];

274 
	gExôEﬁ
 = 
íd_p
[ &
doSimulExôEﬁ
 ];

276 
	gEndRuÀNode
 = 
EndTok
 >> (
EndHñp
 | 
EndEﬁ
);

277 
	gEndHñp
 = (
HñpTok
)[ &
doSimulEndHñp
 ];

278 
	gEndEﬁ
 = 
íd_p
[ &
doSimulEndEﬁ
 ];

280 
	gP‹tRuÀNode
 = 
P‹tTok
 >> (
P‹tHñp
 | 
P‹tIdRuÀNode
);

281 
	gP‹tHñp
 = (
HñpTok
)[ &
doP‹tHñp
 ];

282 
	gP‹tIdRuÀNode
 = 
uöt_p
[ &
gëP‹tId
] >> (
P‹tIdHñp
 | 
DaRuÀNode
);

283 
	gP‹tIdHñp
 = (
HñpTok
)[ &
doP‹tIdHñp
 ];

285 
	gDaRuÀNode
 = 
DaTok
 >> (
DaHñp
 | 
DaVÆueRuÀNode
);

286 
	gDaHñp
 = (
HñpTok
)[ &
doDaHñp
 ];

287 
	gDaVÆueRuÀNode
 = 
uöt_p
[ &
gëDaVÆue
 ] >> (
DaVÆueHñp
 | 
SaRuÀNode
);

288 
	gDaVÆueHñp
 = (
HñpTok
)[ &
doDaVÆueHñp
 ];

290 
	gSaRuÀNode
 = 
SaTok
 >> (
SaHñp
 | 
SaVÆueRuÀNode
);

291 
	gSaHñp
 = (
HñpTok
)[ &
doSaHñp
 ];

292 
	gSaVÆueRuÀNode
 = 
uöt_p
[ &
gëSaVÆue
 ] >>

293 (
SaVÆueHñp
 | 
SimulEﬁ
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
 );

294 
	gSaVÆueHñp
 = (
HñpTok
)[ &
doSaVÆueHñp
 ];

296 
	gSimulEﬁ
 = 
íd_p
[ &
ac˚±SimulEﬁ
 ];

298 
	gVhDŸ1adRuÀNode
 = 
DŸ1adTok
[ &
ac˚±VhDŸ1adTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

299 
	gVhDŸ1qRuÀNode
 = 
DŸ1qTok
[ &
ac˚±VhDŸ1qTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

300 
	gVh1Hñp
 = 
HñpTok
[ &
doVh1Hñp
 ];

302 
	gVhCosRuÀNode
 = 
CosTok
[ &
ac˚±VhCosTok
 ] >> (
VhCosHñp
 | 
VhCosVÆueNode
);

303 
	gVhCosHñp
 = (
HñpTok
)[ &
doVhCosHñp
 ];

304 
	gVhCosVÆueNode
 = 
uöt_p
[ &
gëCosVÆ
 ] >> (
VhCosVÆueHñp
 | 
VhO≥nBø˚RuÀNode
);

305 
	gVhCosVÆueHñp
 = (
HñpTok
)[ &
doVhCosVÆueHñp
 ];

307 
	gVhO≥nBø˚RuÀNode
 = 
O≥nBø˚Tok
[ &
ac˚±VhO≥nBø˚Tok
 ] >> (
VhO≥nBø˚Hñp
 | 
VhVœnIdRuÀNode
 );

308 
	gVhO≥nBø˚Hñp
 = (
HñpTok
)[ &
doVhO≥nBø˚Hñp
 ];

310 
	gVhVœnIdRuÀNode
 = 
VœnIdTok
[ &
ac˚±VhVœnIdTok
 ] >> (
VhVœnIdHñp
 | 
VhVœnIdVÆueRuÀNode
);

311 
	gVhVœnIdHñp
 = (
HñpTok
)[ &
doVhVœnIdHñp
 ];

312 
	gVhVœnIdVÆueRuÀNode
 = 
uöt_p
[ &
gëVœnIdVÆ
 ] >> (
VhVœnIdVÆueHñp
 | 
VhClo£Bø˚RuÀNode
);

313 
	gVhVœnIdVÆueHñp
 = (
HñpTok
)[ &
doVhVœnIdVÆueHñp
 ];

315 
	gVhClo£Bø˚RuÀNode
 = 
Clo£Bø˚Tok
[ &
ac˚±VhClo£Bø˚Tok
 ] >> (
VhClo£Bø˚Hñp
 | 
SimulEﬁ
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
);

316 
	gVhClo£Bø˚Hñp
 = (
HñpTok
)[ &
doVhClo£Bø˚Hñp
 ];

321 
	gruÀ
< 
	gSˇ¬îT
 > 
	gHñpTok
, 
	gExôTok
, 
	gEndTok
, 
	gDŸ1adTok
, 
	gDŸ1qTok
, 
	gCosTok
,

322 
	gVœnIdTok
, 
	gO≥nBø˚Tok
, 
	gClo£Bø˚Tok
,

323 
	gex¥essi⁄
,

324 
	gSimulHñp
,

325 
	gExôRuÀNode
, 
	gExôHñp
, 
	gExôEﬁ
,

326 
	gEndRuÀNode
, 
	gEndHñp
, 
	gEndEﬁ
,

327 
	gP‹tTok
, 
	gDaTok
, 
	gSaTok
,

328 
	gP‹tRuÀNode
, 
	gP‹tHñp
, 
	gP‹tIdRuÀNode
, 
	gP‹tIdHñp
,

329 
	gDaRuÀNode
, 
	gDaHñp
,

330 
	gSaRuÀNode
, 
	gSaHñp
,

331 
	gDaVÆueRuÀNode
, 
	gDaVÆueHñp
,

332 
	gSaVÆueRuÀNode
, 
	gSaVÆueHñp
,

333 
	gSimulEﬁ
,

334 
	gVhRuÀNode
, 
	gVœnHódîHñp
,

335 
	gVhDŸ1adRuÀNode
, 
	gVhDŸ1qRuÀNode
, 
	gVh1Hñp
,

336 
	gVhCosRuÀNode
, 
	gVhCosHñp
, 
	gVhCosVÆueNode
, 
	gVhCosVÆueHñp
,

337 
	gVhO≥nBø˚RuÀNode
, 
	gVhO≥nBø˚Hñp
,

338 
	gVhVœnIdRuÀNode
, 
	gVhVœnIdHñp
, 
	gVhVœnIdVÆueRuÀNode
, 
	gVhVœnIdVÆueHñp
,

339 
	gVhClo£Bø˚RuÀNode
, 
	gVhClo£Bø˚Hñp
, 
	gVhClo£Bø˚Eﬁ


343 
	gruÀ
< 
	gSˇ¬îT
 > c⁄°& 
°¨t
() const

345  
	gex¥essi⁄
;

351 
	gSimulP¨£r
::
	$simulP¨£r
(

352 
°rög
 c⁄° & 
öputSåög
,

353 
boﬁ
 & 
hñpReque°ed
,

354 
C⁄figSèã
 * 
c
 )

356 
usög
 
«me•a˚
 
SimulP¨£rNameS∑˚
;

358 
P¨£rModeCh™ged
 = 
Ál£
;

359 
NewP¨£rMode
 = 
P¨£rModeSimul
;

360 
c
->
cuºP¨£rMode_
 = 
P¨£rModeSimul
;

361 
HñpFœg
 = 
Ál£
;

363 
¡hTag
 = -1;

365 
da
 = 0;

366 
ß
 = 0;

367 
p‹tNumbî
 = 0;

369 
whichTag
 = -1;

370 
vœnTag
.
	`˛ór
();

371 
vœnHódî
.
	`˛ór
();

374 
SimulGømm¨
 
g
;

375 
∑r£_öfo
<> 
∑r£Info
 =

376 
	`∑r£
(
öputSåög
.
	`c_°r
(), 
g
, 
•a˚_p
);

378 if–
∑r£Info
.
fuŒ
 )

382 if–
P¨£rModeCh™ged
 )

384 
	`as£π
–! 
HñpFœg
 );

386 
c
->
cuºP¨£rMode_
 = 
NewP¨£rMode
;

389 if–
HñpFœg
 )

391 
	`as£π
–! 
P¨£rModeCh™ged
 );

392 
hñpReque°ed
 = 
åue
;

397 
cout
 << "Sy¡ax ERROR: I≈uàuƒecognized." << 
ídl
;

401 
	}
}

	@cli/simul/SimulParser.h

4 #i‚de‡
CLI_SIMULPARSER_H


5 
	#CLI_SIMULPARSER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/simul/SimulP¨£rH™dÀr.h
>

10 ˛as†
	cSimulP¨£r
 {

12 
	mpublic
:

13 
SimulP¨£r
();

14 ~
SimulP¨£r
();

15 
mﬁVp
–
MﬁVp
 * );

17 
simulP¨£r
–
°rög
 c⁄° &, 
boﬁ
 &, 
C⁄figSèã
 * );

21 
SimulP¨£r
( SimulParser const & );

22 
	mSimulP¨£r
 & 
	m›î©‹
=–
SimulP¨£r
 const & );

24 
SimulP¨£rH™dÀr
 * 
	m•h_
;

	@cli/simul/SimulParserHandler.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<˛i/simul/SimulP¨£rH™dÀr.h
>

7 
	~<mﬁ/comm⁄/MﬁVp.h
>

8 
	~<mﬁ/p‹t/P‹tMgr.h
>

9 
	~<mﬁ/ïu/FwdDomaöMgr.h
>

11 
	~<d©≠œ√/D©aPœ√Mgr.h
>

13 
P¨£rMaö
 * 
MyP¨£rMaö_
;

15 
	gSimulP¨£rH™dÀr
::
	$SimulP¨£rH™dÀr
()

17 
	}
}

19 
SimulP¨£rH™dÀr
::~
	$SimulP¨£rH™dÀr
()

21 
	}
}

24 
SimulP¨£rH™dÀr
::
	$rxFøme
–
P‹tId
 
pId
, 
Føme
 
f
 )

26 if–
pId
 >
	`p‹tMgr
()->
	`numP‹ts
() )

28 
˚º
 << "P‹à" << 
pId
 << "d€†nŸÉxi°,ÖÀa£ s≥cifyáÖ‹ànumbî i¿0-" << 
	`p‹tMgr
()->
	`numP‹ts
(Ë<< 
ídl
;

32 
cout
 << "\tIngªs†Fømê© " << 
P‹tNode
.
	`tokíSåög
(Ë<< " " << 
pId
 << 
ídl
;

33 
cout
 << "\t\tFømê:" << 
f
 << 
ídl
 <<Éndl;

35 
	`d©aPœ√Mgr
()->
	`¥o˚ssFøme
–
pId
, 
f
 );

36 
	}
}

38 
P¨£rMaö
 *

39 
	gSimulP¨£rH™dÀr
::
	$∑r£rMaö
() const

41 
	`as£π
–
MyP¨£rMaö_
 );

42 –
MyP¨£rMaö_
 );

43 
	}
}

	@cli/simul/SimulParserHandler.h

4 #i‚de‡
CLI_SIMULPARSERHANDLER_H


5 
	#CLI_SIMULPARSERHANDLER_H


	)

7 
	~<˛i/maö/P¨£rMaö.h
>

8 
	~<˛i/comm⁄/Føme.h
>

9 
	~<mﬁ/comm⁄/Ty≥s.h
>

11 ˛as†
	cSimulP¨£rH™dÀr
 {

13 
	mpublic
:

15 
SimulP¨£rH™dÀr
();

16 ~
SimulP¨£rH™dÀr
();

18 
rxFøme
–
P‹tId
, 
Føme
 );

20 
	m¥iv©e
:

22 
P¨£rMaö
 * 
	$∑r£rMaö
() const;

	@dataplane/DataPlaneMgr.cpp

4 
	~<˛i/comm⁄/Ty≥s.h
>

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

7 
	~<mﬁ/comm⁄/Ty≥s.h
>

8 
	~<mﬁ/comm⁄/MﬁVp.h
>

9 
	~<mﬁ/ïu/Epu.h
>

11 
	~<d©≠œ√/D©aPœ√Mgr.h
>

16 
D©aPœ√Mgr
 * 
	gMyD©aPœ√Mgr_
;

18 
D©aPœ√Mgr
 * 
	$d©aPœ√Mgr
()

20 
	`as£π
–
MyD©aPœ√Mgr_
 );

21  
MyD©aPœ√Mgr_
;

22 
	}
}

26 
	gD©aPœ√Mgr
::
	$D©aPœ√Mgr
()

28 
MyD©aPœ√Mgr_
 = 
this
;

29 
	}
}

31 
	gD©aPœ√Mgr
::~
	$D©aPœ√Mgr
()

33 
MyD©aPœ√Mgr_
 = 0;

34 
	}
}

37 
	gD©aPœ√Mgr
::
	$¥o˚ssFøme
–
P‹tId
 
rxP‹tId
, 
Føme
 & 
‰ame
 )

39 
P‹t
 * 
rxP‹t
 = 
	`p‹tMgr
()->
	`p‹t
–
rxP‹tId
 );

40 
	`as£π
–
rxP‹t
 );

42 
rxP‹t
->
	`ö¸InFømes
();

45 
Epu
 c⁄° * 
rxEpu
 = 
rxP‹t
->
	`ögªssM©chCœssify
–
‰ame
 );

47 if–
rxEpu
 )

49 
cout
 << "\t1. Fømê˛assfiˇti⁄:" << 
ídl
;

50 
cout
 << "\à-> Ingªs†Fømê© " << 
EpuNode
.
	`tokíSåög
(Ë<< " " << 
rxEpu
->
	`ïuId
(Ë<< 
ídl
;

54 
cout
 << "\tIngªs†FømêdidÇŸ m©chány " << 
EpuNode
.
	`tokíSåög
(Ë<< 
ídl
;

58 
rxEpu
->
	`ö¸InFømes
();

61 (
c⁄°_ˇ°
<
Epu
 *>(
rxEpu
))->
	`ªwrôeFøme
–
Ál£
, 
‰ame
 );

62 
cout
 << "\n\t2. Ingªs†FømêRewrôe:" << 
ídl
;

63 
cout
 << "\à-> A·î ingªs†ªwrôe, Fømê:" << 
‰ame
 << 
ídl
;

66 
FwdDomaöId
 c⁄° 
fdId
 = 
rxEpu
->
	`fdId
();

67 
FwdDomaö
 * 
fwdDomaö
 = 
	`fdMgr
()->
	`födFwdDomaö
–
fdId
 );

68 
cout
 << "\n\t3. Fømêf‹w¨dög: " << 
ídl
;

69 if–
fwdDomaö
 )

71 
cout
 << "\à-> F‹w¨dög domaö = " << 
VbNode
.
	`tokíSåög
(Ë<< " " << 
fwdDomaö
->
	`fdId
(Ë<< 
ídl
;

75 
cout
 << "\t" << 
EpuNode
.
	`tokíSåög
(Ë<< " d€†nŸ bñ⁄gÅÿ™y domaö. Fømêdr›≥d." << 
ídl
;

79 
EpuId
 
rxEpuId
 = 
rxEpu
->
	`ïuId
();

80 
MacTabÀ
 * 
macTabÀ
 = 
	`fdMgr
()->
	`macTabÀ
();

82 if–
fwdDomaö
->
	`À¨nögRequúed
() )

84 
MacAddr
 
‰ameSa
 = 
‰ame
.
	`§cAddr
();

85 
macTabÀ
->
	`À¨nSa
–
‰ameSa
, 
fdId
, 
rxEpuId
 );

88 
MacAddr
 
‰ameDa
 = 
‰ame
.
	`d°Addr
();

89 
MacE¡ry
 * 
macE¡ry
 = 0;

90 
Epu
 * 
txEpu
 = 0;

92 if–
fwdDomaö
->
	`fdTy≥
(Ë=
FdTy≥MP2MP
 )

94 
macE¡ry
 = 
macTabÀ
->
	`lookupDa
–
‰ameDa
, 
fdId
 );

97 if–
macE¡ry
 )

99 
EpuId
 
txEpuId
 = 
macE¡ry
->
ïuId_
;

100 
txEpu
 = 
	`ïuMgr
()->
	`födEpu
–
txEpuId
 );

101 
	`as£π
–
txEpu
 );

103 if–
txEpu
 !
rxEpu
 )

105 
	`ïuTønsmô
–
txEpu
, 
‰ame
 );

110 
EpuLi°C⁄°Iå
 
cô
;

111 
EpuLi°
 
ïuL
 = 
fwdDomaö
->
	`ïuLi°
();

113  
cô
 = 
ïuL
.
	`begö
(); cô !ïuL.
	`íd
(); cit++ )

115 
txEpu
 = (*
cô
);

116 
	`as£π
–
txEpu
 );

118 if–
txEpu
 !
rxEpu
 )

120 
	`ïuTønsmô
–
txEpu
, 
‰ame
 );

124 
	}
}

127 
	gD©aPœ√Mgr
::
	$ïuTønsmô
–
Epu
 c⁄° * 
txEpu
, 
Føme
 
‰ame
 )

129 
P‹tId
 
txP‹tId
 = 
txEpu
->
	`p‹tId
();

130 
P‹t
 * 
txP‹t
 = 
	`p‹tMgr
()->
	`p‹t
–
txP‹tId
 );

131 
	`as£π
–
txP‹t
 );

134 (
c⁄°_ˇ°
<
Epu
 *>(
txEpu
))->
	`ªwrôeFøme
–
åue
, 
‰ame
 );

135 
cout
 << "\n\t4. Egªs†FømêRewrôe:" << 
ídl
;

136 
cout
 << "\à-> Aà" << 
EpuNode
.
	`tokíSåög
(Ë<< " " << 
txEpu
->
	`ïuId
() <<

137 " (" << 
P‹tNode
.
	`tokíSåög
(Ë<< " = " << 
txP‹tId
 << "),áfterÉgressÑewrite, Frame := " <<

138 
‰ame
 << 
ídl
;

140 
txEpu
->
	`ö¸OutFømes
();

142 
txP‹t
->
	`ö¸OutFømes
();

143 
	}
}

	@dataplane/DataPlaneMgr.h

4 #i‚de‡
DATAPLANEMGR_H


5 
	#DATAPLANEMGR_H


	)

7 
	~<˛i/comm⁄/Føme.h
>

9 ˛as†
	cD©aPœ√Mgr
 {

11 
	mpublic
:

13 
D©aPœ√Mgr
();

14 ~
D©aPœ√Mgr
();

16 
¥o˚ssFøme
–
P‹tId
, 
Føme
 & );

17 
ïuTønsmô
–
Epu
 c⁄° *, 
Føme
 );

20 
D©aPœ√Mgr
 * 
d©aPœ√Mgr
();

	@dataplane/MetaData.h

4 #i‚de‡
METADATA_H


5 
	#METADATA_H


	)

7 ˛as†
	cMëaD©a
 {

9 
	mpublic
:

	@main.cpp

4 
	~<˛i/maö/P¨£rMaö.h
>

5 
	~<mﬁ/comm⁄/MﬁVp.h
>

6 
	~<d©≠œ√/D©aPœ√Mgr.h
>

9 
	$maö
()

12 
cout
 << "/////////////////////////////////////////////////////////" << 
ídl
;

13 
cout
 << "\àPrŸŸy≥ simuœt‹ o‡basi¯c⁄figuøti⁄ modñ." << 
ídl
;

14 
cout
 << "\àTy≥á comm™d o∏\"quô\"Åÿexô. o∏'?' f‹ hñp." << 
ídl
;

15 
cout
 << "/////////////////////////////////////////////////////////" << 
ídl
;

17 
P¨£rMaö
 * 
pm
 = 
√w
 ParserMain;

18 
	`as£π
–
pm
 );

20 
MﬁVp
 * 
mvp
 = 
√w
 MolVp;

21 
	`as£π
–
mvp
 );

23 
pm
->
	`mﬁVp
–
mvp
 );

25 
D©aPœ√Mgr
 * 
dp
 = 
√w
 DataPlaneMgr;

26 
	`as£π
–
dp
 );

28 
pm
->
	`maö
();

31 
	}
}

	@mol/common/MolVp.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/comm⁄/MﬁVp.h
>

7 
MﬁVp
 * 
	gMyMﬁVp_
;

9 
MﬁVp
 *

10 
	$mﬁVp
()

12 
	`as£π
–
MyMﬁVp_
 );

13 –
MyMﬁVp_
 );

14 
	}
}

16 
P‹tMgr
 *

17 
	$p‹tMgr
()

19 
	`as£π
–
MyMﬁVp_
 );

20 
	`as£π
–
MyMﬁVp_
->
p‹tMgr_
 );

21 –
MyMﬁVp_
->
p‹tMgr_
 );

22 
	}
}

24 
EpuMgr
 *

25 
	$ïuMgr
()

27 
	`as£π
–
MyMﬁVp_
 );

28 
	`as£π
–
MyMﬁVp_
->
ïuMgr_
 );

29 –
MyMﬁVp_
->
ïuMgr_
 );

30 
	}
}

32 
FwdDomaöMgr
 *

33 
	$fdMgr
()

35 
	`as£π
–
MyMﬁVp_
 );

36 
	`as£π
–
MyMﬁVp_
->
fdMgr_
 );

37 –
MyMﬁVp_
->
fdMgr_
 );

38 
	}
}

42 
	gMﬁVp
::
	$MﬁVp
()

43 : 
	`p‹tMgr_
( 0 ),

44 
	`ïuMgr_
( 0 ),

45 
	`fdMgr_
( 0 ),

46 
	`ho°«me_
( "SoftSwitch" )

48 
ho°«me_
 = "SoftSwitch";

50 
p‹tMgr_
 = 
√w
 
P‹tMgr
;

51 
	`as£π
–
p‹tMgr_
 );

53 
ïuMgr_
 = 
√w
 
EpuMgr
;

54 
	`as£π
–
ïuMgr_
 );

56 
fdMgr_
 = 
√w
 
FwdDomaöMgr
;

57 
	`as£π
–
fdMgr_
 );

59 
MyMﬁVp_
 = 
this
;

60 
	}
}

62 
	gMﬁVp
::~
	$MﬁVp
()

64 if–
p‹tMgr_
 )

66 
dñëe
 
p‹tMgr_
;

67 
p‹tMgr_
 = 0;

70 if–
ïuMgr_
 )

72 
dñëe
 
ïuMgr_
;

73 
ïuMgr_
 = 0;

76 if–
fdMgr_
 )

78 
dñëe
 
fdMgr_
;

79 
fdMgr_
 = 0;

81 
	}
}

83 
°rög


84 
	gMﬁVp
::
	$ho°«me
() const

86  
ho°«me_
;

87 
	}
}

90 
	gMﬁVp
::
	$ho°«me
–
°rög
 c⁄° & 
s
 )

92 
ho°«me_
 = 
s
;

93 
	}
}

96 
	gMﬁVp
::
	$showRun
–
o°ªam
 & 
os
 ) const

98 
os
 << 
Ho°«meNode
.
	`tokíSåög
(Ë<< " " << 
	`ho°«me
(Ë<< 
ídl
;

99 
	`p‹tMgr
()->
	`showRun
–
os
 );

100 
	}
}

	@mol/common/MolVp.h

4 #i‚de‡
MOL_MOLVP_H


5 
	#MOL_MOLVP_H


	)

7 
	~<mﬁ/comm⁄/Ty≥s.h
>

8 
	~<mﬁ/p‹t/P‹tMgr.h
>

9 
	~<mﬁ/ïu/EpuMgr.h
>

10 
	~<mﬁ/ïu/FwdDomaöMgr.h
>

12 
MﬁVp
 * 
mﬁVp
();

13 
P‹tMgr
 * 
p‹tMgr
();

14 
EpuMgr
 * 
ïuMgr
();

15 
FwdDomaöMgr
 * 
fdMgr
();

17 ˛as†
	cMﬁVp
 {

19 
	mpublic
:

21 
MﬁVp
();

22 ~
MﬁVp
();

24 
°rög
 
	$ho°«me
() const;

25 
	`ho°«me
–
°rög
 const & );

27 
	$showRun
–
o°ªam
 & ) const;

31 
	`MﬁVp
–
MﬁVp
 const & );

32 
MﬁVp
 & 
›î©‹
=( MolVp const & );

34 
P‹tMgr
 * 
p‹tMgr_
;

35 
EpuMgr
 * 
ïuMgr_
;

36 
FwdDomaöMgr
 * 
fdMgr_
;

37 
°rög
 
ho°«me_
;

	@mol/common/Types.h

4 #i‚de‡
MOL_COMMON_TYPES_H


5 
	#MOL_COMMON_TYPES_H


	)

7 
	~<io°ªam
>

8 
	~<as£π.h
>

9 
	~<m≠
>

10 
	~<ve˘‹
>

12 
	tP‹tId
;

13 íum { 
	mInvÆidP‹tId
 = 
P‹tId
( 0xFFFF ) };

15 
	tEpuId
;

16 íum { 
	mInvÆidEpuId
 = 
EpuId
( 0xFFFF ) };

18 
	tFwdDomaöId
;

19 íum { 
	mInvÆidFwdDomaöId
 = 
FwdDomaöId
( 0xFFFF ) };

21 
˛ass
 
	gMﬁVp
;

22 
˛ass
 
	gP‹tMgr
;

23 
˛ass
 
	gP‹t
;

24 
˛ass
 
	gEpuMgr
;

25 
˛ass
 
	gEpu
;

26 
˛ass
 
	gFwdDomaöMgr
;

27 
˛ass
 
	gFwdDomaö
;

	@mol/epu/Epu.cpp

4 
	~<˛i/comm⁄/Ty≥s.h
>

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

6 
	~<˛i/comm⁄/Føme.h
>

8 
	~<mﬁ/comm⁄/MﬁVp.h
>

9 
	~<mﬁ/ïu/Epu.h
>

10 
	~<mﬁ/p‹t/P‹t.h
>

12 
MﬁVp
 * 
MyMﬁVp_
;

14 
	g°d
::
o°ªam
 &

15 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
EpuM©chTag
 c⁄° & 
	gx
 )

17 
	gx
.
dump
–
o
 );

18  
	go
;

21 
	g°d
::
o°ªam
 &

22 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
EpuM©chCrôîü
 c⁄° & 
	gx
 )

24 
	gx
.
dump
–
o
 );

25  
	go
;

28 
	g°d
::
o°ªam
 &

29 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
EpuRewrôeOp
 c⁄° & 
	gx
 )

31 
	gx
.
dump
–
o
 );

32  
	go
;

35 
	g°d
::
o°ªam
 &

36 
›î©‹
<<–
°d
::
o°ªam
 & 
o
, 
Epu
 c⁄° & 
	gx
 )

38 
	gx
.
dump
–
o
 );

39  
	go
;

44 
	gEpu
::
	$Epu
()

46 
	`˛ór
();

47 
	}
}

49 
	gEpu
::~
	$Epu
()

51 
	`˛ór
();

52 
	}
}

55 
	gEpu
::
	$˛ór
()

57 
ïuId_
 = 0;

58 
p‹tId_
 = 0;

59 
admöSèã_
 = 
åue
;

60 
fdId_
 = 0;

61 
ögªssM©ch_
.
	`˛ór
();

62 
ögªssRewrôe_
.
	`˛ór
();

63 
öFømes_
 = 0;

64 
outFømes_
 = 0;

65 
	}
}

68 
	gEpu
::
showRun
–
°d
::
o°ªam
 & 
os
 ) const

70 
os
 << " " << 
EpuNode
.
tokíSåög
(Ë<< " " << 
ïuId_
 << 
ídl
;

72 if–
	gögªssM©ch_
.
isVÆid
() )

74 
	gos
 << " ingªs†m©ch " << 
	gögªssM©ch_
 << 
	gídl
;

77 if–
	gögªssRewrôe_
.
	gªwrôeTy≥_
 !
RewrôeTy≥Unknown
 )

79 
os
 << " ingªs†ªwrôê" << 
ögªssRewrôe_
 << 
ídl
;

82 if–
	gegªssRewrôe_
.
	gªwrôeTy≥_
 !
RewrôeTy≥Unknown
 )

84 
os
 << "Égªs†ªwrôê" << 
egªssRewrôe_
 << 
ídl
;

87 if–
	gfdId_
 )

89 
	gos
 << " " << 
	gVbNode
.
tokíSåög
(Ë<< " " << 
	gfdId_
 << 
	gídl
;

92 if–!
	gadmöSèã_
 )

94 
	gos
 << " shutdown" << 
	gídl
;

98 
	g°d
::
o°ªam
 &

99 
Epu
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

101 
o
 << "EPU Id = " << 
ïuId_
 << 
ídl
;

102 
	go
 << "P‹àId = " << 
	gp‹tId_
 << 
	gídl
;

103 
	go
 << "Admö Sèã = " << 
	gadmöSèã_
 << 
	gídl
;

104 
	go
 << "FwdDomaö Id = " << 
	gfdId_
 << 
	gídl
;

105 
	go
 << "Ingªs†M©ch Crôîü = {" << 
	gögªssM©ch_
 << "}";

106 
	go
 << "Ingªs†RewrôêA˘i⁄ = {" << 
	gögªssRewrôe_
 << "}";

107 
	go
 << "Egªs†RewrôêA˘i⁄ = {" << 
	gegªssRewrôe_
 << "}";

108 
	go
 << 
	gídl
;

110  
	go
;

113 
P‹tId


114 
	gEpu
::
	$p‹tId
() const

116  
p‹tId_
;

117 
	}
}

120 
	gEpu
::
	$p‹tId
–
P‹tId
 c⁄° & 
pId
 )

122 
P‹t
 * 
p
 = 0;

124 if–
pId
 !
InvÆidP‹tId
 )

126 
p
 = 
	`p‹tMgr
()->
	`p‹t
–
pId
 );

127 
	`as£π
–
p
 );

129 
p‹tId_
 = 
pId
;

131 
p
->
	`addEpu
–
this
 );

135 
p
 = 
	`p‹tMgr
()->
	`p‹t
–
p‹tId_
 );

136 
	`as£π
–
p
 );

138 
p‹tId_
 = 0;

140 
p
->
	`ªmoveEpu
–
this
 );

142 
	}
}

144 
FwdDomaöId


145 
	gEpu
::
	$fdId
() const

147  
fdId_
;

148 
	}
}

151 
	gEpu
::
	$fdId
–
FwdDomaöId
 c⁄° & 
fId
 )

153 
FwdDomaö
 * 
f
 = 0;

155 if–
fId
 !
InvÆidFwdDomaöId
 )

158 
f
 = 
	`fdMgr
()->
	`födFwdDomaö
–
fdId_
 );

159 if–
f
 )

162 
f
->
	`ªmoveEpu
–
this
 );

163 
f
 = 0;

167 
f
 = 
	`fdMgr
()->
	`födFwdDomaö
–
fId
 );

168 if–! 
f
 )

171 
f
 = 
	`fdMgr
()->
	`¸óãFwdDomaö
–
fId
 );

173 
	`as£π
–
f
 );

175 
fdId_
 = 
fId
;

177 
f
->
	`addEpu
–
this
 );

181 
f
 = 
	`fdMgr
()->
	`födFwdDomaö
–
fdId_
 );

182 
	`as£π
–
f
 );

184 
fdId_
 = 0;

186 
f
->
	`ªmoveEpu
–
this
 );

188 
	}
}

190 
EpuId


191 
	gEpu
::
	$ïuId
() const

193  
ïuId_
;

194 
	}
}

197 
	gEpu
::
	$ïuId
–
EpuId
 c⁄° & 
rhs
 )

199 
ïuId_
 = 
rhs
;

200 
	}
}

202 
	gEpuM©chCrôîü
 &

203 
	gEpu
::
	$ögªssM©ch
()

205  
ögªssM©ch_
;

206 
	}
}

208 
EpuM©chCrôîü
 const &

209 
	gEpu
::
	$ögªssM©ch
() const

211  
ögªssM©ch_
;

212 
	}
}

215 
	gEpu
::
	$ögªssM©ch
–
EpuM©chCrôîü
 c⁄° & 
rhs
 )

217 
ögªssM©ch_
 = 
rhs
;

218 
	}
}

220 
	gEpuRewrôeOp
 &

221 
	gEpu
::
	$ögªssRewrôe
()

223  
ögªssRewrôe_
;

224 
	}
}

226 
EpuRewrôeOp
 const &

227 
	gEpu
::
	$ögªssRewrôe
() const

229  
ögªssRewrôe_
;

230 
	}
}

233 
	gEpu
::
	$ögªssRewrôe
–
EpuRewrôeOp
 c⁄° & 
rhs
 )

235 
	`as£π
–
rhs
.
	`vÆid
() );

237 
ögªssRewrôe_
 = 
rhs
;

238 
	}
}

240 
	gEpuRewrôeOp
 &

241 
	gEpu
::
	$egªssRewrôe
()

243  
egªssRewrôe_
;

244 
	}
}

246 
EpuRewrôeOp
 const &

247 
	gEpu
::
	$egªssRewrôe
() const

249  
egªssRewrôe_
;

250 
	}
}

253 
	gEpu
::
	$egªssRewrôe
–
EpuRewrôeOp
 c⁄° & 
rhs
 )

255 
	`as£π
–
rhs
.
	`vÆid
() );

257 
egªssRewrôe_
 = 
rhs
;

258 
	}
}

260 
boﬁ


261 
	gEpu
::
	$admöSèã
() const

263  
admöSèã_
;

264 
	}
}

267 
	gEpu
::
	$admöSèã
–
boﬁ
 
rhs
 )

269 
admöSèã_
 = 
rhs
;

270 
	}
}

272 
Cou¡î


273 
	gEpu
::
	$öFømes
() const

275  
öFømes_
;

276 
	}
}

279 
	gEpu
::
	$ö¸InFømes
() const

281 ++
öFømes_
;

283 
FwdDomaö
 * 
f
 = 
	`myFd
();

284 if–
f
 )

286 
f
->
	`ö¸InFømes
();

288 
	}
}

290 
Cou¡î


291 
	gEpu
::
	$outFømes
() const

293  
outFømes_
;

294 
	}
}

297 
	gEpu
::
	$ö¸OutFømes
() const

299 ++
outFømes_
;

301 
FwdDomaö
 * 
f
 = 
	`myFd
();

302 if–
f
 )

304 
f
->
	`ö¸OutFømes
();

306 
	}
}

309 
	gEpu
::
	$ªwrôeFøme
–
boﬁ
 c⁄° 
dú
, 
Føme
 & 
‰ame
 )

311 
EpuRewrôeOp
 & 
ªwrôeC⁄fig
 = 
	`ögªssRewrôe
();

313 if–
dú
 )

315 
ªwrôeC⁄fig
 = 
	`egªssRewrôe
();

318 
VœnHódî
 & 
vh
 = 
‰ame
.
	`vœnHódî
();

320  
ªwrôeC⁄fig
.
ªwrôeTy≥_
 )

322 
RewrôeTy≥Unknown
:

325 
RewrôeTy≥P›
:

327 c⁄° 
n
 = 
ªwrôeC⁄fig
.
numP›Tags_
;

328 
	`as£π
–(
n
 == 1) || (n == 2) );

330 if–
n
 == 1 )

332 
vh
.
èg_
[ 0 ] = vh.tag_[ 1 ];

333 
vh
.
èg_
[ 1 ].
	`˛ór
();

336 if–
n
 == 2 )

338 
vh
.
èg_
[ 0 ].
	`˛ór
();

339 
vh
.
èg_
[ 1 ].
	`˛ór
();

345 
RewrôeTy≥Push
:

347 c⁄° 
x
 = 
vh
.
	`numVœnTags
();

348 
	`as£π
–
x
 <= 2 );

350  
x
 )

353 
vh
 = 
ªwrôeC⁄fig
.
vœnHódî_
;

357 
vh
.
èg_
[ 1 ] = vh.tag_[ 0 ];

358 
vh
.
èg_
[ 0 ] = 
ªwrôeC⁄fig
.
vœnHódî_
.tag_[ 0 ];

362 
°d
::
cout
 << "Frameálready has 2Åags, skipping 'push'...."

363 << 
°d
::
ídl
;

370 
RewrôeTy≥Sw≠
:

371 
°d
::
cout
 << "Sw≠ i†nŸ im∂emíãd yë :-(" << std::
ídl
;

375 
	}
}

377 
FwdDomaö
 *

378 
	gEpu
::
	$myFd
() const

380 –
	`fdMgr
()->
	`födFwdDomaö
–
fdId_
 ) );

381 
	}
}

384 
	gEpuM©chCrôîü
::
	$EpuM©chCrôîü
()

386 
	`˛ór
();

387 
	}
}

390 
	gEpuM©chCrôîü
::
	$˛ór
()

392 
isVÆid_
 = 
Ál£
;

393 
isU¡agged_
 = 
Ál£
;

394 
èg_
[ 0 ].
	`˛ór
();

395 
èg_
[ 1 ].
	`˛ór
();

396 
	}
}

398 
	g°d
::
o°ªam
 &

399 
EpuM©chCrôîü
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

401 
°d
::
°rög
 
u¡agSå
 = "";

403 if–
	gisU¡agged_
 )

405 
	gu¡agSå
 = "untagged ";

407 if–
	gèg_
[ 0 ].
	gvœnTy≥_
 !
VœnTy≥NuŒ
 )

409 
u¡agSå
 += ", ";

413 
	go
 << 
	gu¡agSå
;

414 
	go
 << 
	gèg_
[ 0 ] << " ";

415 
	go
 << 
	gèg_
[ 1 ] << " ";

417  
	go
;

421 
	gEpuM©chCrôîü
::
	$¥öt
() const

423 
°d
::
cout
 << (*
this
);

424 
	}
}

427 
	gEpuM©chCrôîü
::
	$numM©chTags
() const

429 sig√d 
x
 = -1;

431 if–
	`isVÆid
() )

433 if–
	`isU¡agged
() )

435 
x
 = 0;

438 if–
èg_
[ 0 ].
vœnTy≥_
 !
VœnTy≥NuŒ
 )

440 
x
 = 1;

442 if–
èg_
[ 1 ].
vœnTy≥_
 !
VœnTy≥NuŒ
 )

444 
x
 = 2;

449  
x
;

450 
	}
}

452 
boﬁ


453 
	gEpuM©chCrôîü
::
	$isVÆid
() const

455  
isVÆid_
;

456 
	}
}

458 
boﬁ


459 
	gEpuM©chCrôîü
::
	$isU¡agged
() const

461  
isU¡agged_
;

462 
	}
}

464 
boﬁ


465 
	gEpuM©chCrôîü
::
	$c⁄èös
–
VœnHódî
 c⁄° & 
vh
, sig√d & 
dïth
 ) const

467 sig√d 
myNumM©chTags
 = 
	`numM©chTags
();

468 
vhNumVœnTags
 = 
vh
.
	`numVœnTags
();

470 
	`as£π
–(
myNumM©chTags
 >= -1 ) && (myNumMatchTags <= 2) );

472 if–
myNumM©chTags
 == -1 )

475 
	`as£π
–! 
	`isVÆid
() );

477  
Ál£
;

480 if–
myNumM©chTags
 == 2 )

483 if–
èg_
[ 0 ].
	`c⁄èös
–
vh
.tag_[ 0 ] ) &&

484 
èg_
[ 1 ].
	`c⁄èös
–
vh
.tag_[ 1 ] ) )

486 
dïth
 = 2;

487  
åue
;

491 if–
myNumM©chTags
 == 1 )

495 if–
èg_
[ 0 ].
	`c⁄èös
–
vh
.tag_[ 0 ] ) )

497 
dïth
 = 1;

498  
åue
;

502 if–
myNumM©chTags
 == 0 )

505 
	`as£π
–
	`isU¡agged
() );

508 if–
vhNumVœnTags
 == 0 )

510 
dïth
 = 0;

511  
åue
;

515  
Ál£
;

516 
	}
}

520 
	gEpuM©chTag
::
	$EpuM©chTag
()

522 
	`˛ór
();

523 
	}
}

526 
	gEpuM©chTag
::
	$˛ór
()

528 
vœnTy≥_
 = 
VœnTy≥NuŒ
;

529 
cosLi°_
.
	`˛ór
();

530 
isPègged_
 = 
Ál£
;

531 
vœnidLi°_
.
	`˛ór
();

532 
	}
}

535 
	g°d
::
o°ªam
 &

536 
EpuM©chTag
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

538 if–
vœnTy≥_
 =
VœnTy≥NuŒ
 )

540  
o
;

543 
	g°d
::
°rög
 
vœnTy≥Så
 = 
VœnTy≥ToSåög
–
vœnTy≥_
 );

545 
	g°d
::
°rög
 
±agSå
 = "";

546 if–
	gisPègged_
 )

548 
	g±agSå
 = "ptagged ,";

551 
	go
 << 
	gvœnTy≥Så
;

552 if–! 
	gcosLi°_
.
em±y
() )

554 
	go
 << " co†" << 
	gcosLi°_
 << " ";

556 
	go
 << " (";

557 
	go
 << 
	g±agSå
 << "vœnid " << 
	gvœnidLi°_
;

558 
	go
 << ")";

560  
	go
;

563 
boﬁ


564 
	gEpuM©chTag
::
	$c⁄èös
–
VœnTag
 c⁄° & 
vt
 ) const

566 
boﬁ
 
c⁄èös
 = 
åue
;

568 if–
vœnTy≥_
 !
vt
.vlanType_ )

570 
c⁄èös
 = 
Ál£
;

572 if–(! 
cosLi°_
.
	`em±y
()Ë&& (! cosLi°_.
	`c⁄èös
–
vt
.
cosVÆue_
 )) )

574 
c⁄èös
 = 
Ál£
;

576 if–
vt
.
vœnidVÆue_
 == 0 )

578 if–! 
isPègged_
 )

580 
c⁄èös
 = 
Ál£
;

585 
	`as£π
–! 
vœnidLi°_
.
	`em±y
() );

587 if–! 
vœnidLi°_
.
	`c⁄èös
–
vt
.
vœnidVÆue_
 ) )

589 
c⁄èös
 = 
Ál£
;

593  
c⁄èös
;

594 
	}
}

598 
	gEpuRewrôeOp
::
	$EpuRewrôeOp
()

600 
	`˛ór
();

601 
	}
}

604 
	gEpuRewrôeOp
::
	$˛ór
()

606 
ªwrôeTy≥_
 = 
RewrôeTy≥Unknown
;

607 
numP›Tags_
 = 
DeÁu…NumP›Tags
;

608 
vœnHódî_
.
	`˛ór
();

609 
	}
}

611 
	g°d
::
o°ªam
 &

612 
EpuRewrôeOp
::
dump
–
°d
::
o°ªam
 & 
o
 ) const

614  
ªwrôeTy≥_
 )

616 
RewrôeTy≥Unknown
:

619 
	gRewrôeTy≥P›
:

620 
as£π
–(
numP›Tags_
 == 1) || (numPopTags_ == 2) );

621 
	go
 << "p› " << 
	gnumP›Tags_
;

624 
	gRewrôeTy≥Push
:

625 
as£π
–
numP›Tags_
 =
DeÁu…NumP›Tags
 );

626 
	go
 << "push " << 
	gvœnHódî_
;

629 
	gRewrôeTy≥Sw≠
:

630 
as£π
–
numP›Tags_
 =
DeÁu…NumP›Tags
 );

631 
	go
 << "sw≠ " << 
	gvœnHódî_
;

635  
	go
;

638 
boﬁ


639 
	gEpuRewrôeOp
::
	$vÆid
() const

641  
ªwrôeTy≥_
 )

643 
RewrôeTy≥Unknown
:

648 
RewrôeTy≥P›
:

650 
	`as£π
–(
numP›Tags_
 == 1) || (numPopTags_ == 2) );

652 if–(
numP›Tags_
 == 1) || (numPopTags_ == 2) )

653  
åue
;

657 
RewrôeTy≥Push
:

659 
	`as£π
–
numP›Tags_
 =
DeÁu…NumP›Tags
 );

661 if–
numP›Tags_
 =
DeÁu…NumP›Tags
 )

662  
åue
;

666 
RewrôeTy≥Sw≠
:

668 
	`as£π
–
numP›Tags_
 =
DeÁu…NumP›Tags
 );

670 if–
numP›Tags_
 =
DeÁu…NumP›Tags
 )

671  
åue
;

676  
Ál£
;

677 
	}
}

	@mol/epu/Epu.h

5 #i‚de‡
MOL_EPU_EPU_H


6 
	#MOL_EPU_EPU_H


	)

8 
	~<˛i/comm⁄/Ty≥s.h
>

9 
	~<˛i/comm⁄/Føme.h
>

10 
	~<mﬁ/comm⁄/Ty≥s.h
>

12 
˛ass
 
	gEpuM©chTag
;

13 
˛ass
 
	gEpuM©chCrôîü
;

14 
˛ass
 
	gEpuRewrôeOp
;

15 
˛ass
 
	gEpu
;

17 ˛as†
	cEpuM©chTag
 {

19 
	mpublic
:

21 
EpuM©chTag
();

23 
˛ór
();

24 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

26 
boﬁ
 
	$c⁄èös
–
VœnTag
 const & ) const;

30 
VœnTy≥
 
vœnTy≥_
;

31 
NumbîLi°
 
cosLi°_
;

32 
boﬁ
 
isPègged_
;

33 
NumbîLi°
 
vœnidLi°_
;

36 ˛as†
	cEpuM©chCrôîü
 {

38 
public
:

40 
	`EpuM©chCrôîü
();

42 
	`˛ór
();

43 
°d
::
o°ªam
 & 
	`dump
( std::ostream & ) const;

44 
	$¥öt
() const;

51 sig√d 
	$numM©chTags
() const;

53 
boﬁ
 
	$isU¡agged
() const;

54 
boﬁ
 
	$isVÆid
() const;

55 
boﬁ
 
	$c⁄èös
–
VœnHódî
 const &, signed & ) const;

59 
boﬁ
 
isVÆid_
;

60 
boﬁ
 
isU¡agged_
;

61 
EpuM©chTag
 
èg_
[ 2 ];

65 
	eRewrôeTy≥
 {

66 
RewrôeTy≥Unknown
,

67 
RewrôeTy≥P›
,

68 
RewrôeTy≥Push
,

69 
RewrôeTy≥Sw≠


72 ˛as†
	cEpuRewrôeOp
 {

74 
public
:

76 
	`EpuRewrôeOp
();

78 
	`˛ór
();

79 
°d
::
o°ªam
 & 
	`dump
( std::ostream & ) const;

80 
boﬁ
 
	$vÆid
() const;

84 íum { 
DeÁu…NumP›Tags
 = 0xFFFF };

86 
RewrôeTy≥
 
ªwrôeTy≥_
;

87 
numP›Tags_
;

88 
VœnHódî
 
vœnHódî_
;

89 
	}
};

91 ˛as†
	cEpu
 {

93 
	mpublic
:

95 
Epu
();

96 ~
Epu
();

98 
˛ór
();

99 
showRun
–
°d
::
o°ªam
 & ) const;

100 
	m°d
::
o°ªam
 & 
dump
–
°d
::ostream & ) const;

102 
P‹tId
 
	$p‹tId
() const;

103 
	`p‹tId
–
P‹tId
 const & );

105 
FwdDomaöId
 
	$fdId
() const;

106 
	`fdId
–
FwdDomaöId
 const & );

108 
EpuId
 
	$ïuId
() const;

109 
	`ïuId
–
EpuId
 const & );

111 
EpuM©chCrôîü
 & 
	`ögªssM©ch
();

112 
EpuM©chCrôîü
 c⁄° & 
	$ögªssM©ch
() const;

113 
	`ögªssM©ch
–
EpuM©chCrôîü
 const & );

115 
EpuRewrôeOp
 & 
	`ögªssRewrôe
();

116 
EpuRewrôeOp
 c⁄° & 
	$ögªssRewrôe
() const;

117 
	`ögªssRewrôe
–
EpuRewrôeOp
 const & );

119 
EpuRewrôeOp
 & 
	`egªssRewrôe
();

120 
EpuRewrôeOp
 c⁄° & 
	$egªssRewrôe
() const;

121 
	`egªssRewrôe
–
EpuRewrôeOp
 const & );

123 
boﬁ
 
	$admöSèã
() const;

124 
	`admöSèã
–
boﬁ
 );

126 
Cou¡î
 
	$öFømes
() const;

127 
	$ö¸InFømes
() const;

129 
Cou¡î
 
	$outFømes
() const;

130 
	$ö¸OutFømes
() const;

133 
	`ªwrôeFøme
–
boﬁ
 c⁄°, 
Føme
 & );

135 
¥iv©e
:

137 
FwdDomaö
 * 
	$myFd
() const;

139 
EpuId
 
ïuId_
;

140 
P‹tId
 
p‹tId_
;

142 
FwdDomaöId
 
fdId_
;

143 
EpuM©chCrôîü
 
ögªssM©ch_
;

144 
EpuRewrôeOp
 
ögªssRewrôe_
;

145 
EpuRewrôeOp
 
egªssRewrôe_
;

146 
boﬁ
 
admöSèã_
;

148 
muèbÀ
 
Cou¡î
 
öFømes_
;

149 
muèbÀ
 
Cou¡î
 
outFømes_
;

152 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
EpuM©chTag
 const & );

153 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
EpuM©chCrôîü
 const & );

154 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
EpuRewrôeOp
 const & );

155 
°d
::
o°ªam
 & 
›î©‹
<<–°d::o°ªam &, 
Epu
 const & );

	@mol/epu/EpuMgr.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/ïu/EpuMgr.h
>

7 
	gEpuMgr
::
	$EpuMgr
()

9 
ïuSë_
.
	`˛ór
();

10 
	`as£π
–
ïuSë_
.
	`em±y
() );

11 
	}
}

13 
	gEpuMgr
::~
	$EpuMgr
()

15 
EpuSëIå
 
ô
 = 
ïuSë_
.
	`begö
();

17  
ô
 !
ïuSë_
.
	`íd
() )

19 
EpuId
 
i
 = (*
ô
).
fú°
;

20 
Epu
 * 
e
 = (*
ô
).
£c⁄d
;

22 
ïuSë_
.
	`îa£
–
i
 );

24 if–
e
 )

26 
e
->
	`˛ór
();

27 
dñëe
 
e
;

28 
e
 = 0;

31 ++
ô
;

34 
	`as£π
–
ïuSë_
.
	`em±y
() );

35 
	}
}

38 
	gEpuMgr
::
	$showEpus
–
EpuId
 c⁄° & 
ïuId
, 
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

40 
EpuSëC⁄°Iå
 
ô
;

41 
EpuId
 
eid
;

42 
Epu
 *
e
;

44 
	`dumpHódî
–
cou¡îFœg
 );

46 if–
ïuId
 == 0 )

48 if–
ïuSë_
.
	`em±y
() )

53  
ô
 = 
ïuSë_
.
	`begö
(); ià!ïuSë_.
	`íd
(); it++ )

56 
eid
 = (*
ô
).
fú°
;

57 
e
 = (*
ô
).
£c⁄d
;

59 
	`as£π
–
eid
 =
e
->
	`ïuId
() );

61 
	`dumpEpu
–
e
, 
cou¡îFœg
 );

66 
ô
 = 
ïuSë_
.
	`föd
–
ïuId
 );

68 if–
ô
 !
ïuSë_
.
	`íd
() )

70 
e
 = (*
ô
).
£c⁄d
;

72 
	`as£π
–
ïuId
 =
e
->
	`ïuId
() );

74 
	`dumpEpu
–
e
, 
cou¡îFœg
 );

77 
	}
}

80 
	gEpuMgr
::
	$dumpHódî
–
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

82 
cout
 << "------------------------------------------------------------------------------" << 
ídl
;

83 
cout
 << 
EpuNode
.
	`tokíSåög
() << " Id \t\t " <<

84 
P‹tNode
.
	`tokíSåög
() << " Id \t " <<

85 
VbNode
.
	`tokíSåög
() << " Id";

86 if–
cou¡îFœg
 )

88 
cout
 << "\t\tIn Packets\t\tOut Packets";

90 
cout
 << 
ídl
;

91 
cout
 << "------------------------------------------------------------------------------" << 
ídl
;

92 
	}
}

95 
	gEpuMgr
::
	$dumpEpu
–
Epu
 c⁄° * 
e
, 
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

97 
	`as£π
–
e
 );

99 
cout
 << 
e
->
	`ïuId
() << " \t\t ";

100 
cout
 << 
e
->
	`p‹tId
() << " \t\t ";

102 if–
e
->
	`fdId
() )

104 
cout
 << 
e
->
	`fdId
();

108 
cout
 << "-";

111 if–
cou¡îFœg
 )

113 
cout
 << "\t\t" << 
e
->
	`öFømes
();

114 
cout
 << "\t\t\t" << 
e
->
	`outFømes
();

117 
cout
 << 
ídl
;

118 
	}
}

120 
Epu
 *

121 
	gEpuMgr
::
	$¸óãEpu
–
EpuId
 c⁄° & 
ïuId
 )

123 
Epu
 * 
e
 = 
√w
 Epu;

124 
	`as£π
–
e
 );

125 
e
->
	`ïuId
–
ïuId
 );

127 
ïuSë_
[ 
ïuId
 ] = 
e
;

129  
e
;

130 
	}
}

133 
	gEpuMgr
::
	$dñëeEpu
–
EpuId
 c⁄° & 
ïuId
 )

135 
Epu
 * 
e
 = 
	`födEpu
–
ïuId
 );

137 if–
e
 )

139 
	`as£π
–
e
->
	`ïuId
(Ë=
ïuId
 );

141 
ïuSë_
.
	`îa£
–
ïuId
 );

142 
dñëe
 
e
;

144 
	}
}

146 
Epu
 *

147 
	gEpuMgr
::
	$födEpu
–
EpuId
 c⁄° & 
ïuId
 )

149 
EpuId
 & 
eId
 = 
c⁄°_ˇ°
< EpuId & > (
ïuId
);

150 
EpuSëIå
 
ô
 = 
ïuSë_
.
	`föd
–
eId
 );

152 if–
ô
 !
ïuSë_
.
	`íd
() )

154 
Epu
 * 
ïu
 = (*
ô
).
£c⁄d
;

156 
	`as£π
–
ïuId
 =
ïu
->
	`ïuId
() );

158  
ïu
;

164 
	}
}

	@mol/epu/EpuMgr.h

4 #i‚de‡
MOL_EPUMGR_H


5 
	#MOL_EPUMGR_H


	)

7 
	~<mﬁ/ïu/Epu.h
>

9 
	g°d
::
	tm≠
< 
	tEpuId
, 
	tEpu
 * > 
	tEpuSë
;

10 
	g°d
::
	tm≠
< 
	tEpuId
, 
	tEpu
 * >::
	tôî©‹
 
	tEpuSëIå
;

11 
	g°d
::
	tm≠
< 
	tEpuId
, 
	tEpu
 * >::
	tc⁄°_ôî©‹
 
	tEpuSëC⁄°Iå
;

13 ˛as†
	cEpuMgr
 {

15 
	mpublic
:

17 
EpuMgr
();

18 ~
EpuMgr
();

21 
	$showEpus
–
EpuId
 c⁄° &, 
boﬁ
 const & ) const;

23 
Epu
 * 
	`¸óãEpu
–
EpuId
 const & );

24 
	`dñëeEpu
–
EpuId
 const & );

25 
Epu
 * 
	`födEpu
–
EpuId
 const & );

28 
¥iv©e
:

30 
	$dumpEpu
–
Epu
 c⁄° *, 
boﬁ
 const & ) const;

31 
	$dumpHódî
–
boﬁ
 const & ) const;

33 
EpuSë
 
ïuSë_
;

	@mol/epu/FwdDomain.cpp

4 
	~<mﬁ/ïu/FwdDomaö.h
>

5 
	~<Æg‹ôhm
>

7 
	gFwdDomaö
::
	$FwdDomaö
()

9 
	`˛ór
();

10 
	}
}

12 
	gFwdDomaö
::~
	$FwdDomaö
()

14 
	`˛ór
();

15 
	}
}

18 
	gFwdDomaö
::
	$˛ór
()

20 
fdId_
 = 0;

21 
ïuLi°_
.
	`˛ór
();

22 
cuºítNumEpus_
 = 0;

23 
fdTy≥_
 = 
FdTy≥Unknown
;

24 
öFømes_
 = 0;

25 
outFømes_
 = 0;

26 
	}
}

28 
FwdDomaöId


29 
	gFwdDomaö
::
	$fdId
() const

31  
fdId_
;

32 
	}
}

35 
	gFwdDomaö
::
	$addEpu
–
Epu
 * 
e
 )

37 
	`as£π
–
e
 );

38 
ïuLi°_
.
	`push_back
–
e
 );

40 ++
cuºítNumEpus_
;

42 
	`upd©eFdTy≥
();

43 
	}
}

46 
	gFwdDomaö
::
	$ªmoveEpu
–
Epu
 * 
e
 )

48 
	`as£π
–
e
 );

50 
EpuLi°Iå
 
pos
 = 
°d
::
	`föd
–
ïuLi°_
.
	`begö
(),ÉpuLi°_.
	`íd
(), 
e
 );

51 
	`as£π
–
pos
 !
ïuLi°_
.
	`íd
() );

53 
ïuLi°_
.
	`îa£
–
pos
 );

55 --
cuºítNumEpus_
;

56 
	`upd©eFdTy≥
();

57 
	}
}

60 
	gFwdDomaö
::
	$cuºítNumEpus
() const

62  
cuºítNumEpus_
;

63 
	}
}

65 
FwdDomaöTy≥


66 
	gFwdDomaö
::
	$fdTy≥
() const

68  
fdTy≥_
;

69 
	}
}

72 
	gFwdDomaö
::
	$fdTy≥
–
FwdDomaöTy≥
 
f
 )

75 
fdTy≥_
 = 
f
;

76 
	}
}

78 
boﬁ


79 
	gFwdDomaö
::
	$À¨nögRequúed
() const

81 if–
	`fdTy≥
(Ë=
FdTy≥MP2MP
 )

83  
åue
;

87  
Ál£
;

89 
	}
}

91 
EpuLi°
 const &

92 
	gFwdDomaö
::
	$ïuLi°
() const

94  
ïuLi°_
;

95 
	}
}

97 
	gEpuLi°
 &

98 
	gFwdDomaö
::
	$ïuLi°
()

100  
ïuLi°_
;

101 
	}
}

103 
Cou¡î


104 
	gFwdDomaö
::
	$öFømes
() const

106  
öFømes_
;

107 
	}
}

110 
	gFwdDomaö
::
	$ö¸InFømes
() const

112 ++
öFømes_
;

113 
	}
}

115 
Cou¡î


116 
	gFwdDomaö
::
	$outFømes
() const

118  
outFømes_
;

119 
	}
}

122 
	gFwdDomaö
::
	$ö¸OutFømes
() const

124 ++
outFømes_
;

125 
	}
}

132 
	gFwdDomaö
::
	$dump
–
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

134 if–
ïuLi°_
.
	`em±y
() )

139 
°d
::
cout
 << 
fdId_
 << "\t\t ";

140 
°d
::
cout
 << 
fdTy≥_
 << "\t\t ";

142 
EpuLi°C⁄°Iå
 
ô
;

144  
ô
 = 
ïuLi°_
.
	`begö
(); ià!ïuLi°_.
	`íd
(); ++it )

146 
EpuId
 
eId
 = (*
ô
)->
	`ïuId
();

148 
°d
::
cout
 << 
eId
 << ", ";

151 if–
cou¡îFœg
 )

153 
°d
::
cout
 << "\t\t" << 
	`öFømes
();

154 
°d
::
cout
 << "\t\t\t" << 
	`outFømes
();

157 
°d
::
cout
 << std::
ídl
;

158 
	}
}

160 
	g°d
::
o°ªam
 &

161 
›î©‹
<<–
°d
::
o°ªam
 & 
os
, 
FwdDomaöTy≥
 c⁄° & 
	gfdt
 )

163  
	gfdt
 )

165 
	gFdTy≥P2P
:

166 
os
 << "P2P ";

169 
	gFdTy≥MP2MP
:

170 
os
 << "MP2MP";

173 
	gFdTy≥P2MP
:

174 
os
 << "P2MP ";

177 
	gFdTy≥Unknown
 :

178 
os
 << "- ";

182  
	gos
;

186 
	gFwdDomaö
::
	$upd©eFdTy≥
()

188 if–
cuºítNumEpus_
 < 2 )

190 
fdTy≥_
 = 
FdTy≥Unknown
;

193 if–
cuºítNumEpus_
 == 2 )

195 
fdTy≥_
 = 
FdTy≥P2P
;

199 
fdTy≥_
 = 
FdTy≥MP2MP
;

202 
	}
}

	@mol/epu/FwdDomain.h

4 #i‚de‡
MOL_EPU_FWDDOMAIN_H


5 
	#MOL_EPU_FWDDOMAIN_H


	)

7 
	~<mﬁ/comm⁄/Ty≥s.h
>

8 
	~<mﬁ/ïu/Epu.h
>

9 
	~<mﬁ/p‹t/P‹t.h
>

11 
	eFwdDomaöTy≥
 {

12 
	mFdTy≥Unknown
,

13 
	mFdTy≥P2P
,

14 
	mFdTy≥MP2MP
,

15 
	mFdTy≥P2MP


18 
	g°d
::
o°ªam
 & 
›î©‹
<<–
°d
::o°ªam &, 
FwdDomaöTy≥
 const & );

20 ˛as†
	cFwdDomaö
 {

22 
	mpublic
:

24 
FwdDomaö
();

25 ~
FwdDomaö
();

27 
FwdDomaöId
 
	$fdId
() const;

29 
	`addEpu
–
Epu
 * );

30 
	`ªmoveEpu
–
Epu
 * );

32 
	$cuºítNumEpus
() const;

34 
FwdDomaöTy≥
 
	$fdTy≥
() const;

35 
	`fdTy≥
–
FwdDomaöTy≥
 );

37 
boﬁ
 
	$À¨nögRequúed
() const;

39 
EpuLi°
 & 
	`ïuLi°
();

40 
EpuLi°
 c⁄° & 
	$ïuLi°
() const;

42 
Cou¡î
 
	$öFømes
() const;

43 
	$ö¸InFømes
() const;

45 
Cou¡î
 
	$outFømes
() const;

46 
	$ö¸OutFømes
() const;

48 
¥iv©e
:

50 
‰õnd
 
˛ass
 
FwdDomaöMgr
;

52 íum { 
MaxEpusAŒowed
 = 4094 };

54 
	$dump
–
boﬁ
 const & ) const;

55 
	`˛ór
();

56 
	`upd©eFdTy≥
();

58 
FwdDomaöId
 
fdId_
;

59 
EpuLi°
 
ïuLi°_
;

60 
cuºítNumEpus_
;

61 
FwdDomaöTy≥
 
fdTy≥_
;

63 
muèbÀ
 
Cou¡î
 
öFømes_
;

64 
muèbÀ
 
Cou¡î
 
outFømes_
;

65 
	}
};

	@mol/epu/FwdDomainMgr.cpp

5 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

6 
	~<mﬁ/ïu/FwdDomaöMgr.h
>

8 
	gFwdDomaöMgr
::
	$FwdDomaöMgr
()

10 
macTabÀ_
 = 
√w
 
MacTabÀ
;

11 
	`as£π
–
macTabÀ_
 );

13 
fwdDomaöSë_
.
	`˛ór
();

14 
	`as£π
–
fwdDomaöSë_
.
	`em±y
() );

15 
	}
}

17 
	gFwdDomaöMgr
::~
	$FwdDomaöMgr
()

19 if–
macTabÀ_
 )

21 
dñëe
 
macTabÀ_
;

22 
macTabÀ_
 = 0;

25 
FwdDomaöSëIå
 
ô
 = 
fwdDomaöSë_
.
	`begö
();

27  
ô
 !
fwdDomaöSë_
.
	`íd
() )

29 
FwdDomaöId
 
i
 = (*
ô
).
fú°
;

30 
FwdDomaö
 * 
e
 = (*
ô
).
£c⁄d
;

32 
fwdDomaöSë_
.
	`îa£
–
i
 );

34 if–
e
 )

36 
dñëe
 
e
;

39 ++
ô
;

42 
	`as£π
–
fwdDomaöSë_
.
	`em±y
() );

43 
	}
}

45 
MacTabÀ
 *

46 
	gFwdDomaöMgr
::
	$macTabÀ
() const

48 
	`as£π
–
macTabÀ_
 );

49  
macTabÀ_
;

50 
	}
}

53 
	gFwdDomaöMgr
::
	$showMacTabÀ
() const

55 
	`macTabÀ
()->
	`showMacE¡rõs
();

56 
	}
}

58 
FwdDomaö
 *

59 
	gFwdDomaöMgr
::
	$¸óãFwdDomaö
–
FwdDomaöId
 c⁄° & 
fwdDomaöId
 )

61 
FwdDomaö
 * 
e
 = 
√w
 FwdDomain;

62 
	`as£π
–
e
 );

63 
e
->
fdId_
 = 
fwdDomaöId
;

65 
fwdDomaöSë_
[ 
fwdDomaöId
 ] = 
e
;

67  
e
;

68 
	}
}

71 
	gFwdDomaöMgr
::
	$dñëeFwdDomaö
–
FwdDomaöId
 c⁄° & 
fwdDomaöId
 )

73 
FwdDomaö
 * 
e
 = 
	`födFwdDomaö
–
fwdDomaöId
 );

75 if–
e
 )

77 
	`as£π
–
e
->
fdId_
 =
fwdDomaöId
 );

79 
fwdDomaöSë_
.
	`îa£
–
fwdDomaöId
 );

80 
dñëe
 
e
;

82 
	}
}

84 
FwdDomaö
 *

85 
	gFwdDomaöMgr
::
	$födFwdDomaö
–
FwdDomaöId
 c⁄° & 
fwdDomaöId
 )

87 
FwdDomaöId
 & 
eId
 = 
c⁄°_ˇ°
< FwdDomaöId & > (
fwdDomaöId
);

88 
FwdDomaöSëIå
 
ô
 = 
fwdDomaöSë_
.
	`föd
–
eId
 );

90 if–
ô
 !
fwdDomaöSë_
.
	`íd
() )

92 
FwdDomaö
 * 
fwdDomaö
 = (*
ô
).
£c⁄d
;

94 
	`as£π
–
fwdDomaöId
 =
fwdDomaö
->
fdId_
 );

96  
fwdDomaö
;

102 
	}
}

105 
	gFwdDomaöMgr
::
	$showFds
–
FwdDomaöId
 c⁄° & 
fdId
, 
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

107 
FwdDomaöSëC⁄°Iå
 
ô
;

108 
FwdDomaöId
 
eid
;

109 
FwdDomaö
 *
e
;

111 
	`dumpHódî
–
cou¡îFœg
 );

113 if–
fdId
 == 0 )

115 if–
fwdDomaöSë_
.
	`em±y
() )

120  
ô
 = 
fwdDomaöSë_
.
	`begö
();

121 
ô
 !
fwdDomaöSë_
.
	`íd
(); it++ )

124 
eid
 = (*
ô
).
fú°
;

125 
e
 = (*
ô
).
£c⁄d
;

127 
	`as£π
–
eid
 =
e
->
fdId_
 );

129 
e
->
	`dump
–
cou¡îFœg
 );

134 
ô
 = 
fwdDomaöSë_
.
	`föd
–
fdId
 );

136 if–
ô
 !
fwdDomaöSë_
.
	`íd
() )

138 
e
 = (*
ô
).
£c⁄d
;

140 
	`as£π
–
fdId
 =
e
->
fdId_
 );

142 
e
->
	`dump
–
cou¡îFœg
 );

145 
	}
}

148 
	gFwdDomaöMgr
::
	$dumpHódî
–
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

150 
cout
 << "-------------------------------------------------------------------------" << 
ídl
;

151 
cout
 <<

152 
VbNode
.
	`tokíSåög
() << " Id \t " <<

154 
EpuNode
.
	`tokíSåög
() << " Id(s)";

155 if–
cou¡îFœg
 )

157 
cout
 << "\t\tIn Packets\t\tOut Packets";

159 
cout
 << 
ídl
;

160 
cout
 << "-------------------------------------------------------------------------" << 
ídl
;

161 
	}
}

	@mol/epu/FwdDomainMgr.h

4 #i‚de‡
MOL_FWDDOMAINMGR_H


5 
	#MOL_FWDDOMAINMGR_H


	)

7 
	~<mﬁ/ïu/FwdDomaö.h
>

8 
	~<mﬁ/ïu/MacTabÀ.h
>

10 
	g°d
::
	tm≠
< 
	tFwdDomaöId
, 
	tFwdDomaö
 * > 
	tFwdDomaöSë
;

11 
	g°d
::
	tm≠
< 
	tFwdDomaöId
, 
	tFwdDomaö
 * >::
	tôî©‹
 
	tFwdDomaöSëIå
;

12 
	g°d
::
	tm≠
< 
	tFwdDomaöId
, 
	tFwdDomaö
 * >::
	tc⁄°_ôî©‹
 
	tFwdDomaöSëC⁄°Iå
;

14 ˛as†
	cFwdDomaöMgr
 {

16 
	mpublic
:

18 
FwdDomaöMgr
();

19 ~
FwdDomaöMgr
();

21 
MacTabÀ
 * 
	$macTabÀ
() const;

22 
	$showMacTabÀ
() const;

24 
FwdDomaö
 * 
	`¸óãFwdDomaö
–
FwdDomaöId
 const & );

25 
	`dñëeFwdDomaö
–
FwdDomaöId
 const & );

26 
FwdDomaö
 * 
	`födFwdDomaö
–
FwdDomaöId
 const & );

28 
	$showFds
–
FwdDomaöId
 c⁄° &, 
boﬁ
 const & ) const;

30 
¥iv©e
:

32 
	`FwdDomaöMgr
–
FwdDomaöMgr
 const & );

33 
FwdDomaöMgr
 & 
›î©‹
=( FwdDomainMgr const & );

35 
	$dumpFwdDomaö
–
FwdDomaö
 c⁄° *, 
boﬁ
 const & ) const;

36 
	$dumpHódî
–
boﬁ
 const &) const;

38 
MacTabÀ
 * 
macTabÀ_
;

39 
FwdDomaöSë
 
fwdDomaöSë_
;

	@mol/epu/MacTable.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/ïu/MacTabÀ.h
>

7 
	gMacTabÀ
::
	$MacTabÀ
()

9 
macE¡rõs_
.
	`˛ór
();

10 
	`as£π
–
macE¡rõs_
.
	`em±y
() );

11 
	}
}

13 
	gMacTabÀ
::~
	$MacTabÀ
()

15 
MacE¡rySëIå
 
ô
 = 
macE¡rõs_
.
	`begö
();

17  
ô
 !
macE¡rõs_
.
	`íd
() )

19 
MacE¡ryKey
 
i
 = (*
ô
).
fú°
;

20 
MacE¡ry
 * 
e
 = (*
ô
).
£c⁄d
;

22 
macE¡rõs_
.
	`îa£
–
i
 );

24 if–
e
 )

26 
dñëe
 
e
;

27 
e
 = 0;

30 ++
ô
;

33 
	`as£π
–
macE¡rõs_
.
	`em±y
() );

34 
	}
}

37 
	gMacTabÀ
::
	$showMacE¡rõs
() const

39 
	`dumpHódî
();

41 if–
macE¡rõs_
.
	`em±y
() )

46  
MacE¡rySëC⁄°Iå
 
ô
 = 
macE¡rõs_
.
	`begö
(); ià!macE¡rõs_.
	`íd
(); it++ )

49 
MacE¡ryKey
 
mek
 = (*
ô
).
fú°
;

50 
MacE¡ry
 * 
me
 = (*
ô
).
£c⁄d
;

52 
	`as£π
–
mek
 =
me
->
key_
 );

54 
	`dumpMacE¡ry
–
me
 );

56 
	}
}

59 
	gMacTabÀ
::
	$À¨nSa
–
MacAddr
 c⁄° & 
mac
, 
FwdDomaöId
 c⁄° & 
fdId
, 
EpuId
 c⁄° & 
ïuId
 )

61 
MacE¡ryKey
 
mek
;

62 
mek
.
mac_
 = 
mac
;

63 
mek
.
domaöId_
 = 
fdId
;

65 
MacE¡ry
 * 
meExi°ög
 = 
	`födMacE¡ry
–
mek
 );

67 if–! 
meExi°ög
 )

71 
MacE¡ry
 * 
me
 = 
	`¸óãMacE¡ry
–
mek
 );

72 
	`as£π
–
me
 );

73 
	`as£π
–
mek
 =
me
->
key_
 );

75 
me
->
ïuId_
 = 
ïuId
;

83 if–
meExi°ög
->
ïuId_
 !
ïuId
 )

86 
cout
 << "\t\t\àMAC Move: Ma¯Add∏" << 
mac
 <<

87 ", " << 
VbNode
.
	`tokíSåög
(Ë<< " Id = " << 
fdId
 <<

88 "; Old " << 
EpuNode
.
	`tokíSåög
(Ë<< " = " << 
meExi°ög
->
ïuId_
 <<

89 ", New " << 
EpuNode
.
	`tokíSåög
(Ë<< " = " << 
ïuId
 <<

90 
ídl
;

92 
meExi°ög
->
ïuId_
 = 
ïuId
;

95 
	}
}

97 
MacE¡ry
 *

98 
	gMacTabÀ
::
	$lookupDa
–
MacAddr
 c⁄° & 
mac
, 
FwdDomaöId
 c⁄° & 
fdId
 ) const

100 
MacE¡ryKey
 
mek
;

101 
mek
.
mac_
 = 
mac
;

102 
mek
.
domaöId_
 = 
fdId
;

104 
MacE¡ry
 * 
meExi°ög
 = 
	`födMacE¡ry
–
mek
 );

106 –
meExi°ög
 );

107 
	}
}

111 
MacE¡ry
 *

112 
	gMacTabÀ
::
	$¸óãMacE¡ry
–
MacE¡ryKey
 c⁄° & 
mek
 )

115 
MacE¡ry
 * 
e
 = 
√w
 MacEntry;

116 
	`as£π
–
e
 );

117 
e
->
key_
 = 
mek
;

120 
macE¡rõs_
[ 
mek
 ] = 
e
;

122  
e
;

123 
	}
}

126 
	gMacTabÀ
::
	$dñëeMacE¡ry
–
MacE¡ryKey
 c⁄° & 
mek
 )

128 
MacE¡ry
 * 
me
 = 
	`födMacE¡ry
–
mek
 );

130 if–
me
 )

132 
	`as£π
–
mek
 =
me
->
key_
 );

135 
macE¡rõs_
.
	`îa£
–
mek
 );

138 
dñëe
 
me
;

140 
	}
}

142 
MacE¡ry
 *

143 
	gMacTabÀ
::
	$födMacE¡ry
–
MacE¡ryKey
 c⁄° & 
mek
 ) const

146 
MacE¡rySëC⁄°Iå
 
ô
 = 
macE¡rõs_
.
	`föd
–
mek
 );

148 if–
ô
 !
macE¡rõs_
.
	`íd
() )

150 
MacE¡ry
 * 
me
 = (*
ô
).
£c⁄d
;

152 
	`as£π
–
mek
 =
me
->
key_
 );

154  
me
;

160 
	}
}

163 
	gMacTabÀ
::
	$dumpHódî
() const

165 
cout
 << "----------------------------------------------" << 
ídl
;

166 
cout
 << "Mac Address \t\t " <<

167 
VbNode
.
	`tokíSåög
() << " Id \t" <<

168 
EpuNode
.
	`tokíSåög
(Ë<< " Id " << 
ídl
;

169 
cout
 << "----------------------------------------------" << 
ídl
;

170 
	}
}

173 
	gMacTabÀ
::
	$dumpMacE¡ry
–
MacE¡ry
 c⁄° * 
me
 ) const

175 
cout
 << (
me
->
key_
).
mac_
 << " \t\t\t ";

176 
cout
 << (
me
->
key_
).
domaöId_
 << " \t\t ";

177 
cout
 << (
me
->
ïuId_
Ë<< 
ídl
;

178 
	}
}

183 
	gMacE¡ryKey
::
	$MacE¡ryKey
()

185 
	`˛ór
();

186 
	}
}

188 
	gMacE¡ryKey
::~
	$MacE¡ryKey
()

190 
	`˛ór
();

191 
	}
}

194 
	gMacE¡ryKey
::
	$˛ór
()

196 
mac_
 = 0;

197 
domaöId_
 = 0;

198 
	}
}

200 
boﬁ


201 
	gMacE¡ryKey
::
›î©‹
==–
MacE¡ryKey
 c⁄° & 
rhs
 ) const

203 –(
mac_
 =
rhs
.mac_Ë&& (
domaöId_
 ==Ñhs.domainId_) );

206 
boﬁ


207 
	gMacE¡ryKey
::
›î©‹
<–
MacE¡ryKey
 c⁄° & 
rhs
 ) const

209 –(
domaöId_
 < 
rhs
.domainId_) ||

210 –(
domaöId_
 =
rhs
.domaöId_Ë&& (
mac_
 <Ñhs.mac_) ) );

216 
	gMacE¡ry
::
	$MacE¡ry
()

218 
	`˛ór
();

219 
	}
}

221 
	gMacE¡ry
::~
	$MacE¡ry
()

223 
	`˛ór
();

224 
	}
}

227 
	gMacE¡ry
::
	$˛ór
()

229 
key_
.
	`˛ór
();

230 
ïuId_
 = 0;

231 
	}
}

233 
boﬁ


234 
	gMacE¡ry
::
›î©‹
==–
MacE¡ry
 c⁄° & 
rhs
 ) const

236 –(
key_
 =
rhs
.key_Ë&& (
ïuId_
 ==Ñhs.epuId_) );

	@mol/epu/MacTable.h

4 #i‚de‡
MOL_MACTABLE_H


5 
	#MOL_MACTABLE_H


	)

7 
	~<˛i/comm⁄/Føme.h
>

8 
	~<mﬁ/ïu/Epu.h
>

10 ˛as†
	cMacE¡ryKey
 {

12 
	mpublic
:

14 
MacE¡ryKey
();

15 ~
MacE¡ryKey
();

16 
˛ór
();

18 
boﬁ
 
	m›î©‹
==–
MacE¡ryKey
 const & ) const;

19 
boﬁ
 
	m›î©‹
<–
MacE¡ryKey
 const & ) const;

21 
MacAddr
 
	mmac_
;

22 
FwdDomaöId
 
	mdomaöId_
;

25 ˛as†
	cMacE¡ry
 {

27 
	mpublic
:

29 
MacE¡ry
();

30 ~
MacE¡ry
();

31 
˛ór
();

33 
boﬁ
 
	m›î©‹
==–
MacE¡ry
 const & ) const;

35 
MacE¡ryKey
 
	mkey_
;

36 
EpuId
 
	mïuId_
;

39 
	g°d
::
	tm≠
< 
	tMacE¡ryKey
, 
	tMacE¡ry
 * > 
	tMacE¡rySë
;

40 
	g°d
::
	tm≠
< 
	tMacE¡ryKey
, 
	tMacE¡ry
 * >::
	tôî©‹
 
	tMacE¡rySëIå
;

41 
	g°d
::
	tm≠
< 
	tMacE¡ryKey
, 
	tMacE¡ry
 * >::
	tc⁄°_ôî©‹
 
	tMacE¡rySëC⁄°Iå
;

43 ˛as†
	cMacTabÀ
 {

45 
	mpublic
:

47 
MacTabÀ
();

48 ~
MacTabÀ
();

50 
	$showMacE¡rõs
() const;

52 
	`À¨nSa
–
MacAddr
 c⁄° &, 
FwdDomaöId
 c⁄° &, 
EpuId
 const & );

53 
MacE¡ry
 * 
	$lookupDa
–
MacAddr
 c⁄° &, 
FwdDomaöId
 const & ) const;

55 
¥iv©e
:

57 
MacE¡ry
 * 
	`¸óãMacE¡ry
–
MacE¡ryKey
 const & );

58 
	`dñëeMacE¡ry
–
MacE¡ryKey
 const & );

59 
MacE¡ry
 * 
	$födMacE¡ry
–
MacE¡ryKey
 const & ) const;

61 
	$dumpHódî
() const;

62 
	$dumpMacE¡ry
–
MacE¡ry
 const * ) const;

64 
MacE¡rySë
 
macE¡rõs_
;

	@mol/nonlist.cpp

4 sig√d 
	gwhichTag
;

5 
VœnTag
 
	gvœnTag
;

6 
VœnHódî
 
	gvœnHódî
;

8 
	gwhichTag
 = -1;

9 
	gvœnTag
.
˛ór
();

10 
	gvœnHódî
.
˛ór
();

12 
	$doVœnHódîHñp
–c⁄° * 
a
, c⁄° * 
b
 )

14 
	`¥ötHñp
–
DŸ1adNode
 );

15 
	`¥ötHñp
–
DŸ1qNode
 );

16 
	}
}

18 
	$ac˚±VhDŸ1adTok
–c⁄° * 
a
, c⁄° * 
b
 )

20 if–
whichTag
 == -1 || whichTag == 0 )

21 ++
whichTag
;

23 
vœnTag
.
vœnTy≥_
 = 
VœnTy≥DŸ1ad
;

24 
	}
}

26 
	$ac˚±VhDŸ1qTok
–c⁄° * 
a
, c⁄° * 
b
 )

28 if–
whichTag
 == -1 || whichTag == 0 )

29 ++
whichTag
;

31 
vœnTag
.
vœnTy≥_
 = 
VœnTy≥DŸ1q
;

32 
	}
}

34 
	$doVh1Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

36 
	`¥ötHñp
–
DŸ1adNode
 );

37 
	`¥ötHñp
–
DŸ1qNode
 );

38 
	}
}

40 
	$ac˚±VhCosTok
–c⁄° * 
a
, c⁄° * 
b
 )

42 
	}
}

44 
	$doVhCosHñp
–c⁄° * 
a
, c⁄° * 
b
 )

46 
	`¥ötHñp
–
I≈utNumbîNode
 );

47 
	}
}

49 
	$gëCosVÆ
–c⁄° 
x
 )

51 
vœnTag
.
cosVÆue_
 = 
x
;

52 
	}
}

54 
	$doVhCosVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

56 
	`¥ötHñp
–
O≥nBø˚Node
 );

57 
	}
}

59 
	$ac˚±VhO≥nBø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

61 
	}
}

63 
	$doVhO≥nBø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

65 
	`¥ötHñp
–
VœnIdNode
 );

66 
	}
}

68 
	$ac˚±VhVœnIdTok
–c⁄° * 
a
, c⁄° * 
b
 )

70 
	}
}

72 
	$gëVœnIdVÆ
–c⁄° 
x
 )

74 
vœnTag
.
vœnidVÆue_
 = 
x
;

75 
	}
}

77 
	$doVhVœnIdHñp
–c⁄° * 
a
, c⁄° * 
b
 )

79 
	`¥ötHñp
–
I≈utNumbîNode
 );

80 
	}
}

82 
	$doVhVœnIdVÆueHñp
–c⁄° * 
a
, c⁄° * 
b
 )

84 
	`¥ötHñp
–
Clo£Bø˚Node
 );

85 
	}
}

87 
	$ac˚±VhClo£Bø˚Tok
–c⁄° * 
a
, c⁄° * 
b
 )

89 
vœnHódî
.
èg_
[ 
whichTag
 ] = 
vœnTag
;

90 
	}
}

92 
	$doVhClo£Bø˚Hñp
–c⁄° * 
a
, c⁄° * 
b
 )

94 
	`¥ötHñp
–
Rëu∫Node
 );

95 
	`¥ötHñp
–
DŸ1adNode
 );

96 
	`¥ötHñp
–
DŸ1qNode
 );

97 
	}
}

99 
	$ac˚±VhClo£Bø˚TokEﬁ
–c⁄° * 
a
, c⁄° * 
b
 )

103 
	}
}

107 
	gVhDŸ1adRuÀNode
 = 
DŸ1adTok
[ &
ac˚±VhDŸ1adTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

108 
	gVhDŸ1qRuÀNode
 = 
DŸ1qTok
[ &
ac˚±VhDŸ1qTok
 ] >> (
Vh1Hñp
 | 
VhCosRuÀNode
 | 
VhO≥nBø˚RuÀNode
);

109 
	gVh1Hñp
 = 
HñpTok
[ &
doVh1Hñp
 ];

111 
	gVhCosRuÀNode
 = 
CosTok
[ &
ac˚±VhCosTok
 ] >> (
VhCosHñp
 | 
VhCosVÆueNode
);

112 
	gVhCosHñp
 = (
HñpTok
)[ &
doVhCosHñp
 ];

113 
	gVhCosVÆueNode
 = 
uöt_p
[ &
gëCosVÆ
 ] >> (
VhCosVÆueHñp
 | 
VhO≥nBø˚RuÀNode
);

114 
	gVhCosVÆueHñp
 = (
HñpTok
)[ &
doVhCosVÆueHñp
 ];

116 
	gVhO≥nBø˚RuÀNode
 = 
O≥nBø˚Tok
[ &
ac˚±VhO≥nBø˚Tok
 ] >> (
VhO≥nBø˚Hñp
 | 
VhVœnIdRuÀNode
 );

117 
	gVhO≥nBø˚Hñp
 = (
HñpTok
)[ &
doVhO≥nBø˚Hñp
 ];

119 
	gVhVœnIdRuÀNode
 = 
VœnIdTok
[ &
ac˚±VhVœnIdTok
 ] >> (
VhVœnIdHñp
 | 
VhVœnIdVÆueRuÀNode
);

120 
	gVhVœnIdHñp
 = (
HñpTok
)[ &
doVhVœnIdHñp
 ];

121 
	gVhVœnIdVÆueRuÀNode
 = 
uöt_p
[ &
gëVœnIdVÆ
 ] >> (
VhVœnIdVÆueHñp
 | 
VhClo£Bø˚RuÀNode
);

122 
	gVhVœnIdVÆueHñp
 = (
HñpTok
)[ &
doVhVœnIdVÆueHñp
 ];

124 
	gVhClo£Bø˚RuÀNode
 = 
Clo£Bø˚Tok
[ &
ac˚±VhClo£Bø˚Tok
 ] >> (
VhClo£Bø˚Hñp
 | 
VhClo£Bø˚Eﬁ
 | 
VhDŸ1adRuÀNode
 | 
VhDŸ1qRuÀNode
);

125 
	gVhClo£Bø˚Hñp
 = (
HñpTok
)[ &
doVhClo£Bø˚Hñp
 ];

126 
	gVhClo£Bø˚Eﬁ
 = 
íd_p
[ &
ac˚±Clo£Bø˚TokEﬁ
 ];

129 
	gVhDŸ1adRuÀNode
, 
	gVhDŸ1qRuÀNode
, 
	gVh1Hñp
, 
	gVhCosRuÀNode
, 
	gVhCosHñp
,

130 
	gVhCosVÆueNode
, 
	gVhCosVÆueHñp
, 
	gVhO≥nBø˚RuÀNode
, 
	gVhO≥nBø˚Hñp
,

131 
	gVhVœnIdRuÀNode
, 
	gVhVœnIdHñp
, 
	gVhVœnIdVÆueRuÀNode
, 
	gVhVœnIdVÆueHñp
,

132 
	gVhClo£Bø˚RuÀNode
, 
	gVhClo£Bø˚Hñp
, 
	gVhClo£Bø˚Eﬁ


	@mol/port/Port.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/p‹t/P‹t.h
>

6 
	~<Æg‹ôhm
>

8 
	gP‹t
::
	$P‹t
()

10 
ïuLi°_
.
	`˛ór
();

11 
öFømes_
 = 0;

12 
outFømes_
 = 0;

13 
	}
}

15 
	gP‹t
::~
	$P‹t
()

17 
ïuLi°_
.
	`˛ór
();

18 
öFømes_
 = 0;

19 
outFømes_
 = 0;

20 
	}
}

23 
	gP‹t
::
	$addEpu
–
Epu
 * 
e
 )

25 
	`as£π
–
e
 );

26 
ïuLi°_
.
	`push_back
–
e
 );

27 
	}
}

30 
	gP‹t
::
	$ªmoveEpu
–
Epu
 * 
e
 )

32 
	`as£π
–
e
 );

34 
EpuLi°Iå
 
pos
 = 
°d
::
	`föd
–
ïuLi°_
.
	`begö
(),ÉpuLi°_.
	`íd
(), 
e
 );

35 
	`as£π
–
pos
 !
ïuLi°_
.
	`íd
() );

37 
ïuLi°_
.
	`îa£
–
pos
 );

38 
	}
}

41 
	gP‹t
::
	$showRun
–
o°ªam
 & 
os
 ) const

43 
EpuLi°C⁄°Iå
 
ô
;

45 
os
 << "!" << 
ídl
;

46 
os
 << " " << 
P‹tNode
.
	`tokíSåög
(Ë<< " " << 
id_
 << 
ídl
;

50  
ô
 = 
ïuLi°_
.
	`begö
(); ià!ïuLi°_.
	`íd
(); ++it )

52 (*
ô
)->
	`showRun
–
os
 );

54 
	}
}

56 
Cou¡î


57 
	gP‹t
::
	$öFømes
() const

59  
öFømes_
;

60 
	}
}

63 
	gP‹t
::
	$ö¸InFømes
()

65 ++
öFømes_
;

66 
	}
}

68 
Cou¡î


69 
	gP‹t
::
	$outFømes
() const

71  
outFømes_
;

72 
	}
}

75 
	gP‹t
::
	$ö¸OutFømes
()

77 ++
outFømes_
;

78 
	}
}

80 
Epu
 const *

81 
	gP‹t
::
	$ögªssM©chCœssify
–
Føme
 c⁄° & 
‰ame
 )

83 
Epu
 c⁄° * 
m©chEpu
 = 0;

84 sig√d 
be°M©chDïthSoF¨
 = -1;

86 sig√d 
c⁄èömítDïth
;

88 
VœnHódî
 
‰ameVœnHódî
 = 
‰ame
.
	`vœnHódî
();

90 
EpuLi°C⁄°Iå
 
ô
;

92  
ô
 = 
ïuLi°_
.
	`begö
(); ià!ïuLi°_.
	`íd
(); ++it )

94 
Epu
 c⁄° * 
ˇndid©eEpu
 = (*
ô
);

95 
	`as£π
–
ˇndid©eEpu
 );

99 
EpuM©chCrôîü
 c⁄° & 
ˇndid©eM©chCrôîü
 =

100 
ˇndid©eEpu
->
	`ögªssM©ch
();

102 
c⁄èömítDïth
 = -1;

103 if–
ˇndid©eM©chCrôîü
.
	`c⁄èös
–
‰ameVœnHódî
, 
c⁄èömítDïth
 ) )

107 if–
c⁄èömítDïth
 > 
be°M©chDïthSoF¨
 )

109 
m©chEpu
 = 
ˇndid©eEpu
;

110 
be°M©chDïthSoF¨
 = 
c⁄èömítDïth
;

119  
m©chEpu
;

120 
	}
}

123 
	gP‹t
::
	$dump
–
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

125 if–
ïuLi°_
.
	`em±y
() )

130 
EpuLi°C⁄°Iå
 
ô
;

132 
cout
 << 
id_
 << " \t\t ";

134  
ô
 = 
ïuLi°_
.
	`begö
(); ià!ïuLi°_.
	`íd
(); ++it )

136 
EpuId
 
eId
 = (*
ô
)->
	`ïuId
();

137 
cout
 << 
eId
 << ",";

140 if–
cou¡îFœg
 )

142 
cout
 << "\t\t\t" << 
	`öFømes
();

143 
cout
 << "\t\t\t" << 
	`outFømes
();

146 
cout
 << 
ídl
;

147 
	}
}

	@mol/port/Port.h

4 #i‚de‡
MOL_PORT_PORT_H


5 
	#MOL_PORT_PORT_H


	)

7 
	~<mﬁ/comm⁄/Ty≥s.h
>

8 
	~<mﬁ/ïu/Epu.h
>

10 
	g°d
::
	tve˘‹
< 
	tEpu
 * > 
	tEpuLi°
;

11 
	g°d
::
	tve˘‹
< 
	tEpu
 * >::
	tôî©‹
 
	tEpuLi°Iå
;

12 
	g°d
::
	tve˘‹
< 
	tEpu
 * >::
	tc⁄°_ôî©‹
 
	tEpuLi°C⁄°Iå
;

14 ˛as†
	cP‹t
 {

16 
	mpublic
:

18 
P‹t
();

19 ~
P‹t
();

21 
addEpu
–
Epu
 * );

22 
ªmoveEpu
–
Epu
 * );

24 
showRun
–
°d
::
o°ªam
 & 
os
 ) const;

26 
Cou¡î
 
	$öFømes
() const;

27 
	`ö¸InFømes
();

29 
Cou¡î
 
	$outFømes
() const;

30 
	`ö¸OutFømes
();

32 
Epu
 c⁄° * 
	`ögªssM©chCœssify
–
Føme
 const & );

34 
¥iv©e
:

36 
‰õnd
 
˛ass
 
P‹tMgr
;

38 
	$dump
–
boﬁ
 const & ) const;

40 
P‹tId
 
id_
;

41 
EpuLi°
 
ïuLi°_
;

43 
Cou¡î
 
öFømes_
;

44 
Cou¡î
 
outFømes_
;

	@mol/port/PortMgr.cpp

4 
	~<˛i/comm⁄/Comm⁄P¨£rNodes.h
>

5 
	~<mﬁ/p‹t/P‹tMgr.h
>

7 
	gP‹tMgr
::
	$P‹tMgr
()

9 
numP‹ts_
 = 
MaxP‹ts
;

11 
p‹t_
 = 
√w
 
P‹t
 * [ 
numP‹ts_
 ];

12 
	`as£π
–
p‹t_
 );

14  
ui
 = 0; uò< 
numP‹ts_
; ++ui )

16 
p‹t_
[ 
ui
 ] = 
√w
 
P‹t
;

17 
	`as£π
–
p‹t_
[ 
ui
 ] );

19 
p‹t_
[ 
ui
 ]->
id_
 = ui;

22 
	}
}

24 
	gP‹tMgr
::~
	$P‹tMgr
()

26  
ui
 = 0; uò< 
numP‹ts_
; ++ui )

28 
dñëe
 
p‹t_
[ 
ui
 ];

29 
p‹t_
[ 
ui
 ] = 0;

32 
dñëe
 
p‹t_
;

33 
p‹t_
 = 0;

35 
numP‹ts_
 = 0;

36 
	}
}

38 
P‹t
 *

39 
	gP‹tMgr
::
	$p‹t
–c⁄° 
P‹tId
 & 
pId
 ) const

41 
	`as£π
–
pId
 < 
numP‹ts_
 );

43 –
p‹t_
[ 
pId
 ] );

44 
	}
}

47 
	gP‹tMgr
::
	$showRun
–
o°ªam
 & 
os
 ) const

49  
ui
 = 0; uò< 
numP‹ts_
; ++ui )

51 
	`as£π
–
p‹t_
[ 
ui
 ] );

53 
p‹t_
[ 
ui
 ]->
	`showRun
–
os
 );

56 
	}
}

59 
	gP‹tMgr
::
	$showP‹ts
–
P‹tId
 c⁄° & 
pId
, 
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

61 if–
pId
 >
numP‹ts_
 )

63 
cout
 << "Comm™d REJECTED:Ö‹ànumbî ouào‡ønge." << 
ídl
;

67 
	`dumpHódî
–
cou¡îFœg
 );

69 if–
pId
 ) {

70 
p‹t_
[ 
pId
 ]->
	`dump
–
cou¡îFœg
 );

74  
ui
 = 0; uò< 
numP‹ts_
; ++ui )

76 
p‹t_
[ 
ui
 ]->
	`dump
–
cou¡îFœg
 );

79 
	}
}

82 
	gP‹tMgr
::
	$numP‹ts
() const

84  
numP‹ts_
;

85 
	}
}

88 
	gP‹tMgr
::
	$dumpHódî
–
boﬁ
 c⁄° & 
cou¡îFœg
 ) const

90 
cout
 << "-------------------------------------------------------------------------" << 
ídl
;

91 
cout
 << 
P‹tNode
.
	`tokíSåög
(Ë<< " Id \à" << 
EpuNode
.tokenString() << " member Id(s)";

92 if–
cou¡îFœg
 )

94 
cout
 << "\tIn Packets\t\tOut Packets";

96 
cout
 << 
ídl
;

97 
cout
 << "-------------------------------------------------------------------------" << 
ídl
;

98 
	}
}

	@mol/port/PortMgr.h

4 #i‚de‡
MOL_PORTMGR_H


5 
	#MOL_PORTMGR_H


	)

7 
	~<mﬁ/comm⁄/Ty≥s.h
>

8 
	~<mﬁ/p‹t/P‹t.h
>

10 ˛as†
	cP‹tMgr
 {

12 
	mpublic
:

14 
P‹tMgr
();

15 ~
P‹tMgr
();

17 
	$showRun
–
o°ªam
 & ) const;

18 
	$showP‹ts
–
P‹tId
 c⁄° &, 
boﬁ
 const & ) const;

20 
	$numP‹ts
() const;

22 
P‹t
 * 
	$p‹t
–
P‹tId
 const & ) const;

24 
¥iv©e
:

26 
	`P‹tMgr
–
P‹tMgr
 const & );

27 
P‹tMgr
 & 
›î©‹
=( PortMgr const & );

29 íum { 
MaxP‹ts
 = 8 };

31 
	$dumpHódî
–
boﬁ
 const & ) const;

32 
	$dumpP‹t
–
P‹t
 const * ) const;

34 
numP‹ts_
;

35 
P‹t
 ** 
p‹t_
;

36 
	}
};

	@spirit/spiritinclude.h

8 
	~<boo°_1_52_0/boo°/•úô/ö˛ude/˛assic.hµ
>

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/boost_1_52_0/boost/spirit/include/classic.hpp

9 #i‚de‡
BOOST_SPIRIT_INCLUDE_CLASSIC


10 
	#BOOST_SPIRIT_INCLUDE_CLASSIC


	)

11 
	~<boo°/•úô/home/˛assic.hµ
>

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@
1
.
1
/usr/include
59
1442
cli/common/CommonParserNodes.cpp
cli/common/CommonParserNodes.h
cli/common/Frame.cpp
cli/common/Frame.h
cli/common/Types.cpp
cli/common/Types.h
cli/config/ConfigParser.cpp
cli/config/ConfigParser.h
cli/config/ConfigParserHandler.cpp
cli/config/ConfigParserHandler.h
cli/epu/EpuParser.cpp
cli/epu/EpuParser.h
cli/epu/EpuParserHandler.cpp
cli/epu/EpuParserHandler.h
cli/global/GlobalParser.cpp
cli/global/GlobalParser.h
cli/global/GlobalParserHandler.cpp
cli/global/GlobalParserHandler.h
cli/main/ParserMain.cpp
cli/main/ParserMain.h
cli/port/PortParser.cpp
cli/port/PortParser.h
cli/port/PortParserHandler.cpp
cli/port/PortParserHandler.h
cli/simul/SimulParser.cpp
cli/simul/SimulParser.h
cli/simul/SimulParserHandler.cpp
cli/simul/SimulParserHandler.h
dataplane/DataPlaneMgr.cpp
dataplane/DataPlaneMgr.h
dataplane/MetaData.h
main.cpp
mol/common/MolVp.cpp
mol/common/MolVp.h
mol/common/Types.h
mol/epu/Epu.cpp
mol/epu/Epu.h
mol/epu/EpuMgr.cpp
mol/epu/EpuMgr.h
mol/epu/FwdDomain.cpp
mol/epu/FwdDomain.h
mol/epu/FwdDomainMgr.cpp
mol/epu/FwdDomainMgr.h
mol/epu/MacTable.cpp
mol/epu/MacTable.h
mol/nonlist.cpp
mol/port/Port.cpp
mol/port/Port.h
mol/port/PortMgr.cpp
mol/port/PortMgr.h
spirit/spiritinclude.h
/usr/include/assert.h
/usr/include/boost_1_52_0/boost/spirit/include/classic.hpp
/usr/include/features.h
/usr/include/bits/predefs.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs-64.h
